{"version":3,"sources":["webpack:///./node_modules/@firebase/database/dist/index.cjs.js","webpack:///./node_modules/node-libs-browser/mock/process.js","webpack:///./node_modules/firebase/database/dist/index.esm.js","webpack:///./node_modules/path-browserify/index.js"],"names":["Object","defineProperty","exports","value","ex","id","firebase","tslib","util","logger$1","component","DOMStorageWrapper","domStorage_","this","prefix_","prototype","set","key","removeItem","prefixedName_","setItem","stringify","get","storedVal","getItem","jsonEval","remove","name","toString","MemoryStorage","cache_","isInMemoryStorage","contains","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","sha1","str","utf8Bytes","stringToByteArray","Sha1","update","sha1Bytes","digest","base64","encodeByteArray","buildLogMessage_","varArgs","_i","arguments","length","message","i","arg","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","assert","logLevel","LogLevel","VERBOSE","log","bind","logWrapper","prefix","__spread","error","fatal","Error","warn","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","fn","hasOwnProperty","doubleToIEEE754String","v","s","f","ln","Infinity","Math","abs","pow","min","floor","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","INTEGER_REGEXP_","RegExp","test","intVal","exceptionGuard","setTimeout","stack","setTimeoutNonBlocking","time","timeout","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","enumerable","configurable","getFront","getLength","popFront","getBack","pathString","toUrlEncodedString","encodeURIComponent","String","slice","begin","parent","pieces","child","childPathObj","childPieces","isEmpty","relativePath","outerPath","innerPath","outer","inner","comparePaths","left","right","leftKeys","rightKeys","cmp","equals","other","j","ValidationPath","path","errorPrefix_","parts_","byteLength_","max","stringLength","checkValid_","pop","last","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","RepoInfo","host","secure","namespace","webSocketOnly","persistenceKey","includeNamespaceInQueryParams","domain","indexOf","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","type","params","connURL","pairs","toURLString","PUSH_CHARS","lastPushTime","lastRandChars","__EMPTY_NODE","MAX_NODE","parseRepoInfo","dataURL","parsedUrl","parseDatabaseURL","location","protocol","scheme","repoInfo","subdomain","port","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","replace","decodePath","queryParams","queryString","e_1","_a","results","charAt","_b","__values","_c","next","done","segment","kv","e_1_1","return","call","decodeQuery","hostWithoutPort","dotInd","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","isValidKey","isValidPathString","isValidPriority","priority","validateFirebaseDataArg","fnName","argumentNumber","optional","undefined","validateFirebaseData","errorPrefix","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergeDataArg","mergePaths","curPath","prevPath","validateFirebaseMergePaths","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","isValidRootPathString","validateBoolean","bool","OnDisconnect","repo_","cancel","onComplete","validateArgCount","validateCallback","deferred","Deferred","onDisconnectCancel","wrapCallback","promise","onDisconnectSet","setWithPriority","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","snapshot","toJSON","nextPushId","now","duplicateTime","timeStampChars","random","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","_super","__extends","val","isDefinedOn","assertionError","maxPost","makePost","indexValue","KEY_INDEX","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","priorityHashText","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","EMPTY_NODE","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","index","action","exportFormat","getValue","hash","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","_defaultIndexMap","PRIORITY_INDEX","PriorityIndex","aPriority","bPriority","indexCmp","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","result","hasNext","peek","LLRBNode","color","RED","SortedMap","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","LOG_2","Base12Num","num","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","root","base12","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","buildFrom12Array","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","safeGet","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","indexName","newIndexSet","__assign","newIndexes","addToIndexes","_this","map","indexedChildren","existingSnap","newChildren","removeFromIndexes","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","ChildrenNode","children_","indexMap_","Default","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","setMaxNode$1","nodeFromJSON$1","json","node_1","childData","children_1","childrenHavePriority_1","childSet","sortedChildSet","setNodeFromJSON","__referenceConstructor","VALUE_INDEX","ValueIndex","valueNode","PathIndex","indexPath_","extractChild","snap","aChild","bChild","DataSnapshot","node_","ref_","index_","exportVal","exists","childPathString","childPath","childRef","forEach","childrenNode","hasChildren","getKey","getRef","DataEvent","eventRegistration","prevName","getPath","ref","getParent","getEventType","getEventRunner","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","createEvent","change","query","getQueryParams","getIndex","snapshotNode","eventData","ctx","cancelCB_1","cb_1","createCancelEvent","matches","hasAnyCallback","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherKeys","thisKeys","otherCount","otherKey","thisKey","every","Query","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","tooManyArgsError","wrongArgTypeError","getIndexStartName","getIndexEndName","validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","on","callback","cancelCallbackOrContext","context","ret","getCancelAndContextArgs_","onValueEvent","callbacks","onChildEvent","cancelCallback","container","addEventCallbackForQuery","off","validateContextObject","valueCallback","removeEventCallbackForQuery","once","userCallback","failureCallbackOrContext","firstCall","catch","onceCallback","resolve","err","reject","limitToFirst","limit","limitToLast","orderByChild","parsedPath","newParams","orderBy","orderByKey","orderByPriority","orderByValue","startAt","endAt","equalTo","queryObject","getQueryObject","queryIdentifier","isEqual","sameRepo","samePath","sameQueryIdentifier","cancelOrContext","ExistingValueProvider","DeferredValueProvider","syncTree","syncTree_","calcCompleteEventCache","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","op","existing","unused","delta","existingNode","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","OperationType","SparseSnapshotTree","children","Map","find","size","childKey","has","remember","clear","forget","self_1","tree","delete","forEachTree","prefixPath","func","emptyChildrenSingleton","__referenceConstructor$1","OperationSource","fromUser","fromServer","queryId","tagged","User","Server","forServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","source","operationForChild","subtree","Empty","ImmutableTree","fromObject","childSnap","findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","complete","filtered","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","Change","oldSnap","valueChange","VALUE","childAddedChange","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","IndexedFilter","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","values","NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","getCompleteChild","getChildAfterChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","calcCompleteChild","completeServerData","nodes","calcIndexedSlice","ProcessorResult","viewCache","changes","ViewProcessor","filter_","assertIndexed","applyOperation","oldViewCache","operation","writesCache","completeCache","newViewCache","filterServerNode","accumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","merge","applyUserMerge_","applyServerMerge_","ackUserWrite","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","newEventCache","serverCache","completeChildren","completeEventChildren","calcCompleteEventChildren","completeNode","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","newEventSnap","cacheHasChild_","changedChildren","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","oldEventCache","serverChildren","EventGenerator","query_","generateEventsForChanges","eventCache","eventRegistrations","events","moves","generateEventsForType_","registrations","filteredChanges","filter","compareChanges_","materializedChange","materializeSingleChange_","registration","aWrapped","bWrapped","View","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","getCompleteServerCache","cache","loadsAllData","addEventRegistration","removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","remaining","concat","generateEventsForChanges_","getInitialEvents","initialChanges","SyncPoint","views","optCompleteServerCache","view","serverCacheComplete","eventCacheComplete","e_2","removed","hadCompleteView","hasCompleteView","entries","_d","__read","viewQueryId","e_2_1","getQueryViews","e_3","e_3_1","e_4","e_4_1","viewForQuery","getCompleteView","viewExistsForQuery","e_5","e_5_1","CompoundWrite","writeTree_","addWrite","rootmost","rootMostPath","addWrites","updates","newWrite","removeWrite","hasCompleteWrite","getCompleteNode","getCompleteChildren","childCompoundWrite","shadowingNode","applySubtreeWrite","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","getWrite","record","findIndex","writeToRemove","splice","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","writeIdsToExclude","includeHiddenWrites","mergeAtPath","layerTree_","write","layeredCache","subMerge","completeServerChildren","topLevelSet","merge_1","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","DefaultFilter_","writes","treeRoot","compoundWrite","deepNode","treePath_","existingServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","changeTree","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","tag","queryKey","queryKeyForTag_","r","parseQueryKey_","queryPath","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","listener","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","stopListening","queryToRemove","tagToRemove","removeTags_","maybeChildSyncPoint","childMap","views_1","_key","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","isDefault","queriesToStop","queries_1","childQueries","queryToStop","status","code","reason","toUpperCase","errorForServerCode","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","StatsCollection","counters_","incrementCounter","amount","deepCopy","StatsManager","getCollection","hashString","collections_","getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","newStats","stat","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","queueEvents","eventDataList","currList","eventPath","EventList","add","raiseEventsAtPath","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","changedPath","sentAll","eventList","raise","events_","eventFn","EventEmitter","allowedEvents_","listeners_","trigger","listeners","validateEventType_","getInitialEvent","et","VisibilityMonitor","hidden","visibilityChange","document","addEventListener","visible_","getInstance","OnlineMonitor","online_","isMobileCordova","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","BrowserPollConnection","connId","applicationId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","isNodeSdk","readyState","called_1","wrappedFn_1","body","attachEvent","executeWhenDOMReady","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","href","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","Windows","UI","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","base64Encode","MAX_URL_DATA_SIZE","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","iframeContents","doc","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","theURL","curDataString","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","doNewRequest","keepaliveTimeout","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","SDK_VERSION","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","CONSTANTS","NODE_ADMIN","options","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","userAgent","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","Connection","repoInfo_","applicationId_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","version","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","refreshAuthToken","token","onDisconnectPut","onDisconnectMerge","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","listen","currentHashFn","listenSpec","sendListen_","req","p","warnOnListenWarnings_","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isAdmin","token_1","authMethod","isValidFormat","requestData","cred","res","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","request","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","forceRefresh","getToken","then","accessToken","interrupt","resume","serverTimeOffset","q","normalizedPathString","statusCode","explanation","notifyForInvalidToken","_e","_f","clientName","NODE_CLIENT","isReactNative","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","toRestQueryStringParameters","restRequest_","authTokenData","authToken","querystring","xhr","XMLHttpRequest","responseText","Repo","forceRestClient","app","authTokenProvider","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","persistentConnection_","search","authOverride","appId","addTokenChangeListener","statsReporter_","transactionsInit_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","offset","generateServerValues","isMerge","taggedChildren","raw","taggedSnap","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","newVal","newNodeUnresolved","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","resolved","showDelta","console","longestName","reduce","previousValue","currentValue","statsIncrementCounter","metric","__database","Database","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","self","startName","endName","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","inRange","oldChildSnap","compareNext","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","copy_","newLimit","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","DEFAULT","Reference","parentPath","getRoot","databaseProp","database","transaction","transactionUpdate","applyLocally","promiseComplete","startTransaction","setPriority","thennablePushRef","pushRef","Promise","TransactionStatus","TreeNode","childCount","Tree","name_","parent_","subTree","pathObj","setValue","updateParents_","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","MAX_TRANSACTION_RETRIES_","transactionQueueTree_","watchRef","order","retryCount","unwatcher","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","queue","buildTransactionQueue_","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","abortTransaction","currentNode","newDataNode","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","to","abortTransactionsOnNode_","lastSent","_staticInstance","FirebaseAuthTokenProvider","app_","authProvider_","auth_","getImmediate","auth","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","EmulatorAdminTokenProvider","EMULATOR_AUTH_TOKEN","RepoManager","repos_","useRestClient_","appName","dbUrl","databaseFromApp","authProvider","isEmulator","dbEmulatorHost","createRepo","deleteRepo","appRepos","INTERNAL","DatabaseInternals","checkDeleted_","refFromURL","apiName","parsedURL","goOffline","goOnline","ServerValue","TIMESTAMP","increment","__awaiter","__generator","freeze","__proto__","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","ConnectionTarget","TEST_ACCESS","hijackHash","newHash","oldPut","registerDatabase","instance","setSDKVersion","registerComponent","Component","getProvider","setServiceProps","setMultipleInstances","registerVersion","module","cwd","nextTick","arch","execPath","title","pid","browser","argv","binding","chdir","dir","exit","kill","umask","dlopen","uptime","memoryUsage","uvCounters","features","normalizeArray","parts","allowAboveRoot","up","unshift","xs","resolvedPath","resolvedAbsolute","TypeError","normalize","isAbsolute","trailingSlash","paths","relative","trim","arr","end","fromParts","toParts","samePartsLength","outputParts","sep","delimiter","dirname","charCodeAt","hasRoot","matchedSlash","basename","ext","extname","startDot","startPart","preDotState"],"mappings":"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","file":"js/chunk-36fb365b.516d5839.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar firebase = _interopDefault(require('@firebase/app'));\nvar tslib = require('tslib');\nvar util = require('@firebase/util');\nvar logger$1 = require('@firebase/logger');\nvar component = require('@firebase/component');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param {string} key The key to save the value under\r\n     * @param {?Object} value The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), util.stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     * @return {*} The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return util.jsonEval(storedVal);\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    /**\r\n     * @param {string} name\r\n     * @return {string}\r\n     */\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (util.contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new logger$1.Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = util.stringToByteArray(str);\r\n    var sha1 = new util.Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return util.base64.encodeByteArray(sha1Bytes);\r\n};\r\n/**\r\n * @param {...*} varArgs\r\n * @return {string}\r\n * @private\r\n */\r\nvar buildLogMessage_ = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < varArgs.length; i++) {\r\n        var arg = varArgs[i];\r\n        if (Array.isArray(arg) ||\r\n            (arg &&\r\n                typeof arg === 'object' &&\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                typeof arg.length === 'number')) {\r\n            message += buildLogMessage_.apply(null, arg);\r\n        }\r\n        else if (typeof arg === 'object') {\r\n            message += util.stringify(arg);\r\n        }\r\n        else {\r\n            message += arg;\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\r\nvar logger = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    util.assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = logger$1.LogLevel.VERBOSE;\r\n        logger = logClient.log.bind(logClient);\r\n        if (persistent) {\r\n            SessionStorage.set('logging_enabled', true);\r\n        }\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger = logger_;\r\n    }\r\n    else {\r\n        logger = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\n/**\r\n *\r\n * @param {...(string|Arguments)} varArgs\r\n */\r\nvar log = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger === null && SessionStorage.get('logging_enabled') === true) {\r\n            enableLogging(true);\r\n        }\r\n    }\r\n    if (logger) {\r\n        var message = buildLogMessage_.apply(null, varArgs);\r\n        logger(message);\r\n    }\r\n};\r\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, tslib.__spread([prefix], varArgs));\r\n    };\r\n};\r\n/**\r\n * @param {...string} varArgs\r\n */\r\nvar error = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\r\n    logClient.error(message);\r\n};\r\n/**\r\n * @param {...string} varArgs\r\n */\r\nvar fatal = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\n/**\r\n * @param {...*} varArgs\r\n */\r\nvar warn = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data !== data || // NaN\r\n            data === Number.POSITIVE_INFINITY ||\r\n            data === Number.NEGATIVE_INFINITY));\r\n};\r\n/**\r\n * @param {function()} fn\r\n */\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (util.isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete') {\r\n                    wrappedFn_1();\r\n                }\r\n            });\r\n            // fallback to onload.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + util.stringify(obj));\r\n    }\r\n};\r\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return util.stringify(obj);\r\n    }\r\n    var keys = [];\r\n    // eslint-disable-next-line guard-for-in\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0) {\r\n            key += ',';\r\n        }\r\n        key += util.stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj The object or array to iterate over\r\n * @param fn The function to apply\r\n */\r\nfunction each(obj, fn) {\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    util.assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1;\r\n    var s, e, f, ln, i;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    var bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    var str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1) {\r\n            hexByte = '0' + hexByte;\r\n        }\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\r\nvar errorForServerCode = function (code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code === 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code === 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n};\r\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param {string|Array.<string>} pathOrString Path string to parse,\r\n     *      or another path, or the raw tokens array\r\n     * @param {number=} pieceNum\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Object.defineProperty(Path, \"Empty\", {\r\n        /**\r\n         * Singleton to represent an empty path\r\n         *\r\n         * @const\r\n         */\r\n        get: function () {\r\n            return new Path('');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Path.prototype.getFront = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length) {\r\n            return null;\r\n        }\r\n        return this.pieces_[this.pieceNum_];\r\n    };\r\n    /**\r\n     * @return {number} The number of segments in this path\r\n     */\r\n    Path.prototype.getLength = function () {\r\n        return this.pieces_.length - this.pieceNum_;\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.popFront = function () {\r\n        var pieceNum = this.pieceNum_;\r\n        if (pieceNum < this.pieces_.length) {\r\n            pieceNum++;\r\n        }\r\n        return new Path(this.pieces_, pieceNum);\r\n    };\r\n    /**\r\n     * @return {?string}\r\n     */\r\n    Path.prototype.getBack = function () {\r\n        if (this.pieceNum_ < this.pieces_.length) {\r\n            return this.pieces_[this.pieces_.length - 1];\r\n        }\r\n        return null;\r\n    };\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + this.pieces_[i];\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    Path.prototype.toUrlEncodedString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    /**\r\n     * Shallow copy of the parts of the path.\r\n     *\r\n     * @param {number=} begin\r\n     * @return {!Array<string>}\r\n     */\r\n    Path.prototype.slice = function (begin) {\r\n        if (begin === void 0) { begin = 0; }\r\n        return this.pieces_.slice(this.pieceNum_ + begin);\r\n    };\r\n    /**\r\n     * @return {?Path}\r\n     */\r\n    Path.prototype.parent = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length) {\r\n            return null;\r\n        }\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++) {\r\n            pieces.push(this.pieces_[i]);\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @param {string|!Path} childPathObj\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.child = function (childPathObj) {\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            pieces.push(this.pieces_[i]);\r\n        }\r\n        if (childPathObj instanceof Path) {\r\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n                pieces.push(childPathObj.pieces_[i]);\r\n            }\r\n        }\r\n        else {\r\n            var childPieces = childPathObj.split('/');\r\n            for (var i = 0; i < childPieces.length; i++) {\r\n                if (childPieces[i].length > 0) {\r\n                    pieces.push(childPieces[i]);\r\n                }\r\n            }\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @return {boolean} True if there are no segments in this path\r\n     */\r\n    Path.prototype.isEmpty = function () {\r\n        return this.pieceNum_ >= this.pieces_.length;\r\n    };\r\n    /**\r\n     * @param {!Path} outerPath\r\n     * @param {!Path} innerPath\r\n     * @return {!Path} The path from outerPath to innerPath\r\n     */\r\n    Path.relativePath = function (outerPath, innerPath) {\r\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\r\n        if (outer === null) {\r\n            return innerPath;\r\n        }\r\n        else if (outer === inner) {\r\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\r\n        }\r\n        else {\r\n            throw new Error('INTERNAL ERROR: innerPath (' +\r\n                innerPath +\r\n                ') is not within ' +\r\n                'outerPath (' +\r\n                outerPath +\r\n                ')');\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} left\r\n     * @param {!Path} right\r\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n     */\r\n    Path.comparePaths = function (left, right) {\r\n        var leftKeys = left.slice();\r\n        var rightKeys = right.slice();\r\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n            var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n            if (cmp !== 0) {\r\n                return cmp;\r\n            }\r\n        }\r\n        if (leftKeys.length === rightKeys.length) {\r\n            return 0;\r\n        }\r\n        return leftKeys.length < rightKeys.length ? -1 : 1;\r\n    };\r\n    /**\r\n     *\r\n     * @param {Path} other\r\n     * @return {boolean} true if paths are the same.\r\n     */\r\n    Path.prototype.equals = function (other) {\r\n        if (this.getLength() !== other.getLength()) {\r\n            return false;\r\n        }\r\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} other\r\n     * @return {boolean} True if this path is a parent (or the same as) other\r\n     */\r\n    Path.prototype.contains = function (other) {\r\n        var i = this.pieceNum_;\r\n        var j = other.pieceNum_;\r\n        if (this.getLength() > other.getLength()) {\r\n            return false;\r\n        }\r\n        while (i < this.pieces_.length) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n            ++i;\r\n            ++j;\r\n        }\r\n        return true;\r\n    };\r\n    return Path;\r\n}()); // end Path\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path Initial Path.\r\n     * @param {string} errorPrefix_ Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        /** @type {!Array<string>} */\r\n        this.parts_ = path.slice();\r\n        /** @type {number} Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += util.stringLength(this.parts_[i]);\r\n        }\r\n        this.checkValid_();\r\n    }\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\r\n        /** @const {number} Maximum key depth. */\r\n        get: function () {\r\n            return 32;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\r\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\r\n        get: function () {\r\n            return 768;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @param {string} child */\r\n    ValidationPath.prototype.push = function (child) {\r\n        // Count the needed '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ += 1;\r\n        }\r\n        this.parts_.push(child);\r\n        this.byteLength_ += util.stringLength(child);\r\n        this.checkValid_();\r\n    };\r\n    ValidationPath.prototype.pop = function () {\r\n        var last = this.parts_.pop();\r\n        this.byteLength_ -= util.stringLength(last);\r\n        // Un-count the previous '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ -= 1;\r\n        }\r\n    };\r\n    ValidationPath.prototype.checkValid_ = function () {\r\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'has a key path longer than ' +\r\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\r\n                ' bytes (' +\r\n                this.byteLength_ +\r\n                ').');\r\n        }\r\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'path specified exceeds the maximum depth that can be written (' +\r\n                ValidationPath.MAX_PATH_DEPTH +\r\n                ') or object contains a cycle ' +\r\n                this.toErrorString());\r\n        }\r\n    };\r\n    /**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     *\r\n     * @return {string}\r\n     */\r\n    ValidationPath.prototype.toErrorString = function () {\r\n        if (this.parts_.length === 0) {\r\n            return '';\r\n        }\r\n        return \"in property '\" + this.parts_.join('.') + \"'\";\r\n    };\r\n    return ValidationPath;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\nvar FORGE_DOMAIN = 'firebaseio.com';\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar APPLICATION_ID_PARAM = 'p';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param {string} host Hostname portion of the url for the repo\r\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\r\n     * @param {string} namespace The namespace represented by the repo\r\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param {string=} persistenceKey Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey, includeNamespaceInQueryParams) {\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        if (includeNamespaceInQueryParams === void 0) { includeNamespaceInQueryParams = false; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.persistenceKey = persistenceKey;\r\n        this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\r\n        this.host = host.toLowerCase();\r\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\r\n        this.internalHost =\r\n            PersistentStorage.get('host:' + host) || this.host;\r\n    }\r\n    RepoInfo.prototype.needsQueryParam = function () {\r\n        return (this.host !== this.internalHost ||\r\n            this.isCustomHost() ||\r\n            this.includeNamespaceInQueryParams);\r\n    };\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isDemoHost = function () {\r\n        return this.domain === 'firebaseio-demo.com';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\r\n    };\r\n    RepoInfo.prototype.updateHost = function (newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this.host, this.internalHost);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the websocket URL for this repo\r\n     * @param {string} type of connection\r\n     * @param {Object} params list\r\n     * @return {string} The URL for this repo\r\n     */\r\n    RepoInfo.prototype.connectionURL = function (type, params) {\r\n        util.assert(typeof type === 'string', 'typeof type must == string');\r\n        util.assert(typeof params === 'object', 'typeof params must == object');\r\n        var connURL;\r\n        if (type === WEBSOCKET) {\r\n            connURL =\r\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\r\n        }\r\n        else if (type === LONG_POLLING) {\r\n            connURL =\r\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\r\n        }\r\n        else {\r\n            throw new Error('Unknown connection type: ' + type);\r\n        }\r\n        if (this.needsQueryParam()) {\r\n            params['ns'] = this.namespace;\r\n        }\r\n        var pairs = [];\r\n        each(params, function (key, value) {\r\n            pairs.push(key + '=' + value);\r\n        });\r\n        return connURL + pairs.join('&');\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toURLString = function () {\r\n        return (this.secure ? 'https://' : 'http://') + this.host;\r\n    };\r\n    return RepoInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var e_1, _a;\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    try {\r\n        for (var _b = tslib.__values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var segment = _c.value;\r\n            if (segment.length === 0) {\r\n                continue;\r\n            }\r\n            var kv = segment.split('=');\r\n            if (kv.length === 2) {\r\n                results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n            }\r\n            else {\r\n                warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return results;\r\n}\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{repoInfo: !RepoInfo, path: !Path}}\r\n */\r\nvar parseRepoInfo = function (dataURL) {\r\n    var parsedUrl = parseDatabaseURL(dataURL), namespace = parsedUrl.namespace;\r\n    if (parsedUrl.domain === 'firebase.com') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace === 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly, \r\n        /*persistenceKey=*/ '', \r\n        /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string, namespace: string}}\r\n */\r\nvar parseDatabaseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '', namespace = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = host.length;\r\n        }\r\n        var hostWithoutPort = host.slice(0, colonInd);\r\n        if (hostWithoutPort.toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        else if (hostWithoutPort.split('.').length <= 2) {\r\n            domain = hostWithoutPort;\r\n        }\r\n        else {\r\n            // Interpret the subdomain of a 3 or more component URL as the namespace name.\r\n            var dotInd = host.indexOf('.');\r\n            subdomain = host.substring(0, dotInd).toLowerCase();\r\n            domain = host.substring(dotInd + 1);\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            namespace = subdomain;\r\n        }\r\n        // Always treat the value of the `ns` as the namespace name if it is present.\r\n        if ('ns' in queryParams) {\r\n            namespace = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString,\r\n        namespace: namespace\r\n    };\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority &&\r\n            typeof priority === 'object' &&\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            util.contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    validateFirebaseData(util.errorPrefix(fnName, argumentNumber, optional), data, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            path.toErrorString() +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        util.stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            path.toErrorString() +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false;\r\n        var hasActualChild_1 = false;\r\n        each(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        path.toErrorString() +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            path.push(key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            path.pop();\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                path.toErrorString() +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = curPath.slice();\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) ;\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(Path.comparePaths);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && prevPath.contains(curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    var errorPrefix = util.errorPrefix(fnName, argumentNumber, optional);\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    each(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix, value, path.child(curPath));\r\n        if (curPath.getBack() === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, argumentNumber, priority, optional) {\r\n    if (optional && priority === undefined) {\r\n        return;\r\n    }\r\n    if (isInvalidJSONNumber(priority)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    }\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n    }\r\n};\r\nvar validateEventType = function (fnName, argumentNumber, eventType, optional) {\r\n    if (optional && eventType === undefined) {\r\n        return;\r\n    }\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentNumber, key, optional) {\r\n    if (optional && key === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidKey(key)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n    }\r\n};\r\nvar validatePathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (optional && pathString === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidPathString(pathString)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n    }\r\n};\r\nvar validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentNumber, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (path.getFront() === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, argumentNumber, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, false) +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentNumber, bool, optional) {\r\n    if (optional && bool === undefined) {\r\n        return;\r\n    }\r\n    if (typeof bool !== 'boolean') {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /**\r\n     * @param {!Repo} repo_\r\n     * @param {!Path} path_\r\n     */\r\n    function OnDisconnect(repo_, path_) {\r\n        this.repo_ = repo_;\r\n        this.path_ = path_;\r\n    }\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        util.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateWritablePath('OnDisconnect.remove', this.path_);\r\n        util.validateCallback('OnDisconnect.remove', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        util.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.set', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\r\n        util.validateCallback('OnDisconnect.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {number|string|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        util.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('OnDisconnect.setWithPriority', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\r\n        validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\r\n        util.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.update', this.path_);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\r\n        util.validateCallback('OnDisconnect.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     * @constructor\r\n     * @dict\r\n     * @param {boolean} committed\r\n     * @param {DataSnapshot} snapshot\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        util.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\r\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        util.assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        util.assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    /**\r\n     *\r\n     * @param {!string} name\r\n     * @param {!Node} node\r\n     * @return {NamedNode}\r\n     */\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @constructor\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     * @param {!Node} oldNode\r\n     * @param {!Node} newNode\r\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw util.assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        util.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number') {\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    }\r\n    else {\r\n        return 'string:' + priority;\r\n    }\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        util.assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && util.contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        util.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    util.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @implements {Node}\r\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n     *                                         The object type is possible in the event of a deferred value\r\n     * @param {!Node=} priorityNode_ The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        util.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else if (path.getFront() === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            util.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty()) {\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        }\r\n        else {\r\n            return this.getValue();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            }\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @return {Object|string|number|boolean} The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            util.assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     * @param {!LeafNode} otherLeaf\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        util.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        util.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.equals = function (other) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     * @type {Array.<!string>}\r\n     * @const\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @template K, V, T\r\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n     * @param {?K} startKey\r\n     * @param {function(K, K): number} comparator\r\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n     * @param {(function(K, V):T)=} resultGenerator_\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        /** @private\r\n         * @type {Array.<!LLRBNode>}\r\n         */\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_) {\r\n                cmp *= -1;\r\n            }\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_) {\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            result = { key: node.key, value: node.value };\r\n        }\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {!K} key Key associated with this node.\r\n     * @param {!V} value Value associated with this node.\r\n     * @param {?boolean} color Whether this node is red.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param {?K} key New key for the node, or null.\r\n     * @param {?V} value New value for the node, or null.\r\n     * @param {?boolean} color New color for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n     * @return {!LLRBNode} The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            !!action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {*} True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @return {!Object} The minimum node in the tree.\r\n     * @private\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Object} key Key to insert.\r\n     * @param {!Object} value Value to insert.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var n = this;\r\n        var cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_()) {\r\n            n = n.moveRedLeft_();\r\n        }\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param {!Object} key The key of the item to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_()) {\r\n                n = n.rotateRight_();\r\n            }\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_()) {\r\n            n = n.rotateLeft_();\r\n        }\r\n        if (n.left.isRed_() && n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n        }\r\n        if (n.left.isRed_() && n.right.isRed_()) {\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @private\r\n     * @return {boolean} True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBNode.prototype.check_ = function () {\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        var blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return {!LLRBEmptyNode} The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBEmptyNode} New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {function(K, K):number} comparator_ Key comparator.\r\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @return {!SortedMap.<K, V>} New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @return {!SortedMap.<K, V>} New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param {!K} key The key to look up.\r\n     * @return {?V} The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param {K} key The key to find the predecessor of\r\n     * @return {?K} The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty()) {\r\n                        node = node.right;\r\n                    }\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @return {boolean} True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @return {?K} The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @return {?K} The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @template T\r\n     * @param {(function(K, V):T)=} resultGenerator\r\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     * @const\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\n/**\r\n * @constructor\r\n */\r\nvar Base12Num = /** @class */ (function () {\r\n    /**\r\n     * @param {number} length\r\n     */\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length === 0) {\r\n            return null;\r\n        }\r\n        else if (length === 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         */\r\n        get: function () {\r\n            util.assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = util.safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap) {\r\n            throw new Error('No index defined for ' + indexKey);\r\n        }\r\n        if (sortedMap instanceof SortedMap) {\r\n            return sortedMap;\r\n        }\r\n        else {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n    };\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return util.contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        util.assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = tslib.__assign({}, this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = tslib.__assign({}, this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = util.safeGet(_this.indexSet_, indexName);\r\n            util.assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name !== namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!SortedMap.<string, !Node>} children_ List of children\r\n     * of this node..\r\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n     * @param {!IndexMap} indexMap_\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return this;\r\n        }\r\n        return this.getImmediateChild(front).getChild(path.popFront());\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        util.assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            var newPriority = newChildren.isEmpty()\r\n                ? EMPTY_NODE\r\n                : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            util.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty()) {\r\n            return null;\r\n        }\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            // eslint-disable-next-line guard-for-in\r\n            for (var key in obj) {\r\n                array[key] = obj[key];\r\n            }\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty()) {\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            }\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '') {\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n                }\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!NamedNode} startPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    /**\r\n     * @param {!NamedNode} endPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     * @private\r\n     * @param {!Index} indexDefinition\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @type {RegExp}\r\n     */\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    tslib.__extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    util.assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj = json;\r\n        each(hinzeJsonObj, function (key, child) {\r\n            if (key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(child);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length === 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        each(json, function (key, childData) {\r\n            if (util.contains(json, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty()) {\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.maxPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MAX;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        util.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!Node} snap\r\n     * @return {!Node}\r\n     * @protected\r\n     */\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.toString = function () {\r\n        return this.indexPath_.slice().join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_ A SnapshotNode to wrap.\r\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n     * @param {!Index} index_ The iteration order for this snapshot\r\n     */\r\n    function DataSnapshot(node_, ref_, index_) {\r\n        this.node_ = node_;\r\n        this.ref_ = ref_;\r\n        this.index_ = index_;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        util.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this.node_.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        util.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this.node_.val(true);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        util.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        util.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return !this.node_.isEmpty();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {!DataSnapshot} DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        childPathString = String(childPathString);\r\n        validatePathString('DataSnapshot.child', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        var childRef = this.ref_.child(childPath);\r\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {boolean} Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        return !this.node_.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return {string|number|null} The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        util.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this.node_.getPriority().val();\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param {function(!DataSnapshot)} action Callback function to be called\r\n     * for each child.\r\n     * @return {boolean} True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        util.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        util.validateCallback('DataSnapshot.forEach', 1, action, false);\r\n        if (this.node_.isLeafNode()) {\r\n            return false;\r\n        }\r\n        var childrenNode = this.node_;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\r\n            return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        util.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        if (this.node_.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return !this.node_.isEmpty();\r\n        }\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this.ref_.getKey();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return {number} The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        util.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this.node_.numChildren();\r\n    };\r\n    /**\r\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        util.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return this.ref_;\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n     * @param {!DataSnapshot} snapshot The data backing the event\r\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.getRef();\r\n        if (this.eventType === 'value') {\r\n            return ref.path;\r\n        }\r\n        else {\r\n            return ref.getParent().path;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            util.stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {EventRegistration} eventRegistration\r\n     * @param {Error} error\r\n     * @param {!Path} path\r\n     */\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?function(!DataSnapshot)} callback_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {?Object} context_\r\n     */\r\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\r\n        this.callback_ = callback_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_1 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_1.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_1 = this.callback_;\r\n            return function () {\r\n                cb_1.call(ctx, eventData.snapshot);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callback_ || !this.callback_) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callback_ !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {Object=} context_\r\n     */\r\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\r\n        this.callbacks_ = callbacks_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return util.contains(this.callbacks_, eventToCheck);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        util.assert(change.childName != null, 'Child events should have a childName.');\r\n        var ref = query.getRef().child(/** @type {!string} */ change.childName);\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_2 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_2.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_2 = this.callbacks_[eventData.eventType];\r\n            return function () {\r\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        var _this = this;\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks_ || !other.callbacks_) {\r\n                return true;\r\n            }\r\n            else if (this.context_ === other.context_) {\r\n                var otherKeys = Object.keys(other.callbacks_);\r\n                var thisKeys = Object.keys(this.callbacks_);\r\n                var otherCount = otherKeys.length;\r\n                var thisCount = thisKeys.length;\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    // If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey = otherKeys[0];\r\n                        var thisKey = thisKeys[0];\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks_[otherKey] ||\r\n                                !this.callbacks_[thisKey] ||\r\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return thisKeys.every(function (eventType) {\r\n                            return other.callbacks_[eventType] === _this.callbacks_[eventType];\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks_ !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor;\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(repo, path, queryParams_, orderByCalled_) {\r\n        this.repo = repo;\r\n        this.path = path;\r\n        this.queryParams_ = queryParams_;\r\n        this.orderByCalled_ = orderByCalled_;\r\n    }\r\n    Object.defineProperty(Query, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor;\r\n        },\r\n        set: function (val) {\r\n            __referenceConstructor = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates start/end values for queries.\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateQueryEndpoints_ = function (params) {\r\n        var startNode = null;\r\n        var endNode = null;\r\n        if (params.hasStart()) {\r\n            startNode = params.getIndexStartValue();\r\n        }\r\n        if (params.hasEnd()) {\r\n            endNode = params.getIndexEndValue();\r\n        }\r\n        if (params.getIndex() === KEY_INDEX) {\r\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n                'startAt(), endAt(), or equalTo().';\r\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\r\n                'or equalTo() must be a string.';\r\n            if (params.hasStart()) {\r\n                var startName = params.getIndexStartName();\r\n                if (startName !== MIN_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof startNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n            if (params.hasEnd()) {\r\n                var endName = params.getIndexEndName();\r\n                if (endName !== MAX_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof endNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n        }\r\n        else if (params.getIndex() === PRIORITY_INDEX) {\r\n            if ((startNode != null && !isValidPriority(startNode)) ||\r\n                (endNode != null && !isValidPriority(endNode))) {\r\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\r\n            }\r\n        }\r\n        else {\r\n            util.assert(params.getIndex() instanceof PathIndex ||\r\n                params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n            if ((startNode != null && typeof startNode === 'object') ||\r\n                (endNode != null && typeof endNode === 'object')) {\r\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\r\n                    'an object.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateLimit_ = function (params) {\r\n        if (params.hasStart() &&\r\n            params.hasEnd() &&\r\n            params.hasLimit() &&\r\n            !params.hasAnchoredLimit()) {\r\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\r\n        }\r\n    };\r\n    /**\r\n     * Validates that no other order by call has been made\r\n     * @param {!string} fnName\r\n     * @private\r\n     */\r\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\r\n        if (this.orderByCalled_ === true) {\r\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n        }\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     */\r\n    Query.prototype.getQueryParams = function () {\r\n        return this.queryParams_;\r\n    };\r\n    /**\r\n     * @return {!Reference}\r\n     */\r\n    Query.prototype.getRef = function () {\r\n        util.validateArgCount('Query.ref', 0, 0, arguments.length);\r\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\r\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\r\n        // method gets called.\r\n        return new Query.__referenceConstructor(this.repo, this.path);\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @param {!function(DataSnapshot, string=)} callback\r\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n     * @param {Object=} context\r\n     * @return {!function(DataSnapshot, string=)}\r\n     */\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        util.validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateEventType('Query.on', 1, eventType, false);\r\n        util.validateCallback('Query.on', 2, callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        if (eventType === 'value') {\r\n            this.onValueEvent(callback, ret.cancel, ret.context);\r\n        }\r\n        else {\r\n            var callbacks = {};\r\n            callbacks[eventType] = callback;\r\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\r\n        }\r\n        return callback;\r\n    };\r\n    /**\r\n     * @param {!function(!DataSnapshot)} callback\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\r\n        var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\r\n        var container = new ChildEventRegistration(callbacks, cancelCallback, context);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {string=} eventType\r\n     * @param {(function(!DataSnapshot, ?string=))=} callback\r\n     * @param {Object=} context\r\n     */\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        util.validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', 1, eventType, true);\r\n        util.validateCallback('Query.off', 2, callback, true);\r\n        util.validateContextObject('Query.off', 3, context, true);\r\n        var container = null;\r\n        var callbacks = null;\r\n        if (eventType === 'value') {\r\n            var valueCallback = callback || null;\r\n            container = new ValueEventRegistration(valueCallback, null, context || null);\r\n        }\r\n        else if (eventType) {\r\n            if (callback) {\r\n                callbacks = {};\r\n                callbacks[eventType] = callback;\r\n            }\r\n            container = new ChildEventRegistration(callbacks, null, context || null);\r\n        }\r\n        this.repo.removeEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     * @param {!string} eventType\r\n     * @param {!function(!DataSnapshot, string=)} userCallback\r\n     * @param failureCallbackOrContext\r\n     * @param context\r\n     * @return {!firebase.Promise}\r\n     */\r\n    Query.prototype.once = function (eventType, userCallback, failureCallbackOrContext, context) {\r\n        var _this = this;\r\n        util.validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateEventType('Query.once', 1, eventType, false);\r\n        util.validateCallback('Query.once', 2, userCallback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context);\r\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\r\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\r\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\r\n        // against the Promise specification.\r\n        var firstCall = true;\r\n        var deferred = new util.Deferred();\r\n        // A dummy error handler in case a user wasn't expecting promises\r\n        deferred.promise.catch(function () { });\r\n        var onceCallback = function (snapshot) {\r\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\r\n            // triggers multiple events (e.g. child_added or child_changed).\r\n            if (firstCall) {\r\n                firstCall = false;\r\n                _this.off(eventType, onceCallback);\r\n                if (userCallback) {\r\n                    userCallback.bind(ret.context)(snapshot);\r\n                }\r\n                deferred.resolve(snapshot);\r\n            }\r\n        };\r\n        this.on(eventType, onceCallback, \r\n        /*cancel=*/ function (err) {\r\n            _this.off(eventType, onceCallback);\r\n            if (ret.cancel) {\r\n                ret.cancel.bind(ret.context)(err);\r\n            }\r\n            deferred.reject(err);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        util.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        util.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     * @param {!string} path\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        util.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        if (path === '$key') {\r\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\r\n        }\r\n        else if (path === '$priority') {\r\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\r\n        }\r\n        else if (path === '$value') {\r\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\r\n        }\r\n        validatePathString('Query.orderByChild', 1, path, false);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\r\n        var parsedPath = new Path(path);\r\n        if (parsedPath.isEmpty()) {\r\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = this.queryParams_.orderBy(index);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        util.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\r\n        var newParams = this.queryParams_.orderBy(KEY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        util.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\r\n        var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        util.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\r\n        var newParams = this.queryParams_.orderBy(VALUE_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\r\n        validateKey('Query.startAt', 2, name, true);\r\n        var newParams = this.queryParams_.startAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\r\n                'or equalTo).');\r\n        }\r\n        // Calling with no params tells us to start at the beginning.\r\n        if (value === undefined) {\r\n            value = null;\r\n            name = null;\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\r\n        validateKey('Query.endAt', 2, name, true);\r\n        var newParams = this.queryParams_.endAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     * @param {number|string|boolean|null} value\r\n     * @param {string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        util.validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\r\n        validateKey('Query.equalTo', 2, name, true);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +\r\n                'equalTo).');\r\n        }\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return this.startAt(value, name).endAt(value, name);\r\n    };\r\n    /**\r\n     * @return {!string} URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        util.validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this.repo.toString() + this.path.toUrlEncodedString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        util.validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this.toString();\r\n    };\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     * @return {!Object}\r\n     */\r\n    Query.prototype.queryObject = function () {\r\n        return this.queryParams_.getQueryObject();\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     */\r\n    Query.prototype.queryIdentifier = function () {\r\n        var obj = this.queryObject();\r\n        var id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     * @param {Query} other\r\n     * @return {boolean}\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        util.validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error);\r\n        }\r\n        var sameRepo = this.repo === other.repo;\r\n        var samePath = this.path.equals(other.path);\r\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param {!string} fnName The function name (on or once)\r\n     * @param {(function(Error)|Object)=} cancelOrContext\r\n     * @param {Object=} context\r\n     * @return {{cancel: ?function(Error), context: ?Object}}\r\n     * @private\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: null, context: null };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            util.validateCallback(fnName, 3, ret.cancel, true);\r\n            ret.context = context;\r\n            util.validateContextObject(fnName, 4, ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(util.errorPrefix(fnName, 3, true) +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ExistingValueProvider = /** @class */ (function () {\r\n    function ExistingValueProvider(node_) {\r\n        this.node_ = node_;\r\n    }\r\n    ExistingValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var child = this.node_.getImmediateChild(childName);\r\n        return new ExistingValueProvider(child);\r\n    };\r\n    ExistingValueProvider.prototype.node = function () {\r\n        return this.node_;\r\n    };\r\n    return ExistingValueProvider;\r\n}());\r\nvar DeferredValueProvider = /** @class */ (function () {\r\n    function DeferredValueProvider(syncTree, path) {\r\n        this.syncTree_ = syncTree;\r\n        this.path_ = path;\r\n    }\r\n    DeferredValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var childPath = this.path_.child(childName);\r\n        return new DeferredValueProvider(this.syncTree_, childPath);\r\n    };\r\n    DeferredValueProvider.prototype.node = function () {\r\n        return this.syncTree_.calcCompleteEventCache(this.path_);\r\n    };\r\n    return DeferredValueProvider;\r\n}());\r\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\r\nvar resolveDeferredLeafValue = function (value, existingVal, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    util.assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n    if (typeof value['.sv'] === 'string') {\r\n        return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\r\n    }\r\n    else if (typeof value['.sv'] === 'object') {\r\n        return resolveComplexDeferredValue(value['.sv'], existingVal);\r\n    }\r\n    else {\r\n        util.assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\r\n    }\r\n};\r\nvar resolveScalarDeferredValue = function (op, existing, serverValues) {\r\n    switch (op) {\r\n        case 'timestamp':\r\n            return serverValues['timestamp'];\r\n        default:\r\n            util.assert(false, 'Unexpected server value: ' + op);\r\n    }\r\n};\r\nvar resolveComplexDeferredValue = function (op, existing, unused) {\r\n    if (!op.hasOwnProperty('increment')) {\r\n        util.assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\r\n    }\r\n    var delta = op['increment'];\r\n    if (typeof delta !== 'number') {\r\n        util.assert(false, 'Unexpected increment value: ' + delta);\r\n    }\r\n    var existingNode = existing.node();\r\n    util.assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls');\r\n    // Incrementing a non-number sets the value to the incremented amount\r\n    if (!existingNode.isLeafNode()) {\r\n        return delta;\r\n    }\r\n    var leaf = existingNode;\r\n    var existingVal = leaf.getValue();\r\n    if (typeof existingVal !== 'number') {\r\n        return delta;\r\n    }\r\n    // No need to do over/underflow arithmetic here because JS only handles floats under the covers\r\n    return existingVal + delta;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!Path} path path to which write is relative\r\n * @param {!Node} node new data written at path\r\n * @param {!SyncTree} syncTree current data\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\r\nvar resolveDeferredValueTree = function (path, node, syncTree, serverValues) {\r\n    return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, existing, serverValues) {\r\n    return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\r\n};\r\nfunction resolveDeferredValue(node, existingVal, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n */\r\nvar SparseSnapshotTree = /** @class */ (function () {\r\n    function SparseSnapshotTree() {\r\n        this.value = null;\r\n        this.children = new Map();\r\n    }\r\n    /**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @return The retrieved node, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.find = function (path) {\r\n        if (this.value != null) {\r\n            return this.value.getChild(path);\r\n        }\r\n        else if (!path.isEmpty() && this.children.size > 0) {\r\n            var childKey = path.getFront();\r\n            path = path.popFront();\r\n            if (this.children.has(childKey)) {\r\n                var childTree = this.children.get(childKey);\r\n                return childTree.find(path);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @param data The new data, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.remember = function (path, data) {\r\n        if (path.isEmpty()) {\r\n            this.value = data;\r\n            this.children.clear();\r\n        }\r\n        else if (this.value !== null) {\r\n            this.value = this.value.updateChild(path, data);\r\n        }\r\n        else {\r\n            var childKey = path.getFront();\r\n            if (!this.children.has(childKey)) {\r\n                this.children.set(childKey, new SparseSnapshotTree());\r\n            }\r\n            var child = this.children.get(childKey);\r\n            path = path.popFront();\r\n            child.remember(path, data);\r\n        }\r\n    };\r\n    /**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @return True if this node should now be removed.\r\n     */\r\n    SparseSnapshotTree.prototype.forget = function (path) {\r\n        if (path.isEmpty()) {\r\n            this.value = null;\r\n            this.children.clear();\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.value !== null) {\r\n                if (this.value.isLeafNode()) {\r\n                    // We're trying to forget a node that doesn't exist\r\n                    return false;\r\n                }\r\n                else {\r\n                    var value = this.value;\r\n                    this.value = null;\r\n                    var self_1 = this;\r\n                    value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                        self_1.remember(new Path(key), tree);\r\n                    });\r\n                    return this.forget(path);\r\n                }\r\n            }\r\n            else if (this.children.size > 0) {\r\n                var childKey = path.getFront();\r\n                path = path.popFront();\r\n                if (this.children.has(childKey)) {\r\n                    var safeToRemove = this.children.get(childKey).forget(path);\r\n                    if (safeToRemove) {\r\n                        this.children.delete(childKey);\r\n                    }\r\n                }\r\n                return this.children.size === 0;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param prefixPath Path to look up node for.\r\n     * @param func The function to invoke for each tree.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\r\n        if (this.value !== null) {\r\n            func(prefixPath, this.value);\r\n        }\r\n        else {\r\n            this.forEachChild(function (key, tree) {\r\n                var path = new Path(prefixPath.toString() + '/' + key);\r\n                tree.forEachTree(path, func);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param func The function to invoke for each child.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\r\n        this.children.forEach(function (tree, key) {\r\n            func(key, tree);\r\n        });\r\n    };\r\n    return SparseSnapshotTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\r\nvar OperationSource = /** @class */ (function () {\r\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\r\n        this.fromUser = fromUser;\r\n        this.fromServer = fromServer;\r\n        this.queryId = queryId;\r\n        this.tagged = tagged;\r\n        util.assert(!tagged || fromServer, 'Tagged queries must be from server.');\r\n    }\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.User = new OperationSource(\r\n    /*fromUser=*/ true, false, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.Server = new OperationSource(false, \r\n    /*fromServer=*/ true, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @param {string} queryId\r\n     * @return {!OperationSource}\r\n     */\r\n    OperationSource.forServerTaggedQuery = function (queryId) {\r\n        return new OperationSource(false, \r\n        /*fromServer=*/ true, queryId, \r\n        /*tagged=*/ true);\r\n    };\r\n    return OperationSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     * @param {!boolean} revert\r\n     */\r\n    function AckUserWrite(\r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ affectedTree, \r\n    /** @inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = OperationSource.User;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!this.path.isEmpty()) {\r\n            util.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            util.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(Path.Empty, childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {?T} value\r\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n     */\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {!Object.<string, !T>} obj\r\n     * @return {!ImmutableTree.<!T>}\r\n     */\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = ImmutableTree.Empty;\r\n        each(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     * @return {boolean}\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param {!Path} relativePath The remainder of the path\r\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n     *   node\r\n     * @return {?{path:!Path, value:!T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: Path.Empty, value: this.value };\r\n        }\r\n        else {\r\n            if (relativePath.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = relativePath.getFront();\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = new Path(front).child(childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     * @param {!Path} relativePath\r\n     * @return {?{path: !Path, value: !T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @return {!ImmutableTree.<T>} The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(relativePath.popFront());\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to set value at.\r\n     * @param {?T} toSet Value to set.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (relativePath.isEmpty()) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.set(relativePath.popFront(), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to value to remove.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            if (this.children.isEmpty()) {\r\n                return ImmutableTree.Empty;\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(relativePath.popFront());\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return ImmutableTree.Empty;\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param {!Path} relativePath Path to get value for.\r\n     * @return {?T} Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(relativePath.popFront());\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param {!Path} relativePath Path to replace subtree for.\r\n     * @param {!ImmutableTree} newTree New tree.\r\n     * @return {!ImmutableTree} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (relativePath.isEmpty()) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.setTree(relativePath.popFront(), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     * @template V\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(Path.Empty, fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     * @template V\r\n     * @param {!Path} pathSoFar\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     * @private\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     * @template V\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T):?V} f\r\n     * @return {?V}\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathToFollow.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathToFollow.getFront();\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T)} f\r\n     * @returns {!ImmutableTree.<T>}\r\n     */\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathToFollow.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathToFollow.getFront();\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param {function(!Path, !T)} f A function to be called with\r\n     *   the path from the root of the tree to a node, and the value at that node.\r\n     *   Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(currentRelativePath.child(childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {function(string, !T)} f\r\n     */\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    ImmutableTree.Empty = new ImmutableTree(null);\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new ListenComplete(this.source, Path.Empty);\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, this.path.popFront());\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /** @inheritDoc */ source, \r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, Path.Empty, childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, Path.Empty, childTree);\r\n            }\r\n        }\r\n        else {\r\n            util.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, this.path.popFront(), this.children);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_\r\n     * @param {boolean} fullyInitialized_\r\n     * @param {boolean} filtered_\r\n     */\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = path.getFront();\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!string} key\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    /**\r\n     * @return {!Node}\r\n     */\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\r\nvar ViewCache = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!CacheNode} eventCache_\r\n     * @param {!CacheNode} serverCache_\r\n     */\r\n    function ViewCache(eventCache_, serverCache_) {\r\n        this.eventCache_ = eventCache_;\r\n        this.serverCache_ = serverCache_;\r\n    }\r\n    /**\r\n     * @param {!Node} eventSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\r\n        return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\r\n    };\r\n    /**\r\n     * @param {!Node} serverSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\r\n        return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getEventCache = function () {\r\n        return this.eventCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteEventSnap = function () {\r\n        return this.eventCache_.isFullyInitialized()\r\n            ? this.eventCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getServerCache = function () {\r\n        return this.serverCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteServerSnap = function () {\r\n        return this.serverCache_.isFullyInitialized()\r\n            ? this.serverCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @const\r\n     * @type {ViewCache}\r\n     */\r\n    ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false), new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false));\r\n    return ViewCache;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\r\nvar Change = /** @class */ (function () {\r\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\r\n        this.type = type;\r\n        this.snapshotNode = snapshotNode;\r\n        this.childName = childName;\r\n        this.oldSnap = oldSnap;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.valueChange = function (snapshot) {\r\n        return new Change(Change.VALUE, snapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childAddedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childRemovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} newSnapshot\r\n     * @param {!Node} oldSnapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\r\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childMovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\r\n    };\r\n    //event types\r\n    /** Event type for a child added */\r\n    Change.CHILD_ADDED = 'child_added';\r\n    /** Event type for a child removed */\r\n    Change.CHILD_REMOVED = 'child_removed';\r\n    /** Event type for a child changed */\r\n    Change.CHILD_CHANGED = 'child_changed';\r\n    /** Event type for a child moved */\r\n    Change.CHILD_MOVED = 'child_moved';\r\n    /** Event type for a value change */\r\n    Change.VALUE = 'value';\r\n    return Change;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        util.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() === newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\r\n                }\r\n                else {\r\n                    util.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap = new Map();\r\n    }\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey = change.childName;\r\n        util.assert(type === Change.CHILD_ADDED ||\r\n            type === Change.CHILD_CHANGED ||\r\n            type === Change.CHILD_REMOVED, 'Only child changes supported for tracking');\r\n        util.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = this.changeMap.get(childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type === Change.CHILD_ADDED && oldType === Change.CHILD_REMOVED) {\r\n                this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode));\r\n            }\r\n            else if (type === Change.CHILD_REMOVED &&\r\n                oldType === Change.CHILD_ADDED) {\r\n                this.changeMap.delete(childKey);\r\n            }\r\n            else if (type === Change.CHILD_REMOVED &&\r\n                oldType === Change.CHILD_CHANGED) {\r\n                this.changeMap.set(childKey, Change.childRemovedChange(childKey, oldChange.oldSnap));\r\n            }\r\n            else if (type === Change.CHILD_CHANGED &&\r\n                oldType === Change.CHILD_ADDED) {\r\n                this.changeMap.set(childKey, Change.childAddedChange(childKey, change.snapshotNode));\r\n            }\r\n            else if (type === Change.CHILD_CHANGED &&\r\n                oldType === Change.CHILD_CHANGED) {\r\n                this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap));\r\n            }\r\n            else {\r\n                throw util.assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap.set(childKey, change);\r\n        }\r\n    };\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return Array.from(this.changeMap.values());\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\r\n// eslint-disable-next-line @typescript-eslint/class-name-casing\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    /**\r\n     * @param {!WriteTreeRef} writes_\r\n     * @param {!ViewCache} viewCache_\r\n     * @param {?Node} optCompleteServerCache_\r\n     */\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.getEventCache();\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.getServerCache();\r\n            return this.writes_.calcCompleteChild(childKey, serverNode);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : this.viewCache_.getCompleteServerSnap();\r\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n */\r\nvar ProcessorResult = /** @class */ (function () {\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Array.<!Change>} changes\r\n     */\r\n    function ProcessorResult(viewCache, changes) {\r\n        this.viewCache = viewCache;\r\n        this.changes = changes;\r\n    }\r\n    return ProcessorResult;\r\n}());\r\n/**\r\n * @constructor\r\n */\r\nvar ViewProcessor = /** @class */ (function () {\r\n    /**\r\n     * @param {!NodeFilter} filter_\r\n     */\r\n    function ViewProcessor(filter_) {\r\n        this.filter_ = filter_;\r\n    }\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     */\r\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\r\n        util.assert(viewCache.getEventCache().getNode().isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\r\n        util.assert(viewCache.getServerCache().getNode().isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @return {!ProcessorResult}\r\n     */\r\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\r\n        var accumulator = new ChildChangeAccumulator();\r\n        var newViewCache, filterServerNode;\r\n        if (operation.type === OperationType.OVERWRITE) {\r\n            var overwrite = operation;\r\n            if (overwrite.source.fromUser) {\r\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(overwrite.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n                // again\r\n                filterServerNode =\r\n                    overwrite.source.tagged ||\r\n                        (oldViewCache.getServerCache().isFiltered() &&\r\n                            !overwrite.path.isEmpty());\r\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.MERGE) {\r\n            var merge = operation;\r\n            if (merge.source.fromUser) {\r\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(merge.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered\r\n                filterServerNode =\r\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\r\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n            var ackUserWrite = operation;\r\n            if (!ackUserWrite.revert) {\r\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\r\n        }\r\n        else {\r\n            throw util.assertionError('Unknown operation type: ' + operation.type);\r\n        }\r\n        var changes = accumulator.getChanges();\r\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\r\n        return new ProcessorResult(newViewCache, changes);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!ViewCache} newViewCache\r\n     * @param {!Array.<!Change>} accumulator\r\n     * @private\r\n     */\r\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\r\n        var eventSnap = newViewCache.getEventCache();\r\n        if (eventSnap.isFullyInitialized()) {\r\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\r\n            if (accumulator.length > 0 ||\r\n                !oldViewCache.getEventCache().isFullyInitialized() ||\r\n                (isLeafOrEmpty &&\r\n                    !eventSnap.getNode().equals(/** @type {!Node} */ oldCompleteSnap)) ||\r\n                !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\r\n                accumulator.push(Change.valueChange(\r\n                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} changePath\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!CompleteChildSource} source\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\r\n        var oldEventSnap = viewCache.getEventCache();\r\n        if (writesCache.shadowingWrite(changePath) != null) {\r\n            // we have a shadowing write, ignore changes\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var newEventCache = void 0, serverNode = void 0;\r\n            if (changePath.isEmpty()) {\r\n                // TODO: figure out how this plays with \"sliding ack windows\"\r\n                util.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n                if (viewCache.getServerCache().isFiltered()) {\r\n                    // We need to special case this, because we need to only apply writes to complete children, or\r\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                    // writes cannot be guaranteed to be complete\r\n                    var serverCache = viewCache.getCompleteServerSnap();\r\n                    var completeChildren = serverCache instanceof ChildrenNode\r\n                        ? serverCache\r\n                        : ChildrenNode.EMPTY_NODE;\r\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\r\n                }\r\n                else {\r\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\r\n                }\r\n            }\r\n            else {\r\n                var childKey = changePath.getFront();\r\n                if (childKey === '.priority') {\r\n                    util.assert(changePath.getLength() === 1, \"Can't have a priority with additional path components\");\r\n                    var oldEventNode = oldEventSnap.getNode();\r\n                    serverNode = viewCache.getServerCache().getNode();\r\n                    // we might have overwrites for this priority\r\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\r\n                    if (updatedPriority != null) {\r\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\r\n                    }\r\n                    else {\r\n                        // priority didn't change, keep old node\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n                else {\r\n                    var childChangePath = changePath.popFront();\r\n                    // update child\r\n                    var newEventChild = void 0;\r\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                        serverNode = viewCache.getServerCache().getNode();\r\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\r\n                        if (eventChildUpdate != null) {\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey)\r\n                                .updateChild(childChangePath, eventChildUpdate);\r\n                        }\r\n                        else {\r\n                            // Nothing changed, just keep the old child\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey);\r\n                        }\r\n                    }\r\n                    else {\r\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                    }\r\n                    if (newEventChild != null) {\r\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                    }\r\n                    else {\r\n                        // no complete child available or no change\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n            }\r\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n        var oldServerSnap = oldViewCache.getServerCache();\r\n        var newServerCache;\r\n        var serverFilter = filterServerNode\r\n            ? this.filter_\r\n            : this.filter_.getIndexedFilter();\r\n        if (changePath.isEmpty()) {\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n        }\r\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n            var newServerNode = oldServerSnap\r\n                .getNode()\r\n                .updateChild(changePath, changedSnap);\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n                changePath.getLength() > 1) {\r\n                // We don't update incomplete nodes with updates intended for other listeners\r\n                return oldViewCache;\r\n            }\r\n            var childChangePath = changePath.popFront();\r\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n            if (childKey === '.priority') {\r\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n            }\r\n            else {\r\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n            }\r\n        }\r\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\r\n        var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n        var oldEventSnap = oldViewCache.getEventCache();\r\n        var newViewCache, newEventCache;\r\n        var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n        if (changePath.isEmpty()) {\r\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\r\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (childKey === '.priority') {\r\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\r\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n            }\r\n            else {\r\n                var childChangePath = changePath.popFront();\r\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                var newChild = void 0;\r\n                if (childChangePath.isEmpty()) {\r\n                    // Child overwrite, we can replace the child\r\n                    newChild = changedSnap;\r\n                }\r\n                else {\r\n                    var childNode = source.getCompleteChild(childKey);\r\n                    if (childNode != null) {\r\n                        if (childChangePath.getBack() === '.priority' &&\r\n                            childNode.getChild(childChangePath.parent()).isEmpty()) {\r\n                            // This is a priority update on an empty node. If this node exists on the server, the\r\n                            // server will send down the priority in the update, so ignore for now\r\n                            newChild = childNode;\r\n                        }\r\n                        else {\r\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no complete child node available\r\n                        newChild = ChildrenNode.EMPTY_NODE;\r\n                    }\r\n                }\r\n                if (!oldChild.equals(newChild)) {\r\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\r\n                }\r\n                else {\r\n                    newViewCache = oldViewCache;\r\n                }\r\n            }\r\n        }\r\n        return newViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {string} childKey\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\r\n        return viewCache.getEventCache().isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n        var _this = this;\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!Node} node\r\n     * @param {ImmutableTree.<!Node>} merge\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\r\n        merge.foreach(function (relativePath, childNode) {\r\n            node = node.updateChild(relativePath, childNode);\r\n        });\r\n        return node;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n        var _this = this;\r\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n        // wait for the complete data update coming soon.\r\n        if (viewCache.getServerCache().getNode().isEmpty() &&\r\n            !viewCache.getServerCache().isFullyInitialized()) {\r\n            return viewCache;\r\n        }\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        var viewMergeTree;\r\n        if (path.isEmpty()) {\r\n            viewMergeTree = changedChildren;\r\n        }\r\n        else {\r\n            viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\r\n        }\r\n        var serverNode = viewCache.getServerCache().getNode();\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (serverNode.hasChild(childKey)) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\r\n                childMergeTree.value == null;\r\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} ackPath\r\n     * @param {!ImmutableTree<!boolean>} affectedTree\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n        if (writesCache.shadowingWrite(ackPath) != null) {\r\n            return viewCache;\r\n        }\r\n        // Only filter server node if it is currently filtered\r\n        var filterServerNode = viewCache.getServerCache().isFiltered();\r\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n        // now that it won't be shadowed.\r\n        var serverCache = viewCache.getServerCache();\r\n        if (affectedTree.value != null) {\r\n            // This is an overwrite.\r\n            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\r\n                serverCache.isCompleteForPath(ackPath)) {\r\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else if (ackPath.isEmpty()) {\r\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n                // should just re-apply whatever we have in our cache as a merge.\r\n                var changedChildren_1 = ImmutableTree.Empty;\r\n                serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                    changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n                });\r\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else {\r\n                return viewCache;\r\n            }\r\n        }\r\n        else {\r\n            // This is a merge.\r\n            var changedChildren_2 = ImmutableTree.Empty;\r\n            affectedTree.foreach(function (mergePath, value) {\r\n                var serverCachePath = ackPath.child(mergePath);\r\n                if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n                }\r\n            });\r\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\r\n        var oldServerNode = viewCache.getServerCache();\r\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\r\n        var complete;\r\n        if (writesCache.shadowingWrite(path) != null) {\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n            var oldEventCache = viewCache.getEventCache().getNode();\r\n            var newEventCache = void 0;\r\n            if (path.isEmpty() || path.getFront() === '.priority') {\r\n                var newNode = void 0;\r\n                if (viewCache.getServerCache().isFullyInitialized()) {\r\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                }\r\n                else {\r\n                    var serverChildren = viewCache.getServerCache().getNode();\r\n                    util.assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\r\n                }\r\n                newNode = newNode;\r\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\r\n            }\r\n            else {\r\n                var childKey = path.getFront();\r\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                if (newChild == null &&\r\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\r\n                    newChild = oldEventCache.getImmediateChild(childKey);\r\n                }\r\n                if (newChild != null) {\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\r\n                }\r\n                else if (viewCache.getEventCache().getNode().hasChild(childKey)) {\r\n                    // No complete child available, delete the existing one, if any\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\r\n                }\r\n                else {\r\n                    newEventCache = oldEventCache;\r\n                }\r\n                if (newEventCache.isEmpty() &&\r\n                    viewCache.getServerCache().isFullyInitialized()) {\r\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    if (complete.isLeafNode()) {\r\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\r\n                    }\r\n                }\r\n            }\r\n            complete =\r\n                viewCache.getServerCache().isFullyInitialized() ||\r\n                    writesCache.shadowingWrite(Path.Empty) != null;\r\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    return ViewProcessor;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     */\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        /**\r\n         * @private\r\n         * @type {!Index}\r\n         */\r\n        this.index_ = this.query_.getQueryParams().getIndex();\r\n    }\r\n    /**\r\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n     *\r\n     * Notes:\r\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n     *    our index.\r\n     *  - prevName will be calculated based on the index ordering.\r\n     *\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {!Array.<!EventRegistration>} eventRegistrations\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\r\n        var _this = this;\r\n        var events = [];\r\n        var moves = [];\r\n        changes.forEach(function (change) {\r\n            if (change.type === Change.CHILD_CHANGED &&\r\n                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n                moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\r\n            }\r\n        });\r\n        this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\r\n        return events;\r\n    };\r\n    /**\r\n     * Given changes of a single change type, generate the corresponding events.\r\n     *\r\n     * @param {!Array.<!Event>} events\r\n     * @param {!string} eventType\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Array.<!EventRegistration>} registrations\r\n     * @param {!Node} eventCache\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\r\n        var _this = this;\r\n        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n        filteredChanges.sort(this.compareChanges_.bind(this));\r\n        filteredChanges.forEach(function (change) {\r\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\r\n            registrations.forEach(function (registration) {\r\n                if (registration.respondsTo(change.type)) {\r\n                    events.push(registration.createEvent(materializedChange, _this.query_));\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Change} change\r\n     * @param {!Node} eventCache\r\n     * @return {!Change}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\r\n        if (change.type === 'value' || change.type === 'child_removed') {\r\n            return change;\r\n        }\r\n        else {\r\n            change.prevName = eventCache.getPredecessorChildName(\r\n            /** @type {!string} */\r\n            change.childName, change.snapshotNode, this.index_);\r\n            return change;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Change} a\r\n     * @param {!Change} b\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\r\n        if (a.childName == null || b.childName == null) {\r\n            throw util.assertionError('Should only compare child_ events.');\r\n        }\r\n        var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n        var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n        return this.index_.compare(aWrapped, bWrapped);\r\n    };\r\n    return EventGenerator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\r\nvar View = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     * @param {!ViewCache} initialViewCache\r\n     */\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_.getQueryParams();\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = params.getNodeFilter();\r\n        /**\r\n         * @type {ViewProcessor}\r\n         * @private\r\n         */\r\n        this.processor_ = new ViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.getServerCache();\r\n        var initialEventCache = initialViewCache.getEventCache();\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        /**\r\n         * @type {!ViewCache}\r\n         * @private\r\n         */\r\n        this.viewCache_ = new ViewCache(newEventCache, newServerCache);\r\n        /**\r\n         * @type {!EventGenerator}\r\n         * @private\r\n         */\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    /**\r\n     * @return {!Query}\r\n     */\r\n    View.prototype.getQuery = function () {\r\n        return this.query_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getServerCache = function () {\r\n        return this.viewCache_.getServerCache().getNode();\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getCompleteServerCache = function (path) {\r\n        var cache = this.viewCache_.getCompleteServerSnap();\r\n        if (cache) {\r\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n            // we need to see if it contains the child we're interested in.\r\n            if (this.query_.getQueryParams().loadsAllData() ||\r\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\r\n                return cache.getChild(path);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    View.prototype.isEmpty = function () {\r\n        return this.eventRegistrations_.length === 0;\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    View.prototype.addEventRegistration = function (eventRegistration) {\r\n        this.eventRegistrations_.push(eventRegistration);\r\n    };\r\n    /**\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\r\n        var cancelEvents = [];\r\n        if (cancelError) {\r\n            util.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n            var path_1 = this.query_.path;\r\n            this.eventRegistrations_.forEach(function (registration) {\r\n                cancelError /** @type {!Error} */ = cancelError;\r\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n                if (maybeEvent) {\r\n                    cancelEvents.push(maybeEvent);\r\n                }\r\n            });\r\n        }\r\n        if (eventRegistration) {\r\n            var remaining = [];\r\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\r\n                var existing = this.eventRegistrations_[i];\r\n                if (!existing.matches(eventRegistration)) {\r\n                    remaining.push(existing);\r\n                }\r\n                else if (eventRegistration.hasAnyCallback()) {\r\n                    // We're removing just this one\r\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\r\n                    break;\r\n                }\r\n            }\r\n            this.eventRegistrations_ = remaining;\r\n        }\r\n        else {\r\n            this.eventRegistrations_ = [];\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\r\n        if (operation.type === OperationType.MERGE &&\r\n            operation.source.queryId !== null) {\r\n            util.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\r\n            util.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\r\n        }\r\n        var oldViewCache = this.viewCache_;\r\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\r\n        this.processor_.assertIndexed(result.viewCache);\r\n        util.assert(result.viewCache.getServerCache().isFullyInitialized() ||\r\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n        this.viewCache_ = result.viewCache;\r\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} registration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.getInitialEvents = function (registration) {\r\n        var eventSnap = this.viewCache_.getEventCache();\r\n        var initialChanges = [];\r\n        if (!eventSnap.getNode().isLeafNode()) {\r\n            var eventNode = eventSnap.getNode();\r\n            eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                initialChanges.push(Change.childAddedChange(key, childNode));\r\n            });\r\n        }\r\n        if (eventSnap.isFullyInitialized()) {\r\n            initialChanges.push(Change.valueChange(eventSnap.getNode()));\r\n        }\r\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {EventRegistration=} eventRegistration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\r\n        var registrations = eventRegistration\r\n            ? [eventRegistration]\r\n            : this.eventRegistrations_;\r\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\r\n    };\r\n    return View;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */\r\n        this.views = new Map();\r\n    }\r\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor$1;\r\n        },\r\n        set: function (val) {\r\n            util.assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\r\n            __referenceConstructor$1 = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    SyncPoint.prototype.isEmpty = function () {\r\n        return this.views.size === 0;\r\n    };\r\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\r\n        var e_1, _a;\r\n        var queryId = operation.source.queryId;\r\n        if (queryId !== null) {\r\n            var view = this.views.get(queryId);\r\n            util.assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\r\n        }\r\n        else {\r\n            var events = [];\r\n            try {\r\n                for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var view = _c.value;\r\n                    events = events.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache Complete server cache, if we have it.\r\n     * @param {boolean} serverCacheComplete\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var view = this.views.get(queryId);\r\n        if (!view) {\r\n            // TODO: make writesCache take flag for complete server node\r\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\r\n            var eventCacheComplete = false;\r\n            if (eventCache) {\r\n                eventCacheComplete = true;\r\n            }\r\n            else if (serverCache instanceof ChildrenNode) {\r\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\r\n                eventCacheComplete = false;\r\n            }\r\n            else {\r\n                eventCache = ChildrenNode.EMPTY_NODE;\r\n                eventCacheComplete = false;\r\n            }\r\n            var viewCache = new ViewCache(new CacheNode(\r\n            /** @type {!Node} */ eventCache, eventCacheComplete, false), new CacheNode(\r\n            /** @type {!Node} */ serverCache, serverCacheComplete, false));\r\n            view = new View(query, viewCache);\r\n            this.views.set(queryId, view);\r\n        }\r\n        // This is guaranteed to exist now, we just created anything that was missing\r\n        view.addEventRegistration(eventRegistration);\r\n        return view.getInitialEvents(eventRegistration);\r\n    };\r\n    /**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n     */\r\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var e_2, _a;\r\n        var queryId = query.queryIdentifier();\r\n        var removed = [];\r\n        var cancelEvents = [];\r\n        var hadCompleteView = this.hasCompleteView();\r\n        if (queryId === 'default') {\r\n            try {\r\n                // When you do ref.off(...), we search all views for the registration to remove.\r\n                for (var _b = tslib.__values(this.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var _d = tslib.__read(_c.value, 2), viewQueryId = _d[0], view = _d[1];\r\n                    cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                    if (view.isEmpty()) {\r\n                        this.views.delete(viewQueryId);\r\n                        // We'll deal with complete views later.\r\n                        if (!view.getQuery().getQueryParams().loadsAllData()) {\r\n                            removed.push(view.getQuery());\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_2) throw e_2.error; }\r\n            }\r\n        }\r\n        else {\r\n            // remove the callback from the specific view.\r\n            var view = this.views.get(queryId);\r\n            if (view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    this.views.delete(queryId);\r\n                    // We'll deal with complete views later.\r\n                    if (!view.getQuery().getQueryParams().loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hadCompleteView && !this.hasCompleteView()) {\r\n            // We removed our last complete view.\r\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\r\n        }\r\n        return { removed: removed, events: cancelEvents };\r\n    };\r\n    SyncPoint.prototype.getQueryViews = function () {\r\n        var e_3, _a;\r\n        var result = [];\r\n        try {\r\n            for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                if (!view.getQuery().getQueryParams().loadsAllData()) {\r\n                    result.push(view);\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * @param path The path to the desired complete snapshot\r\n     * @return A complete cache, if it exists\r\n     */\r\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\r\n        var e_4, _a;\r\n        var serverCache = null;\r\n        try {\r\n            for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                serverCache = serverCache || view.getCompleteServerCache(path);\r\n            }\r\n        }\r\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_4) throw e_4.error; }\r\n        }\r\n        return serverCache;\r\n    };\r\n    SyncPoint.prototype.viewForQuery = function (query) {\r\n        var params = query.getQueryParams();\r\n        if (params.loadsAllData()) {\r\n            return this.getCompleteView();\r\n        }\r\n        else {\r\n            var queryId = query.queryIdentifier();\r\n            return this.views.get(queryId);\r\n        }\r\n    };\r\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\r\n        return this.viewForQuery(query) != null;\r\n    };\r\n    SyncPoint.prototype.hasCompleteView = function () {\r\n        return this.getCompleteView() != null;\r\n    };\r\n    SyncPoint.prototype.getCompleteView = function () {\r\n        var e_5, _a;\r\n        try {\r\n            for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                if (view.getQuery().getQueryParams().loadsAllData()) {\r\n                    return view;\r\n                }\r\n            }\r\n        }\r\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_5) throw e_5.error; }\r\n        }\r\n        return null;\r\n    };\r\n    return SyncPoint;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    CompoundWrite.prototype.addWrite = function (path, node) {\r\n        if (path.isEmpty()) {\r\n            return new CompoundWrite(new ImmutableTree(node));\r\n        }\r\n        else {\r\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n            if (rootmost != null) {\r\n                var rootMostPath = rootmost.path;\r\n                var value = rootmost.value;\r\n                var relativePath = Path.relativePath(rootMostPath, path);\r\n                value = value.updateChild(relativePath, node);\r\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\r\n            }\r\n            else {\r\n                var subtree = new ImmutableTree(node);\r\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\r\n                return new CompoundWrite(newWriteTree);\r\n            }\r\n        }\r\n    };\r\n    CompoundWrite.prototype.addWrites = function (path, updates) {\r\n        var newWrite = this;\r\n        each(updates, function (childKey, node) {\r\n            newWrite = newWrite.addWrite(path.child(childKey), node);\r\n        });\r\n        return newWrite;\r\n    };\r\n    /**\r\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n     * location, which must be removed by calling this method with that path.\r\n     *\r\n     * @param path The path at which a write and all deeper writes should be removed\r\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n     */\r\n    CompoundWrite.prototype.removeWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return CompoundWrite.Empty;\r\n        }\r\n        else {\r\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    };\r\n    /**\r\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n     * considered \"complete\".\r\n     *\r\n     * @param path The path to check for\r\n     * @return Whether there is a complete write at that path\r\n     */\r\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\r\n        return this.getCompleteNode(path) != null;\r\n    };\r\n    /**\r\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n     * writes from deeper paths, but will return child nodes from a more shallow path.\r\n     *\r\n     * @param path The path to get a complete write\r\n     * @return The node if complete at that path, or null otherwise.\r\n     */\r\n    CompoundWrite.prototype.getCompleteNode = function (path) {\r\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            return this.writeTree_\r\n                .get(rootmost.path)\r\n                .getChild(Path.relativePath(rootmost.path, path));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all children that are guaranteed to be a complete overwrite.\r\n     *\r\n     * @return A list of all complete children.\r\n     */\r\n    CompoundWrite.prototype.getCompleteChildren = function () {\r\n        var children = [];\r\n        var node = this.writeTree_.value;\r\n        if (node != null) {\r\n            // If it's a leaf node, it has no children; so nothing to do.\r\n            if (!node.isLeafNode()) {\r\n                node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                    children.push(new NamedNode(childName, childNode));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n                if (childTree.value != null) {\r\n                    children.push(new NamedNode(childName, childTree.value));\r\n                }\r\n            });\r\n        }\r\n        return children;\r\n    };\r\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var shadowingNode = this.getCompleteNode(path);\r\n            if (shadowingNode != null) {\r\n                return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n            }\r\n            else {\r\n                return new CompoundWrite(this.writeTree_.subtree(path));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n     * @return Whether this CompoundWrite is empty\r\n     */\r\n    CompoundWrite.prototype.isEmpty = function () {\r\n        return this.writeTree_.isEmpty();\r\n    };\r\n    /**\r\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n     * node\r\n     * @param node The node to apply this CompoundWrite to\r\n     * @return The node with all writes applied\r\n     */\r\n    CompoundWrite.prototype.apply = function (node) {\r\n        return applySubtreeWrite(Path.Empty, this.writeTree_, node);\r\n    };\r\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\r\n    return CompoundWrite;\r\n}());\r\nfunction applySubtreeWrite(relativePath, writeTree, node) {\r\n    if (writeTree.value != null) {\r\n        // Since there a write is always a leaf, we're done here\r\n        return node.updateChild(relativePath, writeTree.value);\r\n    }\r\n    else {\r\n        var priorityWrite_1 = null;\r\n        writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (childKey === '.priority') {\r\n                // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                // to apply priorities to empty nodes that are later filled\r\n                util.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                priorityWrite_1 = childTree.value;\r\n            }\r\n            else {\r\n                node = applySubtreeWrite(relativePath.child(childKey), childTree, node);\r\n            }\r\n        });\r\n        // If there was a priority write, we only apply it if the node is not empty\r\n        if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n            node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\r\n        }\r\n        return node;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\r\nvar WriteTree = /** @class */ (function () {\r\n    function WriteTree() {\r\n        /**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         *\r\n         * @type {!CompoundWrite}\r\n         * @private\r\n         */\r\n        this.visibleWrites_ = CompoundWrite.Empty;\r\n        /**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         *\r\n         * @type {!Array.<!WriteRecord>}\r\n         * @private\r\n         */\r\n        this.allWrites_ = [];\r\n        this.lastWriteId_ = -1;\r\n    }\r\n    /**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTree.prototype.childWrites = function (path) {\r\n        return new WriteTreeRef(path, this);\r\n    };\r\n    /**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} writeId\r\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n     */\r\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        this.allWrites_.push({\r\n            path: path,\r\n            snap: snap,\r\n            writeId: writeId,\r\n            visible: visible\r\n        });\r\n        if (visible) {\r\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\r\n        }\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * Record a new merge from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     */\r\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\r\n        this.allWrites_.push({\r\n            path: path,\r\n            children: changedChildren,\r\n            writeId: writeId,\r\n            visible: true\r\n        });\r\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * @param {!number} writeId\r\n     * @return {?WriteRecord}\r\n     */\r\n    WriteTree.prototype.getWrite = function (writeId) {\r\n        for (var i = 0; i < this.allWrites_.length; i++) {\r\n            var record = this.allWrites_[i];\r\n            if (record.writeId === writeId) {\r\n                return record;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @param {!number} writeId\r\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */\r\n    WriteTree.prototype.removeWrite = function (writeId) {\r\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n        // out of order.\r\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n        var _this = this;\r\n        var idx = this.allWrites_.findIndex(function (s) {\r\n            return s.writeId === writeId;\r\n        });\r\n        util.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n        var writeToRemove = this.allWrites_[idx];\r\n        this.allWrites_.splice(idx, 1);\r\n        var removedWriteWasVisible = writeToRemove.visible;\r\n        var removedWriteOverlapsWithOtherWrites = false;\r\n        var i = this.allWrites_.length - 1;\r\n        while (removedWriteWasVisible && i >= 0) {\r\n            var currentWrite = this.allWrites_[i];\r\n            if (currentWrite.visible) {\r\n                if (i >= idx &&\r\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                    // The removed write was completely shadowed by a subsequent write.\r\n                    removedWriteWasVisible = false;\r\n                }\r\n                else if (writeToRemove.path.contains(currentWrite.path)) {\r\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                    removedWriteOverlapsWithOtherWrites = true;\r\n                }\r\n            }\r\n            i--;\r\n        }\r\n        if (!removedWriteWasVisible) {\r\n            return false;\r\n        }\r\n        else if (removedWriteOverlapsWithOtherWrites) {\r\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n            this.resetTree_();\r\n            return true;\r\n        }\r\n        else {\r\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n            if (writeToRemove.snap) {\r\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\r\n            }\r\n            else {\r\n                var children = writeToRemove.children;\r\n                each(children, function (childName) {\r\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\r\n                });\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.getCompleteWriteData = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        if (!writeIdsToExclude && !includeHiddenWrites) {\r\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\r\n            if (shadowingNode != null) {\r\n                return shadowingNode;\r\n            }\r\n            else {\r\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\r\n                if (subMerge.isEmpty()) {\r\n                    return completeServerCache;\r\n                }\r\n                else if (completeServerCache == null &&\r\n                    !subMerge.hasCompleteWrite(Path.Empty)) {\r\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                    return null;\r\n                }\r\n                else {\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return subMerge.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            if (!includeHiddenWrites && merge.isEmpty()) {\r\n                return completeServerCache;\r\n            }\r\n            else {\r\n                // If the server cache is null, and we don't have a complete cache, we need to return null\r\n                if (!includeHiddenWrites &&\r\n                    completeServerCache == null &&\r\n                    !merge.hasCompleteWrite(Path.Empty)) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    var filter = function (write) {\r\n                        return ((write.visible || includeHiddenWrites) &&\r\n                            (!writeIdsToExclude ||\r\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                            (write.path.contains(treePath) || treePath.contains(write.path)));\r\n                    };\r\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return mergeAtPath.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\r\n        var completeChildren = ChildrenNode.EMPTY_NODE;\r\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\r\n        if (topLevelSet) {\r\n            if (!topLevelSet.isLeafNode()) {\r\n                // we're shadowing everything. Return the children.\r\n                topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n                });\r\n            }\r\n            return completeChildren;\r\n        }\r\n        else if (completeServerChildren) {\r\n            // Layer any children we have on top of this\r\n            // We know we don't have a top-level set, so just enumerate existing children\r\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\r\n            completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                var node = merge_1\r\n                    .childCompoundWrite(new Path(childName))\r\n                    .apply(childNode);\r\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n            });\r\n            // Add any complete children we have from the set\r\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n        else {\r\n            // We don't have anything to layer on top of. Layer on any children we have\r\n            // Note that we can return an empty snap if we have a defined delete\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            merge.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n    };\r\n    /**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!Path} childPath\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\r\n        util.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n        var path = treePath.child(childPath);\r\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\r\n            // At this point we can probably guarantee that we're in case 2, meaning no events\r\n            // May need to check visibility while doing the findRootMostValueAndPath call\r\n            return null;\r\n        }\r\n        else {\r\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n            if (childMerge.isEmpty()) {\r\n                // We're not shadowing at all. Case 1\r\n                return existingServerSnap.getChild(childPath);\r\n            }\r\n            else {\r\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n                // However this is tricky to find out, since user updates don't necessary change the server\r\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n                // only check if the updates change the serverNode.\r\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n                return childMerge.apply(existingServerSnap.getChild(childPath));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\r\n        var path = treePath.child(childKey);\r\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            if (existingServerSnap.isCompleteForChild(childKey)) {\r\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     */\r\n    WriteTree.prototype.shadowingWrite = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     */\r\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\r\n        var toIterate;\r\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n        var shadowingNode = merge.getCompleteNode(Path.Empty);\r\n        if (shadowingNode != null) {\r\n            toIterate = shadowingNode;\r\n        }\r\n        else if (completeServerData != null) {\r\n            toIterate = merge.apply(completeServerData);\r\n        }\r\n        else {\r\n            // no children to iterate on\r\n            return [];\r\n        }\r\n        toIterate = toIterate.withIndex(index);\r\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n            var nodes = [];\r\n            var cmp = index.getCompare();\r\n            var iter = reverse\r\n                ? toIterate.getReverseIteratorFrom(startPost, index)\r\n                : toIterate.getIteratorFrom(startPost, index);\r\n            var next = iter.getNext();\r\n            while (next && nodes.length < count) {\r\n                if (cmp(next, startPost) !== 0) {\r\n                    nodes.push(next);\r\n                }\r\n                next = iter.getNext();\r\n            }\r\n            return nodes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\r\n        if (writeRecord.snap) {\r\n            return writeRecord.path.contains(path);\r\n        }\r\n        else {\r\n            for (var childName in writeRecord.children) {\r\n                if (writeRecord.children.hasOwnProperty(childName) &&\r\n                    writeRecord.path.child(childName).contains(path)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     */\r\n    WriteTree.prototype.resetTree_ = function () {\r\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\r\n        if (this.allWrites_.length > 0) {\r\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\r\n        }\r\n        else {\r\n            this.lastWriteId_ = -1;\r\n        }\r\n    };\r\n    /**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     */\r\n    WriteTree.DefaultFilter_ = function (write) {\r\n        return write.visible;\r\n    };\r\n    /**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     */\r\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\r\n        var compoundWrite = CompoundWrite.Empty;\r\n        for (var i = 0; i < writes.length; ++i) {\r\n            var write = writes[i];\r\n            // Theory, a later set will either:\r\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n            if (filter(write)) {\r\n                var writePath = write.path;\r\n                var relativePath = void 0;\r\n                if (write.snap) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\r\n                    }\r\n                }\r\n                else if (write.children) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        if (relativePath.isEmpty()) {\r\n                            compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\r\n                        }\r\n                        else {\r\n                            var child = util.safeGet(write.children, relativePath.getFront());\r\n                            if (child) {\r\n                                // There exists a child in this node that matches the root path\r\n                                var deepNode = child.getChild(relativePath.popFront());\r\n                                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    throw util.assertionError('WriteRecord should have .snap or .children');\r\n                }\r\n            }\r\n        }\r\n        return compoundWrite;\r\n    };\r\n    return WriteTree;\r\n}());\r\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\r\nvar WriteTreeRef = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!WriteTree} writeTree\r\n     */\r\n    function WriteTreeRef(path, writeTree) {\r\n        this.treePath_ = path;\r\n        this.writeTree_ = writeTree;\r\n    }\r\n    /**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n    };\r\n    /**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\r\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\r\n    };\r\n    /**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     * @param {!Path} path\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\r\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\r\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     *\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\r\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerCache\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\r\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\r\n    };\r\n    /**\r\n     * Return a WriteTreeRef for a child.\r\n     *\r\n     * @param {string} childName\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTreeRef.prototype.child = function (childName) {\r\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\r\n    };\r\n    return WriteTreeRef;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */\r\n        this.syncPointTree_ = ImmutableTree.Empty;\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */\r\n        this.pendingWriteTree_ = new WriteTree();\r\n        this.tagToQueryMap = new Map();\r\n        this.queryToTagMap = new Map();\r\n    }\r\n    /**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\r\n        // Record pending write.\r\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\r\n        if (!visible) {\r\n            return [];\r\n        }\r\n        else {\r\n            return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\r\n        }\r\n    };\r\n    /**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\r\n        // Record pending merge.\r\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\r\n    };\r\n    /**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param revert True if the given write failed and needs to be reverted\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\r\n        if (revert === void 0) { revert = false; }\r\n        var write = this.pendingWriteTree_.getWrite(writeId);\r\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\r\n        if (!needToReevaluate) {\r\n            return [];\r\n        }\r\n        else {\r\n            var affectedTree_1 = ImmutableTree.Empty;\r\n            if (write.snap != null) {\r\n                // overwrite\r\n                affectedTree_1 = affectedTree_1.set(Path.Empty, true);\r\n            }\r\n            else {\r\n                each(write.children, function (pathString, node) {\r\n                    affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\r\n                });\r\n            }\r\n            return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\r\n        }\r\n    };\r\n    /**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\r\n        return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\r\n    };\r\n    /**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\r\n    };\r\n    /**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyListenComplete = function (path) {\r\n        return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\r\n    };\r\n    /**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey != null) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // Query must have been removed already\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var changeTree = ImmutableTree.fromObject(changedChildren);\r\n            var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        var foundAncestorDefaultView = false;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = Path.relativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || sp.hasCompleteView();\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\r\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var serverCacheComplete;\r\n        if (serverCache != null) {\r\n            serverCacheComplete = true;\r\n        }\r\n        else {\r\n            serverCacheComplete = false;\r\n            serverCache = ChildrenNode.EMPTY_NODE;\r\n            var subtree = this.syncPointTree_.subtree(path);\r\n            subtree.foreachChild(function (childName, childSyncPoint) {\r\n                var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\r\n                if (completeCache) {\r\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n                }\r\n            });\r\n        }\r\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\r\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\r\n            // We need to track a tag for this query\r\n            var queryKey = SyncTree.makeQueryKey_(query);\r\n            util.assert(!this.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\r\n            var tag = SyncTree.getNextQueryTag_();\r\n            this.queryToTagMap.set(queryKey, tag);\r\n            this.tagToQueryMap.set(tag, queryKey);\r\n        }\r\n        var writesCache = this.pendingWriteTree_.childWrites(path);\r\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\r\n            events = events.concat(this.setupListener_(query, view));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param eventRegistration If null, all callbacks are removed.\r\n     * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return Cancel events, if cancelError was provided.\r\n     */\r\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var _this = this;\r\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n        var path = query.path;\r\n        var maybeSyncPoint = this.syncPointTree_.get(path);\r\n        var cancelEvents = [];\r\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n        // not loadsAllData().\r\n        if (maybeSyncPoint &&\r\n            (query.queryIdentifier() === 'default' ||\r\n                maybeSyncPoint.viewExistsForQuery(query))) {\r\n            /**\r\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n             */\r\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\r\n            if (maybeSyncPoint.isEmpty()) {\r\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\r\n            }\r\n            var removed = removedAndEvents.removed;\r\n            cancelEvents = removedAndEvents.events;\r\n            // We may have just removed one of many listeners and can short-circuit this whole process\r\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n            // properly set up.\r\n            //\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            var removingDefault = -1 !==\r\n                removed.findIndex(function (query) {\r\n                    return query.getQueryParams().loadsAllData();\r\n                });\r\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n                return parentSyncPoint.hasCompleteView();\r\n            });\r\n            if (removingDefault && !covered) {\r\n                var subtree = this.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (var i = 0; i < newViews.length; ++i) {\r\n                        var view = newViews[i], newQuery = view.getQuery();\r\n                        var listener = this.createListenerForView_(view);\r\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    var defaultTag = null;\r\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach(function (queryToRemove) {\r\n                        var tagToRemove = _this.queryToTagMap.get(SyncTree.makeQueryKey_(queryToRemove));\r\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n            // Now, clear all of the tags we're tracking for the removed listens\r\n            this.removeTags_(removed);\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n     * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n     * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n     *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     *\r\n     * @param path The path to the data we want\r\n     * @param writeIdsToExclude A specific set to be excluded\r\n     */\r\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\r\n        var includeHiddenSets = true;\r\n        var writeTree = this.pendingWriteTree_;\r\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n            var relativePath = Path.relativePath(pathSoFar, path);\r\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\r\n            if (serverCache) {\r\n                return serverCache;\r\n            }\r\n        });\r\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n    };\r\n    /**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     */\r\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\r\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\r\n                var completeView = maybeChildSyncPoint.getCompleteView();\r\n                return [completeView];\r\n            }\r\n            else {\r\n                // No complete view here, flatten any deeper listens into an array\r\n                var views_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    views_1 = maybeChildSyncPoint.getQueryViews();\r\n                }\r\n                each(childMap, function (_key, childViews) {\r\n                    views_1 = views_1.concat(childViews);\r\n                });\r\n                return views_1;\r\n            }\r\n        });\r\n    };\r\n    SyncTree.prototype.removeTags_ = function (queries) {\r\n        for (var j = 0; j < queries.length; ++j) {\r\n            var removedQuery = queries[j];\r\n            if (!removedQuery.getQueryParams().loadsAllData()) {\r\n                // We should have a tag for this\r\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\r\n                var removedQueryTag = this.queryToTagMap.get(removedQueryKey);\r\n                this.queryToTagMap.delete(removedQueryKey);\r\n                this.tagToQueryMap.delete(removedQueryTag);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes a query to a query we send the server for listening\r\n     *\r\n     * @return The normalized query\r\n     */\r\n    SyncTree.queryForListening_ = function (query) {\r\n        if (query.getQueryParams().loadsAllData() &&\r\n            !query.getQueryParams().isDefault()) {\r\n            // We treat queries that load all data as default queries\r\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n            // from Query\r\n            return query.getRef();\r\n        }\r\n        else {\r\n            return query;\r\n        }\r\n    };\r\n    /**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @return This method can return events to support synchronous data sources\r\n     */\r\n    SyncTree.prototype.setupListener_ = function (query, view) {\r\n        var path = query.path;\r\n        var tag = this.tagForQuery_(query);\r\n        var listener = this.createListenerForView_(view);\r\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n        var subtree = this.syncPointTree_.subtree(path);\r\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n        // may need to shadow other listens as well.\r\n        if (tag) {\r\n            util.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\r\n        }\r\n        else {\r\n            // Shadow everything at or below this location, this is a default listener.\r\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n                if (!relativePath.isEmpty() &&\r\n                    maybeChildSyncPoint &&\r\n                    maybeChildSyncPoint.hasCompleteView()) {\r\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\r\n                }\r\n                else {\r\n                    // No default listener here, flatten any deeper queries into an array\r\n                    var queries_1 = [];\r\n                    if (maybeChildSyncPoint) {\r\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\r\n                    }\r\n                    each(childMap, function (_key, childQueries) {\r\n                        queries_1 = queries_1.concat(childQueries);\r\n                    });\r\n                    return queries_1;\r\n                }\r\n            });\r\n            for (var i = 0; i < queriesToStop.length; ++i) {\r\n                var queryToStop = queriesToStop[i];\r\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    SyncTree.prototype.createListenerForView_ = function (view) {\r\n        var _this = this;\r\n        var query = view.getQuery();\r\n        var tag = this.tagForQuery_(query);\r\n        return {\r\n            hashFn: function () {\r\n                var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\r\n                return cache.hash();\r\n            },\r\n            onComplete: function (status) {\r\n                if (status === 'ok') {\r\n                    if (tag) {\r\n                        return _this.applyTaggedListenComplete(query.path, tag);\r\n                    }\r\n                    else {\r\n                        return _this.applyListenComplete(query.path);\r\n                    }\r\n                }\r\n                else {\r\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                    var error = errorForServerCode(status, query);\r\n                    return _this.removeEventRegistration(query, \r\n                    /*eventRegistration*/ null, error);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     */\r\n    SyncTree.makeQueryKey_ = function (query) {\r\n        return query.path.toString() + '$' + query.queryIdentifier();\r\n    };\r\n    /**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     */\r\n    SyncTree.parseQueryKey_ = function (queryKey) {\r\n        var splitIndex = queryKey.indexOf('$');\r\n        util.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n        return {\r\n            queryId: queryKey.substr(splitIndex + 1),\r\n            path: new Path(queryKey.substr(0, splitIndex))\r\n        };\r\n    };\r\n    /**\r\n     * Return the query associated with the given tag, if we have one\r\n     */\r\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\r\n        return this.tagToQueryMap.get(tag);\r\n    };\r\n    /**\r\n     * Return the tag associated with the given query.\r\n     */\r\n    SyncTree.prototype.tagForQuery_ = function (query) {\r\n        var queryKey = SyncTree.makeQueryKey_(query);\r\n        return this.queryToTagMap.get(queryKey);\r\n    };\r\n    /**\r\n     * Static accessor for query tags.\r\n     */\r\n    SyncTree.getNextQueryTag_ = function () {\r\n        return SyncTree.nextQueryTag_++;\r\n    };\r\n    /**\r\n     * A helper method to apply tagged operations\r\n     */\r\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\r\n        var syncPoint = this.syncPointTree_.get(queryPath);\r\n        util.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\r\n        return syncPoint.applyOperation(operation, writesCache, \r\n        /*serverCache=*/ null);\r\n    };\r\n    /**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n     *\r\n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n     *\r\n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     */\r\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\r\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \r\n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path.Empty));\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     */\r\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        if (operation.path.isEmpty()) {\r\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n        }\r\n        else {\r\n            var syncPoint = syncPointTree.get(Path.Empty);\r\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n            if (serverCache == null && syncPoint != null) {\r\n                serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n            }\r\n            var events = [];\r\n            var childName = operation.path.getFront();\r\n            var childOperation = operation.operationForChild(childName);\r\n            var childTree = syncPointTree.children.get(childName);\r\n            if (childTree && childOperation) {\r\n                var childServerCache = serverCache\r\n                    ? serverCache.getImmediateChild(childName)\r\n                    : null;\r\n                var childWritesCache = writesCache.child(childName);\r\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n            if (syncPoint) {\r\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     */\r\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        var _this = this;\r\n        var syncPoint = syncPointTree.get(Path.Empty);\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var events = [];\r\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writesCache.child(childName);\r\n            var childOperation = operation.operationForChild(childName);\r\n            if (childOperation) {\r\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n        });\r\n        if (syncPoint) {\r\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Static tracker for next query tag.\r\n     */\r\n    SyncTree.nextQueryTag_ = 1;\r\n    return SyncTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!util.contains(this.counters_, name)) {\r\n            this.counters_[name] = 0;\r\n        }\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return util.deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StatsManager = /** @class */ (function () {\r\n    function StatsManager() {\r\n    }\r\n    StatsManager.getCollection = function (repoInfo) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.collections_[hashString]) {\r\n            this.collections_[hashString] = new StatsCollection();\r\n        }\r\n        return this.collections_[hashString];\r\n    };\r\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.reporters_[hashString]) {\r\n            this.reporters_[hashString] = creatorFunction();\r\n        }\r\n        return this.reporters_[hashString];\r\n    };\r\n    StatsManager.collections_ = {};\r\n    StatsManager.reporters_ = {};\r\n    return StatsManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = tslib.__assign({}, newStats);\r\n        if (this.last_) {\r\n            each(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\n/**\r\n * @constructor\r\n */\r\nvar StatsReporter = /** @class */ (function () {\r\n    /**\r\n     * @param collection\r\n     * @param server_\r\n     */\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.includeStat = function (stat) {\r\n        this.statsToReport_[stat] = true;\r\n    };\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        each(stats, function (stat, value) {\r\n            if (value > 0 && util.contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        /**\r\n         * @private\r\n         * @type {!Array.<EventList>}\r\n         */\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         * @private\r\n         * @type {!number}\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    /**\r\n     * @param {!Array.<Event>} eventDataList The new events to queue.\r\n     */\r\n    EventQueue.prototype.queueEvents = function (eventDataList) {\r\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n        var currList = null;\r\n        for (var i = 0; i < eventDataList.length; i++) {\r\n            var eventData = eventDataList[i];\r\n            var eventPath = eventData.getPath();\r\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\r\n                this.eventLists_.push(currList);\r\n                currList = null;\r\n            }\r\n            if (currList === null) {\r\n                currList = new EventList(eventPath);\r\n            }\r\n            currList.add(eventData);\r\n        }\r\n        if (currList) {\r\n            this.eventLists_.push(currList);\r\n        }\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n     * for the specified path.\r\n     *\r\n     * It is assumed that the new events are all for the specified path.\r\n     *\r\n     * @param {!Path} path The path to raise events for.\r\n     * @param {!Array.<Event>} eventDataList The new events to raise.\r\n     */\r\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.equals(path);\r\n        });\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n     * locations related to the specified change path (i.e. all ancestors and descendants).\r\n     *\r\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n     *\r\n     * @param {!Path} changedPath The path to raise events for.\r\n     * @param {!Array.<!Event>} eventDataList The events to raise\r\n     */\r\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!function(!Path):boolean} predicate\r\n     * @private\r\n     */\r\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\r\n        this.recursionDepth_++;\r\n        var sentAll = true;\r\n        for (var i = 0; i < this.eventLists_.length; i++) {\r\n            var eventList = this.eventLists_[i];\r\n            if (eventList) {\r\n                var eventPath = eventList.getPath();\r\n                if (predicate(eventPath)) {\r\n                    this.eventLists_[i].raise();\r\n                    this.eventLists_[i] = null;\r\n                }\r\n                else {\r\n                    sentAll = false;\r\n                }\r\n            }\r\n        }\r\n        if (sentAll) {\r\n            this.eventLists_ = [];\r\n        }\r\n        this.recursionDepth_--;\r\n    };\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\r\nvar EventList = /** @class */ (function () {\r\n    function EventList(path_) {\r\n        this.path_ = path_;\r\n        /**\r\n         * @type {!Array.<Event>}\r\n         * @private\r\n         */\r\n        this.events_ = [];\r\n    }\r\n    /**\r\n     * @param {!Event} eventData\r\n     */\r\n    EventList.prototype.add = function (eventData) {\r\n        this.events_.push(eventData);\r\n    };\r\n    /**\r\n     * Iterates through the list and raises each event\r\n     */\r\n    EventList.prototype.raise = function () {\r\n        for (var i = 0; i < this.events_.length; i++) {\r\n            var eventData = this.events_[i];\r\n            if (eventData !== null) {\r\n                this.events_[i] = null;\r\n                var eventFn = eventData.getEventRunner();\r\n                if (logger) {\r\n                    log('event: ' + eventData.toString());\r\n                }\r\n                exceptionGuard(eventFn);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    EventList.prototype.getPath = function () {\r\n        return this.path_;\r\n    };\r\n    return EventList;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    /**\r\n     * @param {!Array.<string>} allowedEvents_\r\n     */\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        util.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     * @param {!string} eventType\r\n     * @param {...*} varArgs\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var varArgs = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            varArgs[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = tslib.__spread(this.listeners_[eventType]);\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, varArgs);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        util.assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @extends {EventEmitter}\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    tslib.__extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    tslib.__extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !util.isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     * @param {number} requestNum\r\n     * @param {Array} data\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId An identifier for this connection, used for logging\r\n     * @param repoInfo The info for the endpoint to send data to.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.applicationId = applicationId;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfo.connectionURL(LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     *\r\n     * @param {function(Object)} onMessage Callback when messages arrive\r\n     * @param {function()} onDisconnect Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_) {\r\n                return;\r\n            }\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = tslib.__read(args, 5), command = _a[0], arg1 = _a[1], arg2 = _a[2], arg3 = _a[3], arg4 = _a[4];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder) {\r\n                    return; // we closed the connection.\r\n                }\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command === FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = tslib.__read(args, 2), pN = _a[0], data = _a[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            }\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (_this.applicationId) {\r\n                urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\r\n            }\r\n            if (typeof location !== 'undefined' &&\r\n                location.href &&\r\n                location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        if (util.isNodeSdk()) {\r\n            return false;\r\n        }\r\n        else if (BrowserPollConnection.forceAllow_) {\r\n            return true;\r\n        }\r\n        else {\r\n            // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n            // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n            return (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp());\r\n        }\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param {!Object} data The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = util.base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     * @param {!string} id\r\n     * @param {!string} pw\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (util.isNodeSdk()) {\r\n            return;\r\n        }\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     * @param {*} args\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = util.stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        this.outstandingRequests = new Set();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!util.isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     * @private\r\n     * @return {Element}\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (iframe.document) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param {!string} id - The ID of this connection\r\n     * @param {!string} pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length +\r\n                    SEG_HEADER_SIZE +\r\n                    curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param {!string} url - The URL of the script tag.\r\n     * @param {!number} serial - The serial number of the request.\r\n     * @private\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.delete(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param {!string} url - The URL for the script tag source.\r\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (util.isNodeSdk()) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls) {\r\n                        return;\r\n                    }\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** The semver (www.semver.org) version of the SDK. */\r\nvar SDK_VERSION = '';\r\n// SDK_VERSION should be set before any database instance is created\r\nfunction setSDKVersion(version) {\r\n    SDK_VERSION = version;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId identifier for this transport\r\n     * @param repoInfo The info for the websocket endpoint.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.applicationId = applicationId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n    }\r\n    /**\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return {string} connection url\r\n     * @private\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!util.isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.href &&\r\n            location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfo.connectionURL(WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     *\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (util.isNodeSdk()) {\r\n                var device = util.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') === 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                var options = {\r\n                    headers: {\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                _this.log_(error);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     * @return {boolean}\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length === this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = util.jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} frameCount The number of frames we are expecting from the server\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @param {!String} data\r\n     * @return {?String} Any remaining data to be process, or null if there is none\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        util.assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null) {\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        }\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param {Object} data The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param {string} str String to send.\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        /**\r\n         * @const\r\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n         */\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {!RepoInfo} repoInfo\r\n     * @private\r\n     */\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var e_1, _a;\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable) {\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            }\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports = (this.transports_ = []);\r\n            try {\r\n                for (var _b = tslib.__values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var transport = _c.value;\r\n                    if (transport && transport['isAvailable']()) {\r\n                        transports.push(transport);\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n     * initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n     * transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param id - an id for this connection\r\n     * @param repoInfo_ - the info for the endpoint to connect to\r\n     * @param applicationId_ - the Firebase App ID for this project\r\n     * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, applicationId_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.applicationId_ = applicationId_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     * @private\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeoutMS = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeoutMS > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            }, Math.floor(healthyTimeoutMS));\r\n        }\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     * @private\r\n     */\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ !== 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} handshake The handshake data returned from the server\r\n     * @private\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.updateHost(host);\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ === 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.updateHost(host);\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    /**\r\n     *\r\n     * @param {string} reason\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, ?string)} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param {string} token The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    /**\r\n     * @param {Object.<string, *>} stats\r\n     */\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    tslib.__extends(PersistentConnection, _super);\r\n    /**\r\n     * @implements {ServerActions}\r\n     * @param repoInfo_ Data about the namespace we are connecting to\r\n     * @param applicationId_ The Firebase App ID for this project\r\n     * @param onDataUpdate_ A callback for new data from the server\r\n     */\r\n    function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.applicationId_ = applicationId_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        _this.interruptReasons_ = {};\r\n        /** Map<path, Map<queryId, ListenSpec>> */\r\n        _this.listens = new Map();\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        _this.establishConnectionTimer_ = null;\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        _this.realtime_ = null;\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !util.isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(util.stringify(msg));\r\n        util.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        if (!this.listens.has(pathString)) {\r\n            this.listens.set(pathString, new Map());\r\n        }\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\r\n        util.assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens.get(pathString).set(queryId, listenSpec);\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query.queryObject();\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens.get(pathString) &&\r\n                _this.listens.get(pathString).get(queryId);\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && util.contains(payload, 'w')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var warnings = util.safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' + query.getQueryParams().getIndex().toString() + '\"';\r\n                var indexPath = query.path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || util.isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = util.isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined) {\r\n            request[ /*hash*/'h'] = hash;\r\n        }\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete) {\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + util.stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        }\r\n        else if (action === 'm') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        }\r\n        else if (action === 'c') {\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        }\r\n        else if (action === 'ac') {\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'sd') {\r\n            this.onSecurityDebugPacket_(body);\r\n        }\r\n        else {\r\n            error('Unrecognized action received from server: ' +\r\n                util.stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        util.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(timeout));\r\n    };\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                }\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                util.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, self_1.applicationId_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error) {\r\n                self_1.log_('Failed to get token: ' + error);\r\n                if (!canceled_1) {\r\n                    if (util.CONSTANTS.NODE_ADMIN) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (util.isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete) {\r\n                    put.onComplete('disconnect');\r\n                }\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0) {\r\n            this.outstandingPuts_ = [];\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete) {\r\n            listen.onComplete('permission_denied');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens.has(normalizedPathString)) {\r\n            var map = this.listens.get(normalizedPathString);\r\n            listen = map.get(queryId);\r\n            map.delete(queryId);\r\n            if (map.size === 0) {\r\n                this.listens.delete(normalizedPathString);\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var e_1, _a, e_2, _b;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        try {\r\n            // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n            // make sure to send listens before puts.\r\n            for (var _c = tslib.__values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var queries = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, tslib.__values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var listenSpec = _f.value;\r\n                        this.sendListen_(listenSpec);\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i]) {\r\n                this.sendPut_(i);\r\n            }\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (util.CONSTANTS.NODE_ADMIN) {\r\n            clientName = 'admin_node';\r\n        }\r\n        else if (util.CONSTANTS.NODE_CLIENT) {\r\n            clientName = 'node';\r\n        }\r\n        stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (util.isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (util.isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return util.isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    tslib.__extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param {AuthTokenProvider} authTokenProvider_\r\n     * @implements {ServerActions}\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         *\r\n         * @private {!Object.<string, !Object>}\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?number=} tag\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            util.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query.path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParameters = query\r\n            .getQueryParams()\r\n            .toRestQueryStringParameters();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (util.safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error === 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {!Object.<string, *>} queryStringParameters\r\n     * @param {?function(?number, *=)} callback\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                _this.repoInfo_.namespace +\r\n                util.querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = util.jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    function Repo(repoInfo_, forceRestClient, app, authTokenProvider) {\r\n        var _this = this;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.app = app;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        /** A list of data pieces and paths to be set when this client disconnects. */\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        // TODO: This should be @private but it's used by test_access.js and internal.js\r\n        this.persistentConnection_ = null;\r\n        this.stats_ = StatsManager.getCollection(repoInfo_);\r\n        if (forceRestClient || beingCrawled()) {\r\n            this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\r\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\r\n        }\r\n        else {\r\n            var authOverride = app.options['databaseAuthVariableOverride'];\r\n            // Validate authOverride\r\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n                if (typeof authOverride !== 'object') {\r\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n                }\r\n                try {\r\n                    util.stringify(authOverride);\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Invalid authOverride provided: ' + e);\r\n                }\r\n            }\r\n            this.persistentConnection_ = new PersistentConnection(this.repoInfo_, app.options.appId, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\r\n            this.server_ = this.persistentConnection_;\r\n        }\r\n        authTokenProvider.addTokenChangeListener(function (token) {\r\n            _this.server_.refreshAuthToken(token);\r\n        });\r\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n        this.statsReporter_ = StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter(_this.stats_, _this.server_); });\r\n        this.transactionsInit_();\r\n        // Used for .info.\r\n        this.infoData_ = new SnapshotHolder();\r\n        this.infoSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                var infoEvents = [];\r\n                var node = _this.infoData_.getNode(query.path);\r\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n                // on initial data...\r\n                if (!node.isEmpty()) {\r\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\r\n                    setTimeout(function () {\r\n                        onComplete('ok');\r\n                    }, 0);\r\n                }\r\n                return infoEvents;\r\n            },\r\n            stopListening: function () { }\r\n        });\r\n        this.updateInfo_('connected', false);\r\n        this.serverSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                    var events = onComplete(status, data);\r\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\r\n                });\r\n                // No synchronous events for network-backed sync trees\r\n                return [];\r\n            },\r\n            stopListening: function (query, tag) {\r\n                _this.server_.unlisten(query, tag);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @return The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    /**\r\n     * @return The namespace represented by the repo.\r\n     */\r\n    Repo.prototype.name = function () {\r\n        return this.repoInfo_.namespace;\r\n    };\r\n    /**\r\n     * @return The time in milliseconds, taking the server offset into account if we have one.\r\n     */\r\n    Repo.prototype.serverTime = function () {\r\n        var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n        var offset = offsetNode.val() || 0;\r\n        return new Date().getTime() + offset;\r\n    };\r\n    /**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     */\r\n    Repo.prototype.generateServerValues = function () {\r\n        return generateWithValues({\r\n            timestamp: this.serverTime()\r\n        });\r\n    };\r\n    /**\r\n     * Called by realtime when we get new messages from the server.\r\n     */\r\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\r\n        // For testing.\r\n        this.dataUpdateCount++;\r\n        var path = new Path(pathString);\r\n        data = this.interceptServerDataCallback_\r\n            ? this.interceptServerDataCallback_(pathString, data)\r\n            : data;\r\n        var events = [];\r\n        if (tag) {\r\n            if (isMerge) {\r\n                var taggedChildren = util.map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\r\n            }\r\n            else {\r\n                var taggedSnap = nodeFromJSON$1(data);\r\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\r\n            }\r\n        }\r\n        else if (isMerge) {\r\n            var changedChildren = util.map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\r\n        }\r\n        else {\r\n            var snap = nodeFromJSON$1(data);\r\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\r\n        }\r\n        var affectedPath = path;\r\n        if (events.length > 0) {\r\n            // Since we have a listener outstanding for each transaction, receiving any events\r\n            // is a proxy for some change having occurred.\r\n            affectedPath = this.rerunTransactions_(path);\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\r\n    };\r\n    // TODO: This should be @private but it's used by test_access.js and internal.js\r\n    Repo.prototype.interceptServerData_ = function (callback) {\r\n        this.interceptServerDataCallback_ = callback;\r\n    };\r\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\r\n        this.updateInfo_('connected', connectStatus);\r\n        if (connectStatus === false) {\r\n            this.runOnDisconnectEvents_();\r\n        }\r\n    };\r\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\r\n        var _this = this;\r\n        each(updates, function (key, value) {\r\n            _this.updateInfo_(key, value);\r\n        });\r\n    };\r\n    Repo.prototype.updateInfo_ = function (pathString, value) {\r\n        var path = new Path('/.info/' + pathString);\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.infoData_.updateSnapshot(path, newNode);\r\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n    };\r\n    Repo.prototype.getNextWriteId_ = function () {\r\n        return this.nextWriteId_++;\r\n    };\r\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\r\n        var _this = this;\r\n        this.log_('set', {\r\n            path: path.toString(),\r\n            value: newVal,\r\n            priority: newPriority\r\n        });\r\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n        // (b) store unresolved paths on JSON parse\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n        var existing = this.serverSyncTree_.calcCompleteEventCache(path);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\r\n        var writeId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\r\n        this.eventQueue_.queueEvents(events);\r\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('set at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n        var affectedPath = this.abortTransactions_(path);\r\n        this.rerunTransactions_(affectedPath);\r\n        // We queued the events above, so just flush the queue here\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\r\n    };\r\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\r\n        // Start with our existing data and merge each child into it.\r\n        var empty = true;\r\n        var serverValues = this.generateServerValues();\r\n        var changedChildren = {};\r\n        each(childrenToMerge, function (changedKey, changedValue) {\r\n            empty = false;\r\n            changedChildren[changedKey] = resolveDeferredValueTree(path.child(changedKey), nodeFromJSON$1(changedValue), _this.serverSyncTree_, serverValues);\r\n        });\r\n        if (!empty) {\r\n            var writeId_1 = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\r\n            this.eventQueue_.queueEvents(events);\r\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n                var success = status === 'ok';\r\n                if (!success) {\r\n                    warn('update at ' + path + ' failed: ' + status);\r\n                }\r\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\r\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\r\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\r\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n            });\r\n            each(childrenToMerge, function (changedPath) {\r\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\r\n                _this.rerunTransactions_(affectedPath);\r\n            });\r\n            // We queued the events above, so just flush the queue here\r\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\r\n        }\r\n        else {\r\n            log(\"update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n        }\r\n    };\r\n    /**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     */\r\n    Repo.prototype.runOnDisconnectEvents_ = function () {\r\n        var _this = this;\r\n        this.log_('onDisconnectEvents');\r\n        var serverValues = this.generateServerValues();\r\n        var resolvedOnDisconnectTree = new SparseSnapshotTree();\r\n        this.onDisconnect_.forEachTree(Path.Empty, function (path, node) {\r\n            var resolved = resolveDeferredValueTree(path, node, _this.serverSyncTree_, serverValues);\r\n            resolvedOnDisconnectTree.remember(path, resolved);\r\n        });\r\n        var events = [];\r\n        resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\r\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\r\n            var affectedPath = _this.abortTransactions_(path);\r\n            _this.rerunTransactions_(affectedPath);\r\n        });\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\r\n    };\r\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\r\n        var _this = this;\r\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.forget(path);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value, priority);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        if (util.isEmpty(childrenToMerge)) {\r\n            log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n            return;\r\n        }\r\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                each(childrenToMerge, function (childName, childNode) {\r\n                    var newChildNode = nodeFromJSON$1(childNode);\r\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\r\n                });\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\r\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n        // a little bit by handling the return values anyways.\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.interrupt = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.resume = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.resume(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.stats = function (showDelta) {\r\n        if (showDelta === void 0) { showDelta = false; }\r\n        if (typeof console === 'undefined') {\r\n            return;\r\n        }\r\n        var stats;\r\n        if (showDelta) {\r\n            if (!this.statsListener_) {\r\n                this.statsListener_ = new StatsListener(this.stats_);\r\n            }\r\n            stats = this.statsListener_.get();\r\n        }\r\n        else {\r\n            stats = this.stats_.get();\r\n        }\r\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n            return Math.max(currentValue.length, previousValue);\r\n        }, 0);\r\n        each(stats, function (stat, value) {\r\n            var paddedStat = stat;\r\n            // pad stat names to be the same length (plus 2 extra spaces).\r\n            for (var i = stat.length; i < longestName + 2; i++) {\r\n                paddedStat += ' ';\r\n            }\r\n            console.log(paddedStat + value);\r\n        });\r\n    };\r\n    Repo.prototype.statsIncrementCounter = function (metric) {\r\n        this.stats_.incrementCounter(metric);\r\n        this.statsReporter_.includeStat(metric);\r\n    };\r\n    Repo.prototype.log_ = function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        var prefix = '';\r\n        if (this.persistentConnection_) {\r\n            prefix = this.persistentConnection_.id + ':';\r\n        }\r\n        log.apply(void 0, tslib.__spread([prefix], varArgs));\r\n    };\r\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\r\n        if (callback) {\r\n            exceptionGuard(function () {\r\n                if (status === 'ok') {\r\n                    callback(null);\r\n                }\r\n                else {\r\n                    var code = (status || 'error').toUpperCase();\r\n                    var message = code;\r\n                    if (errorReason) {\r\n                        message += ': ' + errorReason;\r\n                    }\r\n                    var error = new Error(message);\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    error.code = code;\r\n                    callback(error);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Repo.prototype, \"database\", {\r\n        get: function () {\r\n            return this.__database || (this.__database = new Database(this));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Repo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    /**\r\n     * @param {!NamedNode} node\r\n     * @return {boolean}\r\n     */\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!Node} snap\r\n     * @param {string} childKey\r\n     * @param {!Node} childSnap\r\n     * @param {!CompleteChildSource} source\r\n     * @param {?ChildChangeAccumulator} changeAccumulator\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        util.assert(oldEventCache.numChildren() === this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     * @return {!number}\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        util.assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    /**\r\n     * @return {!Index}\r\n     */\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     * @private\r\n     */\r\n    QueryParams.prototype.copy_ = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limit = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = '';\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToFirst = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToLast = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.startAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.startSet_ = true;\r\n        if (indexValue === undefined) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexStartValue_ = indexValue;\r\n        if (key != null) {\r\n            newParams.startNameSet_ = true;\r\n            newParams.indexStartName_ = key;\r\n        }\r\n        else {\r\n            newParams.startNameSet_ = false;\r\n            newParams.indexStartName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.endAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.endSet_ = true;\r\n        if (indexValue === undefined) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexEndValue_ = indexValue;\r\n        if (key !== undefined) {\r\n            newParams.endNameSet_ = true;\r\n            newParams.indexEndName_ = key;\r\n        }\r\n        else {\r\n            newParams.endNameSet_ = false;\r\n            newParams.indexEndName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!Index} index\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.orderBy = function (index) {\r\n        var newParams = this.copy_();\r\n        newParams.index_ = index;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @return {!Object}\r\n     */\r\n    QueryParams.prototype.getQueryObject = function () {\r\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\r\n        var obj = {};\r\n        if (this.startSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\r\n            if (this.startNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\r\n            if (this.endNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\r\n            var viewFrom = this.viewFrom_;\r\n            if (viewFrom === '') {\r\n                if (this.isViewFromLeft()) {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\r\n                }\r\n                else {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\r\n                }\r\n            }\r\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\r\n        }\r\n        // For now, priority index is the default, so we only specify if it's some other index\r\n        if (this.index_ !== PRIORITY_INDEX) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\r\n    };\r\n    /**\r\n     * @return {!NodeFilter}\r\n     */\r\n    QueryParams.prototype.getNodeFilter = function () {\r\n        if (this.loadsAllData()) {\r\n            return new IndexedFilter(this.getIndex());\r\n        }\r\n        else if (this.hasLimit()) {\r\n            return new LimitedFilter(this);\r\n        }\r\n        else {\r\n            return new RangedFilter(this);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a set of REST query string parameters representing this query.\r\n     *\r\n     * @return {!Object.<string,*>} query string parameters\r\n     */\r\n    QueryParams.prototype.toRestQueryStringParameters = function () {\r\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\r\n        var qs = {};\r\n        if (this.isDefault()) {\r\n            return qs;\r\n        }\r\n        var orderBy;\r\n        if (this.index_ === PRIORITY_INDEX) {\r\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\r\n        }\r\n        else if (this.index_ === VALUE_INDEX) {\r\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\r\n        }\r\n        else if (this.index_ === KEY_INDEX) {\r\n            orderBy = REST_CONSTANTS.KEY_INDEX;\r\n        }\r\n        else {\r\n            util.assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n            orderBy = this.index_.toString();\r\n        }\r\n        qs[REST_CONSTANTS.ORDER_BY] = util.stringify(orderBy);\r\n        if (this.startSet_) {\r\n            qs[REST_CONSTANTS.START_AT] = util.stringify(this.indexStartValue_);\r\n            if (this.startNameSet_) {\r\n                qs[REST_CONSTANTS.START_AT] += ',' + util.stringify(this.indexStartName_);\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            qs[REST_CONSTANTS.END_AT] = util.stringify(this.indexEndValue_);\r\n            if (this.endNameSet_) {\r\n                qs[REST_CONSTANTS.END_AT] += ',' + util.stringify(this.indexEndName_);\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            if (this.isViewFromLeft()) {\r\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\r\n            }\r\n            else {\r\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\r\n            }\r\n        }\r\n        return qs;\r\n    };\r\n    /**\r\n     * Wire Protocol Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\r\n        INDEX_START_VALUE: 'sp',\r\n        INDEX_START_NAME: 'sn',\r\n        INDEX_END_VALUE: 'ep',\r\n        INDEX_END_NAME: 'en',\r\n        LIMIT: 'l',\r\n        VIEW_FROM: 'vf',\r\n        VIEW_FROM_LEFT: 'l',\r\n        VIEW_FROM_RIGHT: 'r',\r\n        INDEX: 'i'\r\n    };\r\n    /**\r\n     * REST Query Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.REST_QUERY_CONSTANTS_ = {\r\n        ORDER_BY: 'orderBy',\r\n        PRIORITY_INDEX: '$priority',\r\n        VALUE_INDEX: '$value',\r\n        KEY_INDEX: '$key',\r\n        START_AT: 'startAt',\r\n        END_AT: 'endAt',\r\n        LIMIT_TO_FIRST: 'limitToFirst',\r\n        LIMIT_TO_LAST: 'limitToLast'\r\n    };\r\n    /**\r\n     * Default, empty query parameters\r\n     * @type {!QueryParams}\r\n     * @const\r\n     */\r\n    QueryParams.DEFAULT = new QueryParams();\r\n    return QueryParams;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Reference = /** @class */ (function (_super) {\r\n    tslib.__extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     *\r\n     * @param {!Repo} repo\r\n     * @param {(!Path)} path\r\n     * @extends {Query}\r\n     */\r\n    function Reference(repo, path) {\r\n        var _this = this;\r\n        if (!(repo instanceof Repo)) {\r\n            throw new Error('new Reference() no longer supported - use app.database().');\r\n        }\r\n        // call Query's constructor, passing in the repo and path.\r\n        _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\r\n        return _this;\r\n    }\r\n    /** @return {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        util.validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        if (this.path.isEmpty()) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.path.getBack();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!(string|Path)} pathString\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.child = function (pathString) {\r\n        util.validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        else if (!(pathString instanceof Path)) {\r\n            if (this.path.getFront() === null) {\r\n                validateRootPathString('Reference.child', 1, pathString, false);\r\n            }\r\n            else {\r\n                validatePathString('Reference.child', 1, pathString, false);\r\n            }\r\n        }\r\n        return new Reference(this.repo, this.path.child(pathString));\r\n    };\r\n    /** @return {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        util.validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parentPath = this.path.parent();\r\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\r\n    };\r\n    /** @return {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        util.validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        var ref = this;\r\n        while (ref.getParent() !== null) {\r\n            ref = ref.getParent();\r\n        }\r\n        return ref;\r\n    };\r\n    /** @return {!Database} */\r\n    Reference.prototype.databaseProp = function () {\r\n        return this.repo.database;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        util.validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.set', this.path);\r\n        validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\r\n        util.validateCallback('Reference.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, \r\n        /*priority=*/ null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.update', this.path);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\r\n        util.validateCallback('Reference.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {string|number|null} newPriority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        util.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('Reference.setWithPriority', this.path);\r\n        validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\r\n        validatePriority('Reference.setWithPriority', 2, newPriority, false);\r\n        util.validateCallback('Reference.setWithPriority', 3, onComplete, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys') {\r\n            throw ('Reference.setWithPriority failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.');\r\n        }\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateWritablePath('Reference.remove', this.path);\r\n        util.validateCallback('Reference.remove', 1, onComplete, true);\r\n        return this.set(null, onComplete);\r\n    };\r\n    /**\r\n     * @param {function(*):*} transactionUpdate\r\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n     * @param {boolean=} applyLocally\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        util.validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateWritablePath('Reference.transaction', this.path);\r\n        util.validateCallback('Reference.transaction', 1, transactionUpdate, false);\r\n        util.validateCallback('Reference.transaction', 2, onComplete, true);\r\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\r\n        // to expose it.\r\n        validateBoolean('Reference.transaction', 3, applyLocally, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys') {\r\n            throw ('Reference.transaction failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.');\r\n        }\r\n        if (applyLocally === undefined) {\r\n            applyLocally = true;\r\n        }\r\n        var deferred = new util.Deferred();\r\n        if (typeof onComplete === 'function') {\r\n            deferred.promise.catch(function () { });\r\n        }\r\n        var promiseComplete = function (error, committed, snapshot) {\r\n            if (error) {\r\n                deferred.reject(error);\r\n            }\r\n            else {\r\n                deferred.resolve(new TransactionResult(committed, snapshot));\r\n            }\r\n            if (typeof onComplete === 'function') {\r\n                onComplete(error, committed, snapshot);\r\n            }\r\n        };\r\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {string|number|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        util.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.setPriority', this.path);\r\n        validatePriority('Reference.setPriority', 1, priority, false);\r\n        util.validateCallback('Reference.setPriority', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*=} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        util.validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateWritablePath('Reference.push', this.path);\r\n        validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\r\n        util.validateCallback('Reference.push', 2, onComplete, true);\r\n        var now = this.repo.serverTime();\r\n        var name = nextPushId(now);\r\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\r\n        // We use child() to create handles to two different references. The first is turned into a\r\n        // ThennableReference below by adding then() and catch() methods and is used as the\r\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\r\n        // value of the first ThennableReference.\r\n        var thennablePushRef = this.child(name);\r\n        var pushRef = this.child(name);\r\n        var promise;\r\n        if (value != null) {\r\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\r\n        }\r\n        else {\r\n            promise = Promise.resolve(pushRef);\r\n        }\r\n        thennablePushRef.then = promise.then.bind(promise);\r\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n        if (typeof onComplete === 'function') {\r\n            promise.catch(function () { });\r\n        }\r\n        return thennablePushRef;\r\n    };\r\n    /**\r\n     * @return {!OnDisconnect}\r\n     */\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this.path);\r\n        return new OnDisconnect(this.repo, this.path);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"database\", {\r\n        get: function () {\r\n            return this.databaseProp();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nQuery.__referenceConstructor = Reference;\r\nSyncPoint.__referenceConstructor = Reference;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Node in a Tree.\r\n */\r\nvar TreeNode = /** @class */ (function () {\r\n    function TreeNode() {\r\n        // TODO: Consider making accessors that create children and value lazily or\r\n        // separate Internal / Leaf 'types'.\r\n        this.children = {};\r\n        this.childCount = 0;\r\n        this.value = null;\r\n    }\r\n    return TreeNode;\r\n}());\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {string=} name_ Optional name of the node.\r\n     * @param {Tree=} parent_ Optional parent node.\r\n     * @param {TreeNode=} node_ Optional node to wrap.\r\n     */\r\n    function Tree(name_, parent_, node_) {\r\n        if (name_ === void 0) { name_ = ''; }\r\n        if (parent_ === void 0) { parent_ = null; }\r\n        if (node_ === void 0) { node_ = new TreeNode(); }\r\n        this.name_ = name_;\r\n        this.parent_ = parent_;\r\n        this.node_ = node_;\r\n    }\r\n    /**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param {!(string|Path)} pathObj Path to look up.\r\n     * @return {!Tree.<T>} Tree for path.\r\n     */\r\n    Tree.prototype.subTree = function (pathObj) {\r\n        // TODO: Require pathObj to be Path?\r\n        var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n        var child = this, next = path.getFront();\r\n        while (next !== null) {\r\n            var childNode = util.safeGet(child.node_.children, next) || new TreeNode();\r\n            child = new Tree(next, child, childNode);\r\n            path = path.popFront();\r\n            next = path.getFront();\r\n        }\r\n        return child;\r\n    };\r\n    /**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return {?T} The data or null if no data exists.\r\n     */\r\n    Tree.prototype.getValue = function () {\r\n        return this.node_.value;\r\n    };\r\n    /**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param {!T} value Value to set.\r\n     */\r\n    Tree.prototype.setValue = function (value) {\r\n        util.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\r\n        this.node_.value = value;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */\r\n    Tree.prototype.clear = function () {\r\n        this.node_.value = null;\r\n        this.node_.children = {};\r\n        this.node_.childCount = 0;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree has any children.\r\n     */\r\n    Tree.prototype.hasChildren = function () {\r\n        return this.node_.childCount > 0;\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree is empty (no value or children).\r\n     */\r\n    Tree.prototype.isEmpty = function () {\r\n        return this.getValue() === null && !this.hasChildren();\r\n    };\r\n    /**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachChild = function (action) {\r\n        var _this = this;\r\n        each(this.node_.children, function (child, childTree) {\r\n            action(new Tree(child, _this, childTree));\r\n        });\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */\r\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\r\n        if (includeSelf && !childrenFirst) {\r\n            action(this);\r\n        }\r\n        this.forEachChild(function (child) {\r\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\r\n        });\r\n        if (includeSelf && childrenFirst) {\r\n            action(this);\r\n        }\r\n    };\r\n    /**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n     * @return {boolean} true if the action callback returned true.\r\n     */\r\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\r\n        var node = includeSelf ? this : this.parent();\r\n        while (node !== null) {\r\n            if (action(node)) {\r\n                return true;\r\n            }\r\n            node = node.parent();\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\r\n        this.forEachChild(function (child) {\r\n            if (child.getValue() !== null) {\r\n                action(child);\r\n            }\r\n            else {\r\n                child.forEachImmediateDescendantWithValue(action);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @return {!Path} The path of this tree node, as a Path.\r\n     */\r\n    Tree.prototype.path = function () {\r\n        return new Path(this.parent_ === null\r\n            ? this.name_\r\n            : this.parent_.path() + '/' + this.name_);\r\n    };\r\n    /**\r\n     * @return {string} The name of the tree node.\r\n     */\r\n    Tree.prototype.name = function () {\r\n        return this.name_;\r\n    };\r\n    /**\r\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n     */\r\n    Tree.prototype.parent = function () {\r\n        return this.parent_;\r\n    };\r\n    /**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     *\r\n     * @private\r\n     */\r\n    Tree.prototype.updateParents_ = function () {\r\n        if (this.parent_ !== null) {\r\n            this.parent_.updateChild_(this.name_, this);\r\n        }\r\n    };\r\n    /**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param {string} childName The name of the child to update.\r\n     * @param {!Tree.<T>} child The child to update.\r\n     * @private\r\n     */\r\n    Tree.prototype.updateChild_ = function (childName, child) {\r\n        var childEmpty = child.isEmpty();\r\n        var childExists = util.contains(this.node_.children, childName);\r\n        if (childEmpty && childExists) {\r\n            delete this.node_.children[childName];\r\n            this.node_.childCount--;\r\n            this.updateParents_();\r\n        }\r\n        else if (!childEmpty && !childExists) {\r\n            this.node_.children[childName] = child.node_;\r\n            this.node_.childCount++;\r\n            this.updateParents_();\r\n        }\r\n    };\r\n    return Tree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\r\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\r\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\r\n// For now it's part of Repo, but in its own file.\r\n/**\r\n * @enum {number}\r\n */\r\nvar TransactionStatus;\r\n(function (TransactionStatus) {\r\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\r\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\r\n    // mismatched hash.\r\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\r\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\r\n    // or rejected yet).\r\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\r\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\r\n    // removed when we get a chance to prune completed ones.\r\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\r\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\r\n    // If it comes back as unsuccessful, we'll abort it.\r\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\r\n    // Temporary state used to mark transactions that need to be aborted.\r\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\r\n})(TransactionStatus || (TransactionStatus = {}));\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\r\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.transactionsInit_ = function () {\r\n    /**\r\n     * Stores queues of outstanding transactions for Firebase locations.\r\n     *\r\n     * @type {!Tree.<Array.<!Transaction>>}\r\n     * @private\r\n     */\r\n    this.transactionQueueTree_ = new Tree();\r\n};\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\r\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\r\n    this.log_('transaction on ' + path);\r\n    // Add a watch to make sure we get server updates.\r\n    var valueCallback = function () { };\r\n    var watchRef = new Reference(this, path);\r\n    watchRef.on('value', valueCallback);\r\n    var unwatcher = function () {\r\n        watchRef.off('value', valueCallback);\r\n    };\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = this.getLatestState_(path);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            // We just set the input snapshot, so this cast should be safe\r\n            var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\r\n            transaction.onComplete(null, false, snapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = TransactionStatus.RUN;\r\n        var queueNode = this.transactionQueueTree_.subTree(path);\r\n        var nodeQueue = queueNode.getValue() || [];\r\n        nodeQueue.push(transaction);\r\n        queueNode.setValue(nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\r\n        // start new transactions from the event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            util.contains(newVal, '.priority')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            priorityForNode = util.safeGet(newVal, '.priority');\r\n            util.assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        this.sendReadyTransactions_();\r\n    }\r\n};\r\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\r\n    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n};\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.sendReadyTransactions_ = function (node) {\r\n    var _this = this;\r\n    if (node === void 0) { node = this.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        this.pruneCompletedTransactionsBelowNode_(node);\r\n    }\r\n    if (node.getValue() !== null) {\r\n        var queue = this.buildTransactionQueue_(node);\r\n        util.assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            this.sendTransactionQueue_(node.path(), queue);\r\n        }\r\n    }\r\n    else if (node.hasChildren()) {\r\n        node.forEachChild(function (childNode) {\r\n            _this.sendReadyTransactions_(childNode);\r\n        });\r\n    }\r\n};\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\r\n    var _this = this;\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = this.getLatestState_(path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        util.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = TransactionStatus.SENT;\r\n        txn.retryCount++;\r\n        var relativePath = Path.relativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /** @type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        _this.log_('transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n            // the callback could trigger more transactions or sets.\r\n            var callbacks = [];\r\n            for (var i = 0; i < queue.length; i++) {\r\n                queue[i].status = TransactionStatus.COMPLETED;\r\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\r\n                    var node = queue[i].currentOutputSnapshotResolved;\r\n                    var ref = new Reference(_this, queue[i].path);\r\n                    var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\r\n            // There may be pending transactions that we can now send.\r\n            _this.sendReadyTransactions_();\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\r\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    }\r\n                    else {\r\n                        queue[i].status = TransactionStatus.RUN;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            _this.rerunTransactions_(path);\r\n        }\r\n    }, latestHash);\r\n};\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.rerunTransactions_ = function (changedPath) {\r\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\r\n    var path = rootMostTransactionNode.path();\r\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\r\n    this.rerunTransactionQueue_(queue, path);\r\n    return path;\r\n};\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n    // the callback could trigger more transactions or sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === TransactionStatus.RUN;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var transaction = queue[i];\r\n        var relativePath = Path.relativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason = void 0;\r\n        util.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === TransactionStatus.RUN) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        util.contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = this.generateServerValues();\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = this.getNextWriteId_();\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = TransactionStatus.COMPLETED;\r\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\r\n            // So defer the unwatcher until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    var ref = new Reference(this, queue[i].path);\r\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\r\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\r\n                    var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    this.sendReadyTransactions_();\r\n};\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\r\n    var transactionNode = this.transactionQueueTree_;\r\n    front = path.getFront();\r\n    while (front !== null && transactionNode.getValue() === null) {\r\n        transactionNode = transactionNode.subTree(front);\r\n        path = path.popFront();\r\n        front = path.getFront();\r\n    }\r\n    return transactionNode;\r\n};\r\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) {\r\n        return a.order - b.order;\r\n    });\r\n    return transactionQueue;\r\n};\r\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\r\n    var _this = this;\r\n    var nodeQueue = node.getValue();\r\n    if (nodeQueue !== null) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    node.forEachChild(function (child) {\r\n        _this.aggregateTransactionQueuesForNode_(child, queue);\r\n    });\r\n};\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\r\n    var _this = this;\r\n    var queue = node.getValue();\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        node.setValue(queue.length > 0 ? queue : null);\r\n    }\r\n    node.forEachChild(function (childNode) {\r\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\r\n    });\r\n};\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.abortTransactions_ = function (path) {\r\n    var _this = this;\r\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\r\n    var transactionNode = this.transactionQueueTree_.subTree(path);\r\n    transactionNode.forEachAncestor(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    this.abortTransactionsOnNode_(transactionNode);\r\n    transactionNode.forEachDescendant(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    return affectedPath;\r\n};\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\r\n    var queue = node.getValue();\r\n    if (queue !== null) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n        // the callback could trigger more transactions or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\r\n        // can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) ;\r\n            else if (queue[i].status === TransactionStatus.SENT) {\r\n                util.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                util.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    var snapshot = null;\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            node.setValue(null);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar FirebaseAuthTokenProvider = /** @class */ (function () {\r\n    function FirebaseAuthTokenProvider(app_, authProvider_) {\r\n        var _this = this;\r\n        this.app_ = app_;\r\n        this.authProvider_ = authProvider_;\r\n        this.auth_ = null;\r\n        this.auth_ = authProvider_.getImmediate({ optional: true });\r\n        if (!this.auth_) {\r\n            authProvider_.get().then(function (auth) { return (_this.auth_ = auth); });\r\n        }\r\n    }\r\n    /**\r\n     * @param {boolean} forceRefresh\r\n     * @return {!Promise<FirebaseAuthTokenData>}\r\n     */\r\n    FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        if (!this.auth_) {\r\n            return Promise.resolve(null);\r\n        }\r\n        return this.auth_.getToken(forceRefresh).catch(function (error) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error && error.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        if (this.auth_) {\r\n            this.auth_.addAuthTokenListener(listener);\r\n        }\r\n        else {\r\n            setTimeout(function () { return listener(null); }, 0);\r\n            this.authProvider_\r\n                .get()\r\n                .then(function (auth) { return auth.addAuthTokenListener(listener); });\r\n        }\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.authProvider_\r\n            .get()\r\n            .then(function (auth) { return auth.removeAuthTokenListener(listener); });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.app_.name +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return FirebaseAuthTokenProvider;\r\n}());\r\n/* Auth token provider that the Admin SDK uses to connect to the Emulator. */\r\nvar EmulatorAdminTokenProvider = /** @class */ (function () {\r\n    function EmulatorAdminTokenProvider() {\r\n    }\r\n    EmulatorAdminTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return Promise.resolve({\r\n            accessToken: EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN\r\n        });\r\n    };\r\n    EmulatorAdminTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // Invoke the listener immediately to match the behavior in Firebase Auth\r\n        // (see packages/auth/src/auth.js#L1807)\r\n        listener(EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN);\r\n    };\r\n    EmulatorAdminTokenProvider.prototype.removeTokenChangeListener = function (listener) { };\r\n    EmulatorAdminTokenProvider.prototype.notifyForInvalidToken = function () { };\r\n    EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN = 'owner';\r\n    return EmulatorAdminTokenProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** @const {string} */\r\nvar DATABASE_URL_OPTION = 'databaseURL';\r\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\r\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\r\nvar _staticInstance;\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar RepoManager = /** @class */ (function () {\r\n    function RepoManager() {\r\n        /**\r\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n         */\r\n        this.repos_ = {};\r\n        /**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         * @private {boolean}\r\n         */\r\n        this.useRestClient_ = false;\r\n    }\r\n    RepoManager.getInstance = function () {\r\n        if (!_staticInstance) {\r\n            _staticInstance = new RepoManager();\r\n        }\r\n        return _staticInstance;\r\n    };\r\n    // TODO(koss): Remove these functions unless used in tests?\r\n    RepoManager.prototype.interrupt = function () {\r\n        var e_1, _a, e_2, _b;\r\n        try {\r\n            for (var _c = tslib.__values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var appName = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, tslib.__values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var dbUrl = _f.value;\r\n                        this.repos_[appName][dbUrl].interrupt();\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    };\r\n    RepoManager.prototype.resume = function () {\r\n        var e_3, _a, e_4, _b;\r\n        try {\r\n            for (var _c = tslib.__values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var appName = _d.value;\r\n                try {\r\n                    for (var _e = (e_4 = void 0, tslib.__values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var dbUrl = _f.value;\r\n                        this.repos_[appName][dbUrl].resume();\r\n                    }\r\n                }\r\n                catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_4) throw e_4.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n    };\r\n    /**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     *\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Database}\r\n     */\r\n    RepoManager.prototype.databaseFromApp = function (app, authProvider, url) {\r\n        var dbUrl = url || app.options[DATABASE_URL_OPTION];\r\n        if (dbUrl === undefined) {\r\n            fatal(\"Can't determine Firebase Database URL.  Be sure to include \" +\r\n                DATABASE_URL_OPTION +\r\n                ' option when calling firebase.initializeApp().');\r\n        }\r\n        var parsedUrl = parseRepoInfo(dbUrl);\r\n        var repoInfo = parsedUrl.repoInfo;\r\n        var isEmulator;\r\n        var dbEmulatorHost = undefined;\r\n        if (typeof process !== 'undefined') {\r\n            dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\r\n        }\r\n        if (dbEmulatorHost) {\r\n            isEmulator = true;\r\n            dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\r\n            parsedUrl = parseRepoInfo(dbUrl);\r\n            repoInfo = parsedUrl.repoInfo;\r\n        }\r\n        else {\r\n            isEmulator = !parsedUrl.repoInfo.secure;\r\n        }\r\n        var authTokenProvider = util.CONSTANTS.NODE_ADMIN && isEmulator\r\n            ? new EmulatorAdminTokenProvider()\r\n            : new FirebaseAuthTokenProvider(app, authProvider);\r\n        validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\r\n        if (!parsedUrl.path.isEmpty()) {\r\n            fatal('Database URL must point to the root of a Firebase Database ' +\r\n                '(not including a child path).');\r\n        }\r\n        var repo = this.createRepo(repoInfo, app, authTokenProvider);\r\n        return repo.database;\r\n    };\r\n    /**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     * @param {!Repo} repo\r\n     */\r\n    RepoManager.prototype.deleteRepo = function (repo) {\r\n        var appRepos = util.safeGet(this.repos_, repo.app.name);\r\n        // This should never happen...\r\n        if (!appRepos || util.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\r\n            fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n        }\r\n        repo.interrupt();\r\n        delete appRepos[repo.repoInfo_.toURLString()];\r\n    };\r\n    /**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Repo} The Repo object for the specified server / repoName.\r\n     */\r\n    RepoManager.prototype.createRepo = function (repoInfo, app, authTokenProvider) {\r\n        var appRepos = util.safeGet(this.repos_, app.name);\r\n        if (!appRepos) {\r\n            appRepos = {};\r\n            this.repos_[app.name] = appRepos;\r\n        }\r\n        var repo = util.safeGet(appRepos, repoInfo.toURLString());\r\n        if (repo) {\r\n            fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n        }\r\n        repo = new Repo(repoInfo, this.useRestClient_, app, authTokenProvider);\r\n        appRepos[repoInfo.toURLString()] = repo;\r\n        return repo;\r\n    };\r\n    /**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     * @param {boolean} forceRestClient\r\n     */\r\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\r\n        this.useRestClient_ = forceRestClient;\r\n    };\r\n    return RepoManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     * @param {!Repo} repo_\r\n     */\r\n    function Database(repo_) {\r\n        this.repo_ = repo_;\r\n        if (!(repo_ instanceof Repo)) {\r\n            fatal(\"Don't call new Database() directly - please use firebase.database().\");\r\n        }\r\n        /** @type {Reference} */\r\n        this.root_ = new Reference(repo_, Path.Empty);\r\n        this.INTERNAL = new DatabaseInternals(this);\r\n    }\r\n    Object.defineProperty(Database.prototype, \"app\", {\r\n        get: function () {\r\n            return this.repo_.app;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Database.prototype.ref = function (path) {\r\n        this.checkDeleted_('ref');\r\n        util.validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            return this.refFromURL(path.toString());\r\n        }\r\n        return path !== undefined ? this.root_.child(path) : this.root_;\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @param {string} url\r\n     * @return {!Reference} Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        /** @const {string} */\r\n        var apiName = 'database.refFromURL';\r\n        this.checkDeleted_(apiName);\r\n        util.validateArgCount(apiName, 1, 1, arguments.length);\r\n        var parsedURL = parseRepoInfo(url);\r\n        validateUrl(apiName, 1, parsedURL);\r\n        var repoInfo = parsedURL.repoInfo;\r\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\r\n            fatal(apiName +\r\n                ': Host name does not match the current database: ' +\r\n                '(found ' +\r\n                repoInfo.host +\r\n                ' but expected ' +\r\n                this.repo_.repoInfo_.host +\r\n                ')');\r\n        }\r\n        return this.ref(parsedURL.path.toString());\r\n    };\r\n    /**\r\n     * @param {string} apiName\r\n     */\r\n    Database.prototype.checkDeleted_ = function (apiName) {\r\n        if (this.repo_ === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        util.validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOffline');\r\n        this.repo_.interrupt();\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        util.validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOnline');\r\n        this.repo_.resume();\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: {\r\n            '.sv': 'timestamp'\r\n        },\r\n        increment: function (delta) {\r\n            return {\r\n                '.sv': {\r\n                    'increment': delta\r\n                }\r\n            };\r\n        }\r\n    };\r\n    return Database;\r\n}());\r\nvar DatabaseInternals = /** @class */ (function () {\r\n    /** @param {!Database} database */\r\n    function DatabaseInternals(database) {\r\n        this.database = database;\r\n    }\r\n    /** @return {Promise<void>} */\r\n    DatabaseInternals.prototype.delete = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            return tslib.__generator(this, function (_a) {\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                this.database.checkDeleted_('delete');\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                RepoManager.getInstance().deleteRepo(this.database.repo_);\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                this.database.repo_ = null;\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                this.database.root_ = null;\r\n                this.database.INTERNAL = null;\r\n                this.database = null;\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return DatabaseInternals;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    ref.repo.stats(showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    ref.repo.statsIncrementCounter(metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref.repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return ref.repo.interceptServerData_(callback);\r\n};\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        if (hash !== undefined) {\r\n            hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, onComplete, hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\r\nvar ConnectionTarget = RepoInfo;\r\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\r\nvar queryIdentifier = function (query) {\r\n    return query.queryIdentifier();\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    RepoManager.getInstance().forceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\n\nvar name = \"@firebase/database\";\nvar version = \"0.6.11\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // set SDK_VERSION\r\n    setSDKVersion(instance.SDK_VERSION);\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerComponent(new component.Component('database', function (container, url) {\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        var authProvider = container.getProvider('auth-internal');\r\n        return RepoManager.getInstance().databaseFromApp(app, authProvider, url);\r\n    }, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(\r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        DataSnapshot: DataSnapshot,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    })\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n    if (util.isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexports.DataSnapshot = DataSnapshot;\nexports.Database = Database;\nexports.OnDisconnect = OnDisconnect;\nexports.Query = Query;\nexports.Reference = Reference;\nexports.ServerValue = ServerValue;\nexports.enableLogging = enableLogging;\nexports.registerDatabase = registerDatabase;\n//# sourceMappingURL=index.cjs.js.map\n","exports.nextTick = function nextTick(fn) {\n    var args = Array.prototype.slice.call(arguments);\n    args.shift();\n    setTimeout(function () {\n        fn.apply(null, args);\n    }, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","import '@firebase/database';\n//# sourceMappingURL=index.esm.js.map\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n"],"sourceRoot":""}