{"version":3,"sources":["webpack:///./node_modules/node-libs-browser/mock/process.js","webpack:///./node_modules/firebase/database/dist/index.esm.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///./node_modules/path-browserify/index.js","webpack:///./node_modules/@firebase/database/dist/index.esm.js"],"names":["path","cwd","exports","nextTick","fn","args","Array","prototype","slice","call","arguments","shift","setTimeout","apply","platform","arch","execPath","title","pid","browser","env","argv","binding","name","Error","chdir","dir","resolve","exit","kill","umask","dlopen","uptime","memoryUsage","uvCounters","features","module","originalModule","webpackPolyfill","Object","create","children","defineProperty","enumerable","get","l","i","normalizeArray","parts","allowAboveRoot","up","length","last","splice","unshift","filter","xs","f","res","push","resolvedPath","resolvedAbsolute","process","TypeError","charAt","split","p","join","normalize","isAbsolute","trailingSlash","substr","paths","index","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","code","charCodeAt","hasRoot","matchedSlash","basename","ext","extname","startDot","startPart","preDotState","str","len","id","DOMStorageWrapper","domStorage_","this","prefix_","set","key","value","removeItem","prefixedName_","setItem","storedVal","getItem","remove","toString","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","LUIDGenerator","sha1","utf8Bytes","update","sha1Bytes","digest","encodeByteArray","buildLogMessage_","varArgs","_i","message","arg","isArray","logger","firstLog_","enableLogging","logger_","persistent","logLevel","VERBOSE","log","bind","logWrapper","prefix","error","fatal","warn","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","sort","splitStringBySize","segsize","dataSegs","c","substring","each","hasOwnProperty","doubleToIEEE754String","v","s","ln","Infinity","abs","pow","floor","LN2","round","bits","reverse","hexByteString","hexByte","parseInt","toLowerCase","INTEGER_REGEXP_","RegExp","test","intVal","exceptionGuard","stack","setTimeoutNonBlocking","time","timeout","Path","pathOrString","pieceNum","pieces_","copyTo","pieceNum_","configurable","getFront","getLength","popFront","getBack","pathString","toUrlEncodedString","encodeURIComponent","String","begin","parent","pieces","child","childPathObj","childPieces","isEmpty","relativePath","outerPath","innerPath","outer","inner","comparePaths","left","right","leftKeys","rightKeys","cmp","equals","other","j","contains","ValidationPath","errorPrefix_","parts_","byteLength_","max","checkValid_","pop","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","RepoInfo","host","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","domain","indexOf","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","type","params","connURL","pairs","toURLString","PUSH_CHARS","lastPushTime","lastRandChars","__EMPTY_NODE","MAX_NODE","parseRepoInfo","dataURL","parsedUrl","parseDatabaseURL","location","protocol","scheme","repoInfo","subdomain","port","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","replace","decodePath","queryParams","queryString","e_1","_a","results","_b","_c","next","done","segment","kv","e_1_1","return","decodeQuery","hostWithoutPort","dotInd","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","isValidKey","isValidPathString","isValidPriority","priority","validateFirebaseDataArg","fnName","argumentNumber","optional","undefined","validateFirebaseData","errorPrefix","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergeDataArg","errorPrefix$1","mergePaths","curPath","prevPath","validateFirebaseMergePaths","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","isValidRootPathString","validateBoolean","bool","OnDisconnect","repo_","cancel","onComplete","deferred","onDisconnectCancel","wrapCallback","promise","onDisconnectSet","setWithPriority","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","snapshot","toJSON","nextPushId","now","duplicateTime","timeStampChars","random","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","_super","val","isDefinedOn","maxPost","makePost","indexValue","KEY_INDEX","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","priorityHashText","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","EMPTY_NODE","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","action","exportFormat","getValue","hash","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","_defaultIndexMap","PRIORITY_INDEX","PriorityIndex","aPriority","bPriority","indexCmp","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","result","hasNext","peek","LLRBNode","color","RED","SortedMap","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","LOG_2","Base12Num","num","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","root","base12","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","buildFrom12Array","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","indexName","newIndexSet","newIndexes","addToIndexes","_this","indexedChildren","existingSnap","newChildren","removeFromIndexes","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","ChildrenNode","children_","indexMap_","Default","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","setMaxNode$1","nodeFromJSON$1","json","node_1","childData","children_1","childrenHavePriority_1","childSet","sortedChildSet","setNodeFromJSON","__referenceConstructor","VALUE_INDEX","ValueIndex","valueNode","PathIndex","indexPath_","extractChild","snap","aChild","bChild","DataSnapshot","node_","ref_","index_","exportVal","exists","childPathString","childPath","childRef","forEach","childrenNode","hasChildren","getKey","getRef","DataEvent","eventRegistration","prevName","getPath","ref","getParent","getEventType","getEventRunner","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","createEvent","change","query","getQueryParams","getIndex","snapshotNode","eventData","ctx","cancelCB_1","cb_1","createCancelEvent","matches","hasAnyCallback","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherKeys","thisKeys","otherCount","otherKey","thisKey","every","Query","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","tooManyArgsError","wrongArgTypeError","getIndexStartName","getIndexEndName","validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","on","callback","cancelCallbackOrContext","context","ret","getCancelAndContextArgs_","onValueEvent","callbacks","onChildEvent","cancelCallback","container","addEventCallbackForQuery","off","valueCallback","removeEventCallbackForQuery","once","userCallback","failureCallbackOrContext","firstCall","catch","onceCallback","err","reject","limitToFirst","limit","limitToLast","orderByChild","parsedPath","newParams","orderBy","orderByKey","orderByPriority","orderByValue","startAt","endAt","equalTo","queryObject","getQueryObject","queryIdentifier","isEqual","sameRepo","samePath","sameQueryIdentifier","cancelOrContext","ExistingValueProvider","DeferredValueProvider","syncTree","syncTree_","calcCompleteEventCache","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","stringify","op","existing","unused","delta","existingNode","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","OperationType","SparseSnapshotTree","Map","find","size","childKey","has","remember","clear","forget","self_1","tree","delete","forEachTree","prefixPath","func","emptyChildrenSingleton","__referenceConstructor$1","OperationSource","fromUser","fromServer","queryId","tagged","User","Server","forServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","source","operationForChild","subtree","Empty","ImmutableTree","fromObject","childSnap","findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","complete","filtered","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","Change","oldSnap","valueChange","VALUE","childAddedChange","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","IndexedFilter","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","values","NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","getCompleteChild","getChildAfterChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","calcCompleteChild","completeServerData","nodes","calcIndexedSlice","ProcessorResult","viewCache","changes","ViewProcessor","filter_","assertIndexed","applyOperation","oldViewCache","operation","writesCache","completeCache","newViewCache","filterServerNode","accumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","merge","applyUserMerge_","applyServerMerge_","ackUserWrite","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","newEventCache","serverCache","completeChildren","completeEventChildren","calcCompleteEventChildren","completeNode","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","newEventSnap","cacheHasChild_","changedChildren","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","oldEventCache","serverChildren","EventGenerator","query_","generateEventsForChanges","eventCache","eventRegistrations","events","moves","generateEventsForType_","registrations","filteredChanges","compareChanges_","materializedChange","materializeSingleChange_","registration","aWrapped","bWrapped","View","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","getCompleteServerCache","cache","loadsAllData","addEventRegistration","removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","remaining","generateEventsForChanges_","getInitialEvents","initialChanges","SyncPoint","views","optCompleteServerCache","view","serverCacheComplete","eventCacheComplete","e_2","removed","hadCompleteView","hasCompleteView","entries","_d","viewQueryId","e_2_1","getQueryViews","e_3","e_3_1","e_4","e_4_1","viewForQuery","getCompleteView","viewExistsForQuery","e_5","e_5_1","CompoundWrite","writeTree_","addWrite","rootmost","rootMostPath","addWrites","updates","newWrite","removeWrite","hasCompleteWrite","getCompleteNode","getCompleteChildren","childCompoundWrite","shadowingNode","applySubtreeWrite","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","getWrite","record","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","writeIdsToExclude","includeHiddenWrites","mergeAtPath","layerTree_","write","layeredCache","subMerge","completeServerChildren","topLevelSet","merge_1","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","DefaultFilter_","writes","treeRoot","compoundWrite","deepNode","treePath_","existingServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","changeTree","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","tag","queryKey","queryKeyForTag_","r","parseQueryKey_","queryPath","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","listener","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","stopListening","queryToRemove","tagToRemove","removeTags_","maybeChildSyncPoint","childMap","views_1","_key","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","isDefault","queriesToStop","queries_1","map","childQueries","queryToStop","status","reason","toUpperCase","errorForServerCode","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","StatsCollection","counters_","incrementCounter","amount","StatsManager","getCollection","hashString","collections_","getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","newStats","stat","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","queueEvents","eventDataList","currList","eventPath","EventList","add","raiseEventsAtPath","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","changedPath","sentAll","eventList","raise","events_","eventFn","EventEmitter","allowedEvents_","listeners_","trigger","listeners","validateEventType_","getInitialEvent","et","VisibilityMonitor","hidden","visibilityChange","document","addEventListener","visible_","getInstance","OnlineMonitor","online_","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","BrowserPollConnection","connId","applicationId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","readyState","called_1","wrappedFn_1","body","attachEvent","executeWhenDOMReady","scriptTagHolder","FirebaseIFrameScriptHolder","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","href","connectURL","addTag","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","Windows","UI","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","MAX_URL_DATA_SIZE","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","iframeContents","doc","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","theURL","curDataString","d","theSeg","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","doNewRequest","keepaliveTimeout","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","SDK_VERSION","setSDKVersion","version","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","options","headers","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","userAgent","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","Connection","repoInfo_","applicationId_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","refreshAuthToken","token","onDisconnectPut","onDisconnectMerge","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","request","q","outstandingGet","sendGet_","listen","currentHashFn","listenSpec","sendListen_","req","warnOnListenWarnings_","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","token_1","authMethod","requestData","cred","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","forceRefresh","getToken","then","accessToken","interrupt","resume","serverTimeOffset","normalizedPathString","statusCode","explanation","notifyForInvalidToken","_e","_f","clientName","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","toRestQueryStringParameters","restRequest_","authTokenData","authToken","xhr","XMLHttpRequest","responseText","Repo","forceRestClient_","app","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","persistentConnection_","search","authOverride","appId","addTokenChangeListener","statsReporter_","transactionsInit_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","offset","generateServerValues","isMerge","taggedChildren","raw","taggedSnap","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","Promise","cached","newVal","newNodeUnresolved","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","resolved","showDelta","console","longestName","reduce","previousValue","currentValue","statsIncrementCounter","metric","__database","Database","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","self","startName","endName","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","inRange","oldChildSnap","compareNext","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","copy_","newLimit","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","DEFAULT","Reference","parentPath","getRoot","databaseProp","database","transaction","transactionUpdate","applyLocally","promiseComplete","startTransaction","setPriority","thennablePushRef","pushRef","TransactionStatus","TreeNode","childCount","Tree","name_","parent_","subTree","pathObj","setValue","updateParents_","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","MAX_TRANSACTION_RETRIES_","transactionQueueTree_","watchRef","order","retryCount","unwatcher","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","queue","buildTransactionQueue_","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","abortTransaction","currentNode","newDataNode","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","abortTransactionsOnNode_","lastSent","_staticInstance","FirebaseAuthTokenProvider","app_","authProvider_","auth_","getImmediate","auth","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","EmulatorAdminTokenProvider","EMULATOR_AUTH_TOKEN","RepoManager","repos_","useRestClient_","appName","dbUrl","applyEmulatorSettings","databaseFromApp","authProvider","databaseURL","projectId","isEmulator","dbEmulatorHost","authTokenProvider","createRepo","deleteRepo","appRepos","forceRestClient","repoInternal_","instanceStarted_","INTERNAL","checkDeleted_","rootInternal_","useEmulator","refFromURL","apiName","parsedURL","goOffline","goOnline","ServerValue","TIMESTAMP","increment","freeze","__proto__","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","initStandalone","customAuthImpl","setComponent","instance","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","ConnectionTarget","TEST_ACCESS","hijackHash","newHash","oldPut","registerComponent","getProvider","setServiceProps","setMultipleInstances","registerVersion","registerDatabase"],"mappings":"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","file":"js/chunk-1e3a9218.deece470.js","sourcesContent":["exports.nextTick = function nextTick(fn) {\n    var args = Array.prototype.slice.call(arguments);\n    args.shift();\n    setTimeout(function () {\n        fn.apply(null, args);\n    }, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","import '@firebase/database';\n//# sourceMappingURL=index.esm.js.map\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","import firebase from '@firebase/app';\nimport { __spread, __values, __extends, __assign, __read, __awaiter, __generator } from 'tslib';\nimport { stringify, jsonEval, contains, assert, base64, stringToByteArray, Sha1, isNodeSdk, stringLength, errorPrefix, validateArgCount, validateCallback, Deferred, assertionError, safeGet, map, validateContextObject, deepCopy, isMobileCordova, base64Encode, isAdmin, isValidFormat, isEmpty, isReactNative, querystring } from '@firebase/util';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { Provider, ComponentContainer, Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param {string} key The key to save the value under\r\n     * @param {?Object} value The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     * @return {*} The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return jsonEval(storedVal);\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    /**\r\n     * @param {string} name\r\n     * @return {string}\r\n     */\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    var sha1 = new Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return base64.encodeByteArray(sha1Bytes);\r\n};\r\n/**\r\n * @param {...*} varArgs\r\n * @return {string}\r\n * @private\r\n */\r\nvar buildLogMessage_ = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < varArgs.length; i++) {\r\n        var arg = varArgs[i];\r\n        if (Array.isArray(arg) ||\r\n            (arg &&\r\n                typeof arg === 'object' &&\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                typeof arg.length === 'number')) {\r\n            message += buildLogMessage_.apply(null, arg);\r\n        }\r\n        else if (typeof arg === 'object') {\r\n            message += stringify(arg);\r\n        }\r\n        else {\r\n            message += arg;\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\r\nvar logger = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = LogLevel.VERBOSE;\r\n        logger = logClient.log.bind(logClient);\r\n        if (persistent) {\r\n            SessionStorage.set('logging_enabled', true);\r\n        }\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger = logger_;\r\n    }\r\n    else {\r\n        logger = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\n/**\r\n *\r\n * @param {...(string|Arguments)} varArgs\r\n */\r\nvar log = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger === null && SessionStorage.get('logging_enabled') === true) {\r\n            enableLogging(true);\r\n        }\r\n    }\r\n    if (logger) {\r\n        var message = buildLogMessage_.apply(null, varArgs);\r\n        logger(message);\r\n    }\r\n};\r\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, __spread([prefix], varArgs));\r\n    };\r\n};\r\n/**\r\n * @param {...string} varArgs\r\n */\r\nvar error = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, __spread(varArgs));\r\n    logClient.error(message);\r\n};\r\n/**\r\n * @param {...string} varArgs\r\n */\r\nvar fatal = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, __spread(varArgs));\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\n/**\r\n * @param {...*} varArgs\r\n */\r\nvar warn = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, __spread(varArgs));\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data !== data || // NaN\r\n            data === Number.POSITIVE_INFINITY ||\r\n            data === Number.NEGATIVE_INFINITY));\r\n};\r\n/**\r\n * @param {function()} fn\r\n */\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete') {\r\n                    wrappedFn_1();\r\n                }\r\n            });\r\n            // fallback to onload.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + stringify(obj));\r\n    }\r\n};\r\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return stringify(obj);\r\n    }\r\n    var keys = [];\r\n    // eslint-disable-next-line guard-for-in\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0) {\r\n            key += ',';\r\n        }\r\n        key += stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj The object or array to iterate over\r\n * @param fn The function to apply\r\n */\r\nfunction each(obj, fn) {\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1;\r\n    var s, e, f, ln, i;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    var bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    var str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1) {\r\n            hexByte = '0' + hexByte;\r\n        }\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\r\nvar errorForServerCode = function (code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code === 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code === 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n};\r\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param {string|Array.<string>} pathOrString Path string to parse,\r\n     *      or another path, or the raw tokens array\r\n     * @param {number=} pieceNum\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Object.defineProperty(Path, \"Empty\", {\r\n        /**\r\n         * Singleton to represent an empty path\r\n         *\r\n         * @const\r\n         */\r\n        get: function () {\r\n            return new Path('');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Path.prototype.getFront = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length) {\r\n            return null;\r\n        }\r\n        return this.pieces_[this.pieceNum_];\r\n    };\r\n    /**\r\n     * @return {number} The number of segments in this path\r\n     */\r\n    Path.prototype.getLength = function () {\r\n        return this.pieces_.length - this.pieceNum_;\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.popFront = function () {\r\n        var pieceNum = this.pieceNum_;\r\n        if (pieceNum < this.pieces_.length) {\r\n            pieceNum++;\r\n        }\r\n        return new Path(this.pieces_, pieceNum);\r\n    };\r\n    /**\r\n     * @return {?string}\r\n     */\r\n    Path.prototype.getBack = function () {\r\n        if (this.pieceNum_ < this.pieces_.length) {\r\n            return this.pieces_[this.pieces_.length - 1];\r\n        }\r\n        return null;\r\n    };\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + this.pieces_[i];\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    Path.prototype.toUrlEncodedString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    /**\r\n     * Shallow copy of the parts of the path.\r\n     *\r\n     * @param {number=} begin\r\n     * @return {!Array<string>}\r\n     */\r\n    Path.prototype.slice = function (begin) {\r\n        if (begin === void 0) { begin = 0; }\r\n        return this.pieces_.slice(this.pieceNum_ + begin);\r\n    };\r\n    /**\r\n     * @return {?Path}\r\n     */\r\n    Path.prototype.parent = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length) {\r\n            return null;\r\n        }\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++) {\r\n            pieces.push(this.pieces_[i]);\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @param {string|!Path} childPathObj\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.child = function (childPathObj) {\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            pieces.push(this.pieces_[i]);\r\n        }\r\n        if (childPathObj instanceof Path) {\r\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n                pieces.push(childPathObj.pieces_[i]);\r\n            }\r\n        }\r\n        else {\r\n            var childPieces = childPathObj.split('/');\r\n            for (var i = 0; i < childPieces.length; i++) {\r\n                if (childPieces[i].length > 0) {\r\n                    pieces.push(childPieces[i]);\r\n                }\r\n            }\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @return {boolean} True if there are no segments in this path\r\n     */\r\n    Path.prototype.isEmpty = function () {\r\n        return this.pieceNum_ >= this.pieces_.length;\r\n    };\r\n    /**\r\n     * @param {!Path} outerPath\r\n     * @param {!Path} innerPath\r\n     * @return {!Path} The path from outerPath to innerPath\r\n     */\r\n    Path.relativePath = function (outerPath, innerPath) {\r\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\r\n        if (outer === null) {\r\n            return innerPath;\r\n        }\r\n        else if (outer === inner) {\r\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\r\n        }\r\n        else {\r\n            throw new Error('INTERNAL ERROR: innerPath (' +\r\n                innerPath +\r\n                ') is not within ' +\r\n                'outerPath (' +\r\n                outerPath +\r\n                ')');\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} left\r\n     * @param {!Path} right\r\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n     */\r\n    Path.comparePaths = function (left, right) {\r\n        var leftKeys = left.slice();\r\n        var rightKeys = right.slice();\r\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n            var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n            if (cmp !== 0) {\r\n                return cmp;\r\n            }\r\n        }\r\n        if (leftKeys.length === rightKeys.length) {\r\n            return 0;\r\n        }\r\n        return leftKeys.length < rightKeys.length ? -1 : 1;\r\n    };\r\n    /**\r\n     *\r\n     * @param {Path} other\r\n     * @return {boolean} true if paths are the same.\r\n     */\r\n    Path.prototype.equals = function (other) {\r\n        if (this.getLength() !== other.getLength()) {\r\n            return false;\r\n        }\r\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} other\r\n     * @return {boolean} True if this path is a parent (or the same as) other\r\n     */\r\n    Path.prototype.contains = function (other) {\r\n        var i = this.pieceNum_;\r\n        var j = other.pieceNum_;\r\n        if (this.getLength() > other.getLength()) {\r\n            return false;\r\n        }\r\n        while (i < this.pieces_.length) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n            ++i;\r\n            ++j;\r\n        }\r\n        return true;\r\n    };\r\n    return Path;\r\n}()); // end Path\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path Initial Path.\r\n     * @param {string} errorPrefix_ Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        /** @type {!Array<string>} */\r\n        this.parts_ = path.slice();\r\n        /** @type {number} Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += stringLength(this.parts_[i]);\r\n        }\r\n        this.checkValid_();\r\n    }\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\r\n        /** @const {number} Maximum key depth. */\r\n        get: function () {\r\n            return 32;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\r\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\r\n        get: function () {\r\n            return 768;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @param {string} child */\r\n    ValidationPath.prototype.push = function (child) {\r\n        // Count the needed '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ += 1;\r\n        }\r\n        this.parts_.push(child);\r\n        this.byteLength_ += stringLength(child);\r\n        this.checkValid_();\r\n    };\r\n    ValidationPath.prototype.pop = function () {\r\n        var last = this.parts_.pop();\r\n        this.byteLength_ -= stringLength(last);\r\n        // Un-count the previous '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ -= 1;\r\n        }\r\n    };\r\n    ValidationPath.prototype.checkValid_ = function () {\r\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'has a key path longer than ' +\r\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\r\n                ' bytes (' +\r\n                this.byteLength_ +\r\n                ').');\r\n        }\r\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'path specified exceeds the maximum depth that can be written (' +\r\n                ValidationPath.MAX_PATH_DEPTH +\r\n                ') or object contains a cycle ' +\r\n                this.toErrorString());\r\n        }\r\n    };\r\n    /**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     *\r\n     * @return {string}\r\n     */\r\n    ValidationPath.prototype.toErrorString = function () {\r\n        if (this.parts_.length === 0) {\r\n            return '';\r\n        }\r\n        return \"in property '\" + this.parts_.join('.') + \"'\";\r\n    };\r\n    return ValidationPath;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\nvar FORGE_DOMAIN = 'firebaseio.com';\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar APPLICATION_ID_PARAM = 'p';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param host Hostname portion of the url for the repo\r\n     * @param secure Whether or not this repo is accessed over ssl\r\n     * @param namespace The namespace represented by the repo\r\n     * @param webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param nodeAdmin Whether this instance uses Admin SDK credentials\r\n     * @param persistenceKey Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, nodeAdmin, persistenceKey, includeNamespaceInQueryParams) {\r\n        if (nodeAdmin === void 0) { nodeAdmin = false; }\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        if (includeNamespaceInQueryParams === void 0) { includeNamespaceInQueryParams = false; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.nodeAdmin = nodeAdmin;\r\n        this.persistenceKey = persistenceKey;\r\n        this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\r\n        this.host = host.toLowerCase();\r\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\r\n        this.internalHost =\r\n            PersistentStorage.get('host:' + host) || this.host;\r\n    }\r\n    RepoInfo.prototype.needsQueryParam = function () {\r\n        return (this.host !== this.internalHost ||\r\n            this.isCustomHost() ||\r\n            this.includeNamespaceInQueryParams);\r\n    };\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isDemoHost = function () {\r\n        return this.domain === 'firebaseio-demo.com';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\r\n    };\r\n    RepoInfo.prototype.updateHost = function (newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this.host, this.internalHost);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the websocket URL for this repo\r\n     * @param {string} type of connection\r\n     * @param {Object} params list\r\n     * @return {string} The URL for this repo\r\n     */\r\n    RepoInfo.prototype.connectionURL = function (type, params) {\r\n        assert(typeof type === 'string', 'typeof type must == string');\r\n        assert(typeof params === 'object', 'typeof params must == object');\r\n        var connURL;\r\n        if (type === WEBSOCKET) {\r\n            connURL =\r\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\r\n        }\r\n        else if (type === LONG_POLLING) {\r\n            connURL =\r\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\r\n        }\r\n        else {\r\n            throw new Error('Unknown connection type: ' + type);\r\n        }\r\n        if (this.needsQueryParam()) {\r\n            params['ns'] = this.namespace;\r\n        }\r\n        var pairs = [];\r\n        each(params, function (key, value) {\r\n            pairs.push(key + '=' + value);\r\n        });\r\n        return connURL + pairs.join('&');\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toURLString = function () {\r\n        return (this.secure ? 'https://' : 'http://') + this.host;\r\n    };\r\n    return RepoInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var e_1, _a;\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    try {\r\n        for (var _b = __values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var segment = _c.value;\r\n            if (segment.length === 0) {\r\n                continue;\r\n            }\r\n            var kv = segment.split('=');\r\n            if (kv.length === 2) {\r\n                results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n            }\r\n            else {\r\n                warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return results;\r\n}\r\nvar parseRepoInfo = function (dataURL, nodeAdmin) {\r\n    var parsedUrl = parseDatabaseURL(dataURL), namespace = parsedUrl.namespace;\r\n    if (parsedUrl.domain === 'firebase.com') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace === 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, nodeAdmin, webSocketOnly, \r\n        /*persistenceKey=*/ '', \r\n        /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string, namespace: string}}\r\n */\r\nvar parseDatabaseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '', namespace = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = host.length;\r\n        }\r\n        var hostWithoutPort = host.slice(0, colonInd);\r\n        if (hostWithoutPort.toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        else if (hostWithoutPort.split('.').length <= 2) {\r\n            domain = hostWithoutPort;\r\n        }\r\n        else {\r\n            // Interpret the subdomain of a 3 or more component URL as the namespace name.\r\n            var dotInd = host.indexOf('.');\r\n            subdomain = host.substring(0, dotInd).toLowerCase();\r\n            domain = host.substring(dotInd + 1);\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            namespace = subdomain;\r\n        }\r\n        // Always treat the value of the `ns` as the namespace name if it is present.\r\n        if ('ns' in queryParams) {\r\n            namespace = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString,\r\n        namespace: namespace\r\n    };\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority &&\r\n            typeof priority === 'object' &&\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    validateFirebaseData(errorPrefix(fnName, argumentNumber, optional), data, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            path.toErrorString() +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            path.toErrorString() +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false;\r\n        var hasActualChild_1 = false;\r\n        each(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        path.toErrorString() +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            path.push(key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            path.pop();\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                path.toErrorString() +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = curPath.slice();\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) ;\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(Path.comparePaths);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && prevPath.contains(curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    var errorPrefix$1 = errorPrefix(fnName, argumentNumber, optional);\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix$1 + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    each(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix$1, value, path.child(curPath));\r\n        if (curPath.getBack() === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix$1 +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix$1, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, argumentNumber, priority, optional) {\r\n    if (optional && priority === undefined) {\r\n        return;\r\n    }\r\n    if (isInvalidJSONNumber(priority)) {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    }\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority)) {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n    }\r\n};\r\nvar validateEventType = function (fnName, argumentNumber, eventType, optional) {\r\n    if (optional && eventType === undefined) {\r\n        return;\r\n    }\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentNumber, key, optional) {\r\n    if (optional && key === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidKey(key)) {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n    }\r\n};\r\nvar validatePathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (optional && pathString === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidPathString(pathString)) {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n    }\r\n};\r\nvar validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentNumber, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (path.getFront() === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, argumentNumber, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, false) +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentNumber, bool, optional) {\r\n    if (optional && bool === undefined) {\r\n        return;\r\n    }\r\n    if (typeof bool !== 'boolean') {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /**\r\n     * @param {!Repo} repo_\r\n     * @param {!Path} path_\r\n     */\r\n    function OnDisconnect(repo_, path_) {\r\n        this.repo_ = repo_;\r\n        this.path_ = path_;\r\n    }\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        validateCallback('OnDisconnect.cancel', 1, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateWritablePath('OnDisconnect.remove', this.path_);\r\n        validateCallback('OnDisconnect.remove', 1, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.set', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\r\n        validateCallback('OnDisconnect.set', 2, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {number|string|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('OnDisconnect.setWithPriority', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\r\n        validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\r\n        validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.update', this.path_);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\r\n        validateCallback('OnDisconnect.update', 2, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     * @constructor\r\n     * @dict\r\n     * @param {boolean} committed\r\n     * @param {DataSnapshot} snapshot\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\r\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    /**\r\n     *\r\n     * @param {!string} name\r\n     * @param {!Node} node\r\n     * @return {NamedNode}\r\n     */\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @constructor\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     * @param {!Node} oldNode\r\n     * @param {!Node} newNode\r\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    __extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number') {\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    }\r\n    else {\r\n        return 'string:' + priority;\r\n    }\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @implements {Node}\r\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n     *                                         The object type is possible in the event of a deferred value\r\n     * @param {!Node=} priorityNode_ The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else if (path.getFront() === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty()) {\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        }\r\n        else {\r\n            return this.getValue();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            }\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @return {Object|string|number|boolean} The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     * @param {!LeafNode} otherLeaf\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.equals = function (other) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     * @type {Array.<!string>}\r\n     * @const\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    __extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @template K, V, T\r\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n     * @param {?K} startKey\r\n     * @param {function(K, K): number} comparator\r\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n     * @param {(function(K, V):T)=} resultGenerator_\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        /** @private\r\n         * @type {Array.<!LLRBNode>}\r\n         */\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_) {\r\n                cmp *= -1;\r\n            }\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_) {\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            result = { key: node.key, value: node.value };\r\n        }\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {!K} key Key associated with this node.\r\n     * @param {!V} value Value associated with this node.\r\n     * @param {?boolean} color Whether this node is red.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param {?K} key New key for the node, or null.\r\n     * @param {?V} value New value for the node, or null.\r\n     * @param {?boolean} color New color for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n     * @return {!LLRBNode} The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            !!action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {*} True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @return {!Object} The minimum node in the tree.\r\n     * @private\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Object} key Key to insert.\r\n     * @param {!Object} value Value to insert.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var n = this;\r\n        var cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_()) {\r\n            n = n.moveRedLeft_();\r\n        }\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param {!Object} key The key of the item to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_()) {\r\n                n = n.rotateRight_();\r\n            }\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_()) {\r\n            n = n.rotateLeft_();\r\n        }\r\n        if (n.left.isRed_() && n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n        }\r\n        if (n.left.isRed_() && n.right.isRed_()) {\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @private\r\n     * @return {boolean} True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBNode.prototype.check_ = function () {\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        var blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return {!LLRBEmptyNode} The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBEmptyNode} New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {function(K, K):number} comparator_ Key comparator.\r\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @return {!SortedMap.<K, V>} New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @return {!SortedMap.<K, V>} New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param {!K} key The key to look up.\r\n     * @return {?V} The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param {K} key The key to find the predecessor of\r\n     * @return {?K} The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty()) {\r\n                        node = node.right;\r\n                    }\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @return {boolean} True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @return {?K} The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @return {?K} The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @template T\r\n     * @param {(function(K, V):T)=} resultGenerator\r\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     * @const\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\n/**\r\n * @constructor\r\n */\r\nvar Base12Num = /** @class */ (function () {\r\n    /**\r\n     * @param {number} length\r\n     */\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length === 0) {\r\n            return null;\r\n        }\r\n        else if (length === 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         */\r\n        get: function () {\r\n            assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap) {\r\n            throw new Error('No index defined for ' + indexKey);\r\n        }\r\n        if (sortedMap instanceof SortedMap) {\r\n            return sortedMap;\r\n        }\r\n        else {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n    };\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = __assign({}, this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = __assign({}, this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = safeGet(_this.indexSet_, indexName);\r\n            assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name !== namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!SortedMap.<string, !Node>} children_ List of children\r\n     * of this node..\r\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n     * @param {!IndexMap} indexMap_\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return this;\r\n        }\r\n        return this.getImmediateChild(front).getChild(path.popFront());\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            var newPriority = newChildren.isEmpty()\r\n                ? EMPTY_NODE\r\n                : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty()) {\r\n            return null;\r\n        }\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            // eslint-disable-next-line guard-for-in\r\n            for (var key in obj) {\r\n                array[key] = obj[key];\r\n            }\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty()) {\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            }\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '') {\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n                }\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!NamedNode} startPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    /**\r\n     * @param {!NamedNode} endPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     * @private\r\n     * @param {!Index} indexDefinition\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @type {RegExp}\r\n     */\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    __extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj = json;\r\n        each(hinzeJsonObj, function (key, child) {\r\n            if (key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(child);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length === 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        each(json, function (key, childData) {\r\n            if (contains(json, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty()) {\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    __extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.maxPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MAX;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    __extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!Node} snap\r\n     * @return {!Node}\r\n     * @protected\r\n     */\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.toString = function () {\r\n        return this.indexPath_.slice().join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_ A SnapshotNode to wrap.\r\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n     * @param {!Index} index_ The iteration order for this snapshot\r\n     */\r\n    function DataSnapshot(node_, ref_, index_) {\r\n        this.node_ = node_;\r\n        this.ref_ = ref_;\r\n        this.index_ = index_;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this.node_.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this.node_.val(true);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return !this.node_.isEmpty();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {!DataSnapshot} DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (childPathString) {\r\n        validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        childPathString = String(childPathString);\r\n        validatePathString('DataSnapshot.child', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        var childRef = this.ref_.child(childPath);\r\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {boolean} Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (childPathString) {\r\n        validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        return !this.node_.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return {string|number|null} The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this.node_.getPriority().val();\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param {function(!DataSnapshot)} action Callback function to be called\r\n     * for each child.\r\n     * @return {boolean} True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        validateCallback('DataSnapshot.forEach', 1, action, false);\r\n        if (this.node_.isLeafNode()) {\r\n            return false;\r\n        }\r\n        var childrenNode = this.node_;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\r\n            return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        if (this.node_.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return !this.node_.isEmpty();\r\n        }\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this.ref_.getKey();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return {number} The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this.node_.numChildren();\r\n    };\r\n    /**\r\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return this.ref_;\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n     * @param {!DataSnapshot} snapshot The data backing the event\r\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.getRef();\r\n        if (this.eventType === 'value') {\r\n            return ref.path;\r\n        }\r\n        else {\r\n            return ref.getParent().path;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {EventRegistration} eventRegistration\r\n     * @param {Error} error\r\n     * @param {!Path} path\r\n     */\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?function(!DataSnapshot)} callback_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {?Object} context_\r\n     */\r\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\r\n        this.callback_ = callback_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_1 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_1.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_1 = this.callback_;\r\n            return function () {\r\n                cb_1.call(ctx, eventData.snapshot);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callback_ || !this.callback_) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callback_ !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {Object=} context_\r\n     */\r\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\r\n        this.callbacks_ = callbacks_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return contains(this.callbacks_, eventToCheck);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        assert(change.childName != null, 'Child events should have a childName.');\r\n        var ref = query.getRef().child(/** @type {!string} */ change.childName);\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_2 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_2.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_2 = this.callbacks_[eventData.eventType];\r\n            return function () {\r\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        var _this = this;\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks_ || !other.callbacks_) {\r\n                return true;\r\n            }\r\n            else if (this.context_ === other.context_) {\r\n                var otherKeys = Object.keys(other.callbacks_);\r\n                var thisKeys = Object.keys(this.callbacks_);\r\n                var otherCount = otherKeys.length;\r\n                var thisCount = thisKeys.length;\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    // If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey = otherKeys[0];\r\n                        var thisKey = thisKeys[0];\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks_[otherKey] ||\r\n                                !this.callbacks_[thisKey] ||\r\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return thisKeys.every(function (eventType) {\r\n                            return other.callbacks_[eventType] === _this.callbacks_[eventType];\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks_ !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor;\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(repo, path, queryParams_, orderByCalled_) {\r\n        this.repo = repo;\r\n        this.path = path;\r\n        this.queryParams_ = queryParams_;\r\n        this.orderByCalled_ = orderByCalled_;\r\n    }\r\n    Object.defineProperty(Query, \"__referenceConstructor\", {\r\n        get: function () {\r\n            assert(__referenceConstructor, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor;\r\n        },\r\n        set: function (val) {\r\n            __referenceConstructor = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates start/end values for queries.\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateQueryEndpoints_ = function (params) {\r\n        var startNode = null;\r\n        var endNode = null;\r\n        if (params.hasStart()) {\r\n            startNode = params.getIndexStartValue();\r\n        }\r\n        if (params.hasEnd()) {\r\n            endNode = params.getIndexEndValue();\r\n        }\r\n        if (params.getIndex() === KEY_INDEX) {\r\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n                'startAt(), endAt(), or equalTo().';\r\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\r\n                'or equalTo() must be a string.';\r\n            if (params.hasStart()) {\r\n                var startName = params.getIndexStartName();\r\n                if (startName !== MIN_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof startNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n            if (params.hasEnd()) {\r\n                var endName = params.getIndexEndName();\r\n                if (endName !== MAX_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof endNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n        }\r\n        else if (params.getIndex() === PRIORITY_INDEX) {\r\n            if ((startNode != null && !isValidPriority(startNode)) ||\r\n                (endNode != null && !isValidPriority(endNode))) {\r\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\r\n            }\r\n        }\r\n        else {\r\n            assert(params.getIndex() instanceof PathIndex ||\r\n                params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n            if ((startNode != null && typeof startNode === 'object') ||\r\n                (endNode != null && typeof endNode === 'object')) {\r\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\r\n                    'an object.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateLimit_ = function (params) {\r\n        if (params.hasStart() &&\r\n            params.hasEnd() &&\r\n            params.hasLimit() &&\r\n            !params.hasAnchoredLimit()) {\r\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\r\n        }\r\n    };\r\n    /**\r\n     * Validates that no other order by call has been made\r\n     * @param {!string} fnName\r\n     * @private\r\n     */\r\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\r\n        if (this.orderByCalled_ === true) {\r\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n        }\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     */\r\n    Query.prototype.getQueryParams = function () {\r\n        return this.queryParams_;\r\n    };\r\n    /**\r\n     * @return {!Reference}\r\n     */\r\n    Query.prototype.getRef = function () {\r\n        validateArgCount('Query.ref', 0, 0, arguments.length);\r\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\r\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\r\n        // method gets called.\r\n        return new Query.__referenceConstructor(this.repo, this.path);\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @param {!function(DataSnapshot, string=)} callback\r\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n     * @param {Object=} context\r\n     * @return {!function(DataSnapshot, string=)}\r\n     */\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateEventType('Query.on', 1, eventType, false);\r\n        validateCallback('Query.on', 2, callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        if (eventType === 'value') {\r\n            this.onValueEvent(callback, ret.cancel, ret.context);\r\n        }\r\n        else {\r\n            var callbacks = {};\r\n            callbacks[eventType] = callback;\r\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\r\n        }\r\n        return callback;\r\n    };\r\n    /**\r\n     * @param {!function(!DataSnapshot)} callback\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\r\n        var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\r\n        var container = new ChildEventRegistration(callbacks, cancelCallback, context);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {string=} eventType\r\n     * @param {(function(!DataSnapshot, ?string=))=} callback\r\n     * @param {Object=} context\r\n     */\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', 1, eventType, true);\r\n        validateCallback('Query.off', 2, callback, true);\r\n        validateContextObject('Query.off', 3, context, true);\r\n        var container = null;\r\n        var callbacks = null;\r\n        if (eventType === 'value') {\r\n            var valueCallback = callback || null;\r\n            container = new ValueEventRegistration(valueCallback, null, context || null);\r\n        }\r\n        else if (eventType) {\r\n            if (callback) {\r\n                callbacks = {};\r\n                callbacks[eventType] = callback;\r\n            }\r\n            container = new ChildEventRegistration(callbacks, null, context || null);\r\n        }\r\n        this.repo.removeEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * Get the server-value for this query, or return a cached value if not connected.\r\n     */\r\n    Query.prototype.get = function () {\r\n        return this.repo.getValue(this);\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     * @param {!string} eventType\r\n     * @param {!function(!DataSnapshot, string=)} userCallback\r\n     * @param failureCallbackOrContext\r\n     * @param context\r\n     * @return {!firebase.Promise}\r\n     */\r\n    Query.prototype.once = function (eventType, userCallback, failureCallbackOrContext, context) {\r\n        var _this = this;\r\n        validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateEventType('Query.once', 1, eventType, false);\r\n        validateCallback('Query.once', 2, userCallback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context);\r\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\r\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\r\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\r\n        // against the Promise specification.\r\n        var firstCall = true;\r\n        var deferred = new Deferred();\r\n        // A dummy error handler in case a user wasn't expecting promises\r\n        deferred.promise.catch(function () { });\r\n        var onceCallback = function (snapshot) {\r\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\r\n            // triggers multiple events (e.g. child_added or child_changed).\r\n            if (firstCall) {\r\n                firstCall = false;\r\n                _this.off(eventType, onceCallback);\r\n                if (userCallback) {\r\n                    userCallback.bind(ret.context)(snapshot);\r\n                }\r\n                deferred.resolve(snapshot);\r\n            }\r\n        };\r\n        this.on(eventType, onceCallback, \r\n        /*cancel=*/ function (err) {\r\n            _this.off(eventType, onceCallback);\r\n            if (ret.cancel) {\r\n                ret.cancel.bind(ret.context)(err);\r\n            }\r\n            deferred.reject(err);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     * @param {!string} path\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        if (path === '$key') {\r\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\r\n        }\r\n        else if (path === '$priority') {\r\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\r\n        }\r\n        else if (path === '$value') {\r\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\r\n        }\r\n        validatePathString('Query.orderByChild', 1, path, false);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\r\n        var parsedPath = new Path(path);\r\n        if (parsedPath.isEmpty()) {\r\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = this.queryParams_.orderBy(index);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\r\n        var newParams = this.queryParams_.orderBy(KEY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\r\n        var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\r\n        var newParams = this.queryParams_.orderBy(VALUE_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\r\n        validateKey('Query.startAt', 2, name, true);\r\n        var newParams = this.queryParams_.startAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\r\n                'or equalTo).');\r\n        }\r\n        // Calling with no params tells us to start at the beginning.\r\n        if (value === undefined) {\r\n            value = null;\r\n            name = null;\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\r\n        validateKey('Query.endAt', 2, name, true);\r\n        var newParams = this.queryParams_.endAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     * @param {number|string|boolean|null} value\r\n     * @param {string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\r\n        validateKey('Query.equalTo', 2, name, true);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +\r\n                'equalTo).');\r\n        }\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return this.startAt(value, name).endAt(value, name);\r\n    };\r\n    /**\r\n     * @return {!string} URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this.repo.toString() + this.path.toUrlEncodedString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this.toString();\r\n    };\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     * @return {!Object}\r\n     */\r\n    Query.prototype.queryObject = function () {\r\n        return this.queryParams_.getQueryObject();\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     */\r\n    Query.prototype.queryIdentifier = function () {\r\n        var obj = this.queryObject();\r\n        var id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     * @param {Query} other\r\n     * @return {boolean}\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error);\r\n        }\r\n        var sameRepo = this.repo === other.repo;\r\n        var samePath = this.path.equals(other.path);\r\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param {!string} fnName The function name (on or once)\r\n     * @param {(function(Error)|Object)=} cancelOrContext\r\n     * @param {Object=} context\r\n     * @return {{cancel: ?function(Error), context: ?Object}}\r\n     * @private\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: null, context: null };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            validateCallback(fnName, 3, ret.cancel, true);\r\n            ret.context = context;\r\n            validateContextObject(fnName, 4, ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(errorPrefix(fnName, 3, true) +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ExistingValueProvider = /** @class */ (function () {\r\n    function ExistingValueProvider(node_) {\r\n        this.node_ = node_;\r\n    }\r\n    ExistingValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var child = this.node_.getImmediateChild(childName);\r\n        return new ExistingValueProvider(child);\r\n    };\r\n    ExistingValueProvider.prototype.node = function () {\r\n        return this.node_;\r\n    };\r\n    return ExistingValueProvider;\r\n}());\r\nvar DeferredValueProvider = /** @class */ (function () {\r\n    function DeferredValueProvider(syncTree, path) {\r\n        this.syncTree_ = syncTree;\r\n        this.path_ = path;\r\n    }\r\n    DeferredValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var childPath = this.path_.child(childName);\r\n        return new DeferredValueProvider(this.syncTree_, childPath);\r\n    };\r\n    DeferredValueProvider.prototype.node = function () {\r\n        return this.syncTree_.calcCompleteEventCache(this.path_);\r\n    };\r\n    return DeferredValueProvider;\r\n}());\r\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\r\nvar resolveDeferredLeafValue = function (value, existingVal, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n    if (typeof value['.sv'] === 'string') {\r\n        return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\r\n    }\r\n    else if (typeof value['.sv'] === 'object') {\r\n        return resolveComplexDeferredValue(value['.sv'], existingVal);\r\n    }\r\n    else {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\r\n    }\r\n};\r\nvar resolveScalarDeferredValue = function (op, existing, serverValues) {\r\n    switch (op) {\r\n        case 'timestamp':\r\n            return serverValues['timestamp'];\r\n        default:\r\n            assert(false, 'Unexpected server value: ' + op);\r\n    }\r\n};\r\nvar resolveComplexDeferredValue = function (op, existing, unused) {\r\n    if (!op.hasOwnProperty('increment')) {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\r\n    }\r\n    var delta = op['increment'];\r\n    if (typeof delta !== 'number') {\r\n        assert(false, 'Unexpected increment value: ' + delta);\r\n    }\r\n    var existingNode = existing.node();\r\n    assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls');\r\n    // Incrementing a non-number sets the value to the incremented amount\r\n    if (!existingNode.isLeafNode()) {\r\n        return delta;\r\n    }\r\n    var leaf = existingNode;\r\n    var existingVal = leaf.getValue();\r\n    if (typeof existingVal !== 'number') {\r\n        return delta;\r\n    }\r\n    // No need to do over/underflow arithmetic here because JS only handles floats under the covers\r\n    return existingVal + delta;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!Path} path path to which write is relative\r\n * @param {!Node} node new data written at path\r\n * @param {!SyncTree} syncTree current data\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\r\nvar resolveDeferredValueTree = function (path, node, syncTree, serverValues) {\r\n    return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, existing, serverValues) {\r\n    return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\r\n};\r\nfunction resolveDeferredValue(node, existingVal, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n */\r\nvar SparseSnapshotTree = /** @class */ (function () {\r\n    function SparseSnapshotTree() {\r\n        this.value = null;\r\n        this.children = new Map();\r\n    }\r\n    /**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @return The retrieved node, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.find = function (path) {\r\n        if (this.value != null) {\r\n            return this.value.getChild(path);\r\n        }\r\n        else if (!path.isEmpty() && this.children.size > 0) {\r\n            var childKey = path.getFront();\r\n            path = path.popFront();\r\n            if (this.children.has(childKey)) {\r\n                var childTree = this.children.get(childKey);\r\n                return childTree.find(path);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @param data The new data, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.remember = function (path, data) {\r\n        if (path.isEmpty()) {\r\n            this.value = data;\r\n            this.children.clear();\r\n        }\r\n        else if (this.value !== null) {\r\n            this.value = this.value.updateChild(path, data);\r\n        }\r\n        else {\r\n            var childKey = path.getFront();\r\n            if (!this.children.has(childKey)) {\r\n                this.children.set(childKey, new SparseSnapshotTree());\r\n            }\r\n            var child = this.children.get(childKey);\r\n            path = path.popFront();\r\n            child.remember(path, data);\r\n        }\r\n    };\r\n    /**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @return True if this node should now be removed.\r\n     */\r\n    SparseSnapshotTree.prototype.forget = function (path) {\r\n        if (path.isEmpty()) {\r\n            this.value = null;\r\n            this.children.clear();\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.value !== null) {\r\n                if (this.value.isLeafNode()) {\r\n                    // We're trying to forget a node that doesn't exist\r\n                    return false;\r\n                }\r\n                else {\r\n                    var value = this.value;\r\n                    this.value = null;\r\n                    var self_1 = this;\r\n                    value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                        self_1.remember(new Path(key), tree);\r\n                    });\r\n                    return this.forget(path);\r\n                }\r\n            }\r\n            else if (this.children.size > 0) {\r\n                var childKey = path.getFront();\r\n                path = path.popFront();\r\n                if (this.children.has(childKey)) {\r\n                    var safeToRemove = this.children.get(childKey).forget(path);\r\n                    if (safeToRemove) {\r\n                        this.children.delete(childKey);\r\n                    }\r\n                }\r\n                return this.children.size === 0;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param prefixPath Path to look up node for.\r\n     * @param func The function to invoke for each tree.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\r\n        if (this.value !== null) {\r\n            func(prefixPath, this.value);\r\n        }\r\n        else {\r\n            this.forEachChild(function (key, tree) {\r\n                var path = new Path(prefixPath.toString() + '/' + key);\r\n                tree.forEachTree(path, func);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param func The function to invoke for each child.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\r\n        this.children.forEach(function (tree, key) {\r\n            func(key, tree);\r\n        });\r\n    };\r\n    return SparseSnapshotTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\r\nvar OperationSource = /** @class */ (function () {\r\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\r\n        this.fromUser = fromUser;\r\n        this.fromServer = fromServer;\r\n        this.queryId = queryId;\r\n        this.tagged = tagged;\r\n        assert(!tagged || fromServer, 'Tagged queries must be from server.');\r\n    }\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.User = new OperationSource(\r\n    /*fromUser=*/ true, false, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.Server = new OperationSource(false, \r\n    /*fromServer=*/ true, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @param {string} queryId\r\n     * @return {!OperationSource}\r\n     */\r\n    OperationSource.forServerTaggedQuery = function (queryId) {\r\n        return new OperationSource(false, \r\n        /*fromServer=*/ true, queryId, \r\n        /*tagged=*/ true);\r\n    };\r\n    return OperationSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     * @param {!boolean} revert\r\n     */\r\n    function AckUserWrite(\r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ affectedTree, \r\n    /** @inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = OperationSource.User;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!this.path.isEmpty()) {\r\n            assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(Path.Empty, childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {?T} value\r\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n     */\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {!Object.<string, !T>} obj\r\n     * @return {!ImmutableTree.<!T>}\r\n     */\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = ImmutableTree.Empty;\r\n        each(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     * @return {boolean}\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param {!Path} relativePath The remainder of the path\r\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n     *   node\r\n     * @return {?{path:!Path, value:!T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: Path.Empty, value: this.value };\r\n        }\r\n        else {\r\n            if (relativePath.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = relativePath.getFront();\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = new Path(front).child(childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     * @param {!Path} relativePath\r\n     * @return {?{path: !Path, value: !T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @return {!ImmutableTree.<T>} The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(relativePath.popFront());\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to set value at.\r\n     * @param {?T} toSet Value to set.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (relativePath.isEmpty()) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.set(relativePath.popFront(), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to value to remove.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            if (this.children.isEmpty()) {\r\n                return ImmutableTree.Empty;\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(relativePath.popFront());\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return ImmutableTree.Empty;\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param {!Path} relativePath Path to get value for.\r\n     * @return {?T} Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(relativePath.popFront());\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param {!Path} relativePath Path to replace subtree for.\r\n     * @param {!ImmutableTree} newTree New tree.\r\n     * @return {!ImmutableTree} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (relativePath.isEmpty()) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.setTree(relativePath.popFront(), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     * @template V\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(Path.Empty, fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     * @template V\r\n     * @param {!Path} pathSoFar\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     * @private\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     * @template V\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T):?V} f\r\n     * @return {?V}\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathToFollow.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathToFollow.getFront();\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T)} f\r\n     * @returns {!ImmutableTree.<T>}\r\n     */\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathToFollow.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathToFollow.getFront();\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param {function(!Path, !T)} f A function to be called with\r\n     *   the path from the root of the tree to a node, and the value at that node.\r\n     *   Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(currentRelativePath.child(childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {function(string, !T)} f\r\n     */\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    ImmutableTree.Empty = new ImmutableTree(null);\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new ListenComplete(this.source, Path.Empty);\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, this.path.popFront());\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /** @inheritDoc */ source, \r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, Path.Empty, childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, Path.Empty, childTree);\r\n            }\r\n        }\r\n        else {\r\n            assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, this.path.popFront(), this.children);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_\r\n     * @param {boolean} fullyInitialized_\r\n     * @param {boolean} filtered_\r\n     */\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = path.getFront();\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!string} key\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    /**\r\n     * @return {!Node}\r\n     */\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\r\nvar ViewCache = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!CacheNode} eventCache_\r\n     * @param {!CacheNode} serverCache_\r\n     */\r\n    function ViewCache(eventCache_, serverCache_) {\r\n        this.eventCache_ = eventCache_;\r\n        this.serverCache_ = serverCache_;\r\n    }\r\n    /**\r\n     * @param {!Node} eventSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\r\n        return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\r\n    };\r\n    /**\r\n     * @param {!Node} serverSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\r\n        return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getEventCache = function () {\r\n        return this.eventCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteEventSnap = function () {\r\n        return this.eventCache_.isFullyInitialized()\r\n            ? this.eventCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getServerCache = function () {\r\n        return this.serverCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteServerSnap = function () {\r\n        return this.serverCache_.isFullyInitialized()\r\n            ? this.serverCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @const\r\n     * @type {ViewCache}\r\n     */\r\n    ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false), new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false));\r\n    return ViewCache;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\r\nvar Change = /** @class */ (function () {\r\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\r\n        this.type = type;\r\n        this.snapshotNode = snapshotNode;\r\n        this.childName = childName;\r\n        this.oldSnap = oldSnap;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.valueChange = function (snapshot) {\r\n        return new Change(Change.VALUE, snapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childAddedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childRemovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} newSnapshot\r\n     * @param {!Node} oldSnapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\r\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childMovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\r\n    };\r\n    //event types\r\n    /** Event type for a child added */\r\n    Change.CHILD_ADDED = 'child_added';\r\n    /** Event type for a child removed */\r\n    Change.CHILD_REMOVED = 'child_removed';\r\n    /** Event type for a child changed */\r\n    Change.CHILD_CHANGED = 'child_changed';\r\n    /** Event type for a child moved */\r\n    Change.CHILD_MOVED = 'child_moved';\r\n    /** Event type for a value change */\r\n    Change.VALUE = 'value';\r\n    return Change;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() === newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\r\n                }\r\n                else {\r\n                    assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap = new Map();\r\n    }\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey = change.childName;\r\n        assert(type === Change.CHILD_ADDED ||\r\n            type === Change.CHILD_CHANGED ||\r\n            type === Change.CHILD_REMOVED, 'Only child changes supported for tracking');\r\n        assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = this.changeMap.get(childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type === Change.CHILD_ADDED && oldType === Change.CHILD_REMOVED) {\r\n                this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode));\r\n            }\r\n            else if (type === Change.CHILD_REMOVED &&\r\n                oldType === Change.CHILD_ADDED) {\r\n                this.changeMap.delete(childKey);\r\n            }\r\n            else if (type === Change.CHILD_REMOVED &&\r\n                oldType === Change.CHILD_CHANGED) {\r\n                this.changeMap.set(childKey, Change.childRemovedChange(childKey, oldChange.oldSnap));\r\n            }\r\n            else if (type === Change.CHILD_CHANGED &&\r\n                oldType === Change.CHILD_ADDED) {\r\n                this.changeMap.set(childKey, Change.childAddedChange(childKey, change.snapshotNode));\r\n            }\r\n            else if (type === Change.CHILD_CHANGED &&\r\n                oldType === Change.CHILD_CHANGED) {\r\n                this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap));\r\n            }\r\n            else {\r\n                throw assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap.set(childKey, change);\r\n        }\r\n    };\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return Array.from(this.changeMap.values());\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    /**\r\n     * @param {!WriteTreeRef} writes_\r\n     * @param {!ViewCache} viewCache_\r\n     * @param {?Node} optCompleteServerCache_\r\n     */\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.getEventCache();\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.getServerCache();\r\n            return this.writes_.calcCompleteChild(childKey, serverNode);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : this.viewCache_.getCompleteServerSnap();\r\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n */\r\nvar ProcessorResult = /** @class */ (function () {\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Array.<!Change>} changes\r\n     */\r\n    function ProcessorResult(viewCache, changes) {\r\n        this.viewCache = viewCache;\r\n        this.changes = changes;\r\n    }\r\n    return ProcessorResult;\r\n}());\r\n/**\r\n * @constructor\r\n */\r\nvar ViewProcessor = /** @class */ (function () {\r\n    /**\r\n     * @param {!NodeFilter} filter_\r\n     */\r\n    function ViewProcessor(filter_) {\r\n        this.filter_ = filter_;\r\n    }\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     */\r\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\r\n        assert(viewCache.getEventCache().getNode().isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\r\n        assert(viewCache.getServerCache().getNode().isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @return {!ProcessorResult}\r\n     */\r\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\r\n        var accumulator = new ChildChangeAccumulator();\r\n        var newViewCache, filterServerNode;\r\n        if (operation.type === OperationType.OVERWRITE) {\r\n            var overwrite = operation;\r\n            if (overwrite.source.fromUser) {\r\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                assert(overwrite.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n                // again\r\n                filterServerNode =\r\n                    overwrite.source.tagged ||\r\n                        (oldViewCache.getServerCache().isFiltered() &&\r\n                            !overwrite.path.isEmpty());\r\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.MERGE) {\r\n            var merge = operation;\r\n            if (merge.source.fromUser) {\r\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                assert(merge.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered\r\n                filterServerNode =\r\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\r\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n            var ackUserWrite = operation;\r\n            if (!ackUserWrite.revert) {\r\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\r\n        }\r\n        else {\r\n            throw assertionError('Unknown operation type: ' + operation.type);\r\n        }\r\n        var changes = accumulator.getChanges();\r\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\r\n        return new ProcessorResult(newViewCache, changes);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!ViewCache} newViewCache\r\n     * @param {!Array.<!Change>} accumulator\r\n     * @private\r\n     */\r\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\r\n        var eventSnap = newViewCache.getEventCache();\r\n        if (eventSnap.isFullyInitialized()) {\r\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\r\n            if (accumulator.length > 0 ||\r\n                !oldViewCache.getEventCache().isFullyInitialized() ||\r\n                (isLeafOrEmpty &&\r\n                    !eventSnap.getNode().equals(/** @type {!Node} */ oldCompleteSnap)) ||\r\n                !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\r\n                accumulator.push(Change.valueChange(\r\n                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} changePath\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!CompleteChildSource} source\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\r\n        var oldEventSnap = viewCache.getEventCache();\r\n        if (writesCache.shadowingWrite(changePath) != null) {\r\n            // we have a shadowing write, ignore changes\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var newEventCache = void 0, serverNode = void 0;\r\n            if (changePath.isEmpty()) {\r\n                // TODO: figure out how this plays with \"sliding ack windows\"\r\n                assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n                if (viewCache.getServerCache().isFiltered()) {\r\n                    // We need to special case this, because we need to only apply writes to complete children, or\r\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                    // writes cannot be guaranteed to be complete\r\n                    var serverCache = viewCache.getCompleteServerSnap();\r\n                    var completeChildren = serverCache instanceof ChildrenNode\r\n                        ? serverCache\r\n                        : ChildrenNode.EMPTY_NODE;\r\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\r\n                }\r\n                else {\r\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\r\n                }\r\n            }\r\n            else {\r\n                var childKey = changePath.getFront();\r\n                if (childKey === '.priority') {\r\n                    assert(changePath.getLength() === 1, \"Can't have a priority with additional path components\");\r\n                    var oldEventNode = oldEventSnap.getNode();\r\n                    serverNode = viewCache.getServerCache().getNode();\r\n                    // we might have overwrites for this priority\r\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\r\n                    if (updatedPriority != null) {\r\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\r\n                    }\r\n                    else {\r\n                        // priority didn't change, keep old node\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n                else {\r\n                    var childChangePath = changePath.popFront();\r\n                    // update child\r\n                    var newEventChild = void 0;\r\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                        serverNode = viewCache.getServerCache().getNode();\r\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\r\n                        if (eventChildUpdate != null) {\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey)\r\n                                .updateChild(childChangePath, eventChildUpdate);\r\n                        }\r\n                        else {\r\n                            // Nothing changed, just keep the old child\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey);\r\n                        }\r\n                    }\r\n                    else {\r\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                    }\r\n                    if (newEventChild != null) {\r\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                    }\r\n                    else {\r\n                        // no complete child available or no change\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n            }\r\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n        var oldServerSnap = oldViewCache.getServerCache();\r\n        var newServerCache;\r\n        var serverFilter = filterServerNode\r\n            ? this.filter_\r\n            : this.filter_.getIndexedFilter();\r\n        if (changePath.isEmpty()) {\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n        }\r\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n            var newServerNode = oldServerSnap\r\n                .getNode()\r\n                .updateChild(changePath, changedSnap);\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n                changePath.getLength() > 1) {\r\n                // We don't update incomplete nodes with updates intended for other listeners\r\n                return oldViewCache;\r\n            }\r\n            var childChangePath = changePath.popFront();\r\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n            if (childKey === '.priority') {\r\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n            }\r\n            else {\r\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n            }\r\n        }\r\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\r\n        var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n        var oldEventSnap = oldViewCache.getEventCache();\r\n        var newViewCache, newEventCache;\r\n        var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n        if (changePath.isEmpty()) {\r\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\r\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (childKey === '.priority') {\r\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\r\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n            }\r\n            else {\r\n                var childChangePath = changePath.popFront();\r\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                var newChild = void 0;\r\n                if (childChangePath.isEmpty()) {\r\n                    // Child overwrite, we can replace the child\r\n                    newChild = changedSnap;\r\n                }\r\n                else {\r\n                    var childNode = source.getCompleteChild(childKey);\r\n                    if (childNode != null) {\r\n                        if (childChangePath.getBack() === '.priority' &&\r\n                            childNode.getChild(childChangePath.parent()).isEmpty()) {\r\n                            // This is a priority update on an empty node. If this node exists on the server, the\r\n                            // server will send down the priority in the update, so ignore for now\r\n                            newChild = childNode;\r\n                        }\r\n                        else {\r\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no complete child node available\r\n                        newChild = ChildrenNode.EMPTY_NODE;\r\n                    }\r\n                }\r\n                if (!oldChild.equals(newChild)) {\r\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\r\n                }\r\n                else {\r\n                    newViewCache = oldViewCache;\r\n                }\r\n            }\r\n        }\r\n        return newViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {string} childKey\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\r\n        return viewCache.getEventCache().isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n        var _this = this;\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!Node} node\r\n     * @param {ImmutableTree.<!Node>} merge\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\r\n        merge.foreach(function (relativePath, childNode) {\r\n            node = node.updateChild(relativePath, childNode);\r\n        });\r\n        return node;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n        var _this = this;\r\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n        // wait for the complete data update coming soon.\r\n        if (viewCache.getServerCache().getNode().isEmpty() &&\r\n            !viewCache.getServerCache().isFullyInitialized()) {\r\n            return viewCache;\r\n        }\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        var viewMergeTree;\r\n        if (path.isEmpty()) {\r\n            viewMergeTree = changedChildren;\r\n        }\r\n        else {\r\n            viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\r\n        }\r\n        var serverNode = viewCache.getServerCache().getNode();\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (serverNode.hasChild(childKey)) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\r\n                childMergeTree.value == null;\r\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} ackPath\r\n     * @param {!ImmutableTree<!boolean>} affectedTree\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n        if (writesCache.shadowingWrite(ackPath) != null) {\r\n            return viewCache;\r\n        }\r\n        // Only filter server node if it is currently filtered\r\n        var filterServerNode = viewCache.getServerCache().isFiltered();\r\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n        // now that it won't be shadowed.\r\n        var serverCache = viewCache.getServerCache();\r\n        if (affectedTree.value != null) {\r\n            // This is an overwrite.\r\n            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\r\n                serverCache.isCompleteForPath(ackPath)) {\r\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else if (ackPath.isEmpty()) {\r\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n                // should just re-apply whatever we have in our cache as a merge.\r\n                var changedChildren_1 = ImmutableTree.Empty;\r\n                serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                    changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n                });\r\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else {\r\n                return viewCache;\r\n            }\r\n        }\r\n        else {\r\n            // This is a merge.\r\n            var changedChildren_2 = ImmutableTree.Empty;\r\n            affectedTree.foreach(function (mergePath, value) {\r\n                var serverCachePath = ackPath.child(mergePath);\r\n                if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n                }\r\n            });\r\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\r\n        var oldServerNode = viewCache.getServerCache();\r\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\r\n        var complete;\r\n        if (writesCache.shadowingWrite(path) != null) {\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n            var oldEventCache = viewCache.getEventCache().getNode();\r\n            var newEventCache = void 0;\r\n            if (path.isEmpty() || path.getFront() === '.priority') {\r\n                var newNode = void 0;\r\n                if (viewCache.getServerCache().isFullyInitialized()) {\r\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                }\r\n                else {\r\n                    var serverChildren = viewCache.getServerCache().getNode();\r\n                    assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\r\n                }\r\n                newNode = newNode;\r\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\r\n            }\r\n            else {\r\n                var childKey = path.getFront();\r\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                if (newChild == null &&\r\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\r\n                    newChild = oldEventCache.getImmediateChild(childKey);\r\n                }\r\n                if (newChild != null) {\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\r\n                }\r\n                else if (viewCache.getEventCache().getNode().hasChild(childKey)) {\r\n                    // No complete child available, delete the existing one, if any\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\r\n                }\r\n                else {\r\n                    newEventCache = oldEventCache;\r\n                }\r\n                if (newEventCache.isEmpty() &&\r\n                    viewCache.getServerCache().isFullyInitialized()) {\r\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    if (complete.isLeafNode()) {\r\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\r\n                    }\r\n                }\r\n            }\r\n            complete =\r\n                viewCache.getServerCache().isFullyInitialized() ||\r\n                    writesCache.shadowingWrite(Path.Empty) != null;\r\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    return ViewProcessor;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     */\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        /**\r\n         * @private\r\n         * @type {!Index}\r\n         */\r\n        this.index_ = this.query_.getQueryParams().getIndex();\r\n    }\r\n    /**\r\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n     *\r\n     * Notes:\r\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n     *    our index.\r\n     *  - prevName will be calculated based on the index ordering.\r\n     *\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {!Array.<!EventRegistration>} eventRegistrations\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\r\n        var _this = this;\r\n        var events = [];\r\n        var moves = [];\r\n        changes.forEach(function (change) {\r\n            if (change.type === Change.CHILD_CHANGED &&\r\n                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n                moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\r\n            }\r\n        });\r\n        this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\r\n        return events;\r\n    };\r\n    /**\r\n     * Given changes of a single change type, generate the corresponding events.\r\n     *\r\n     * @param {!Array.<!Event>} events\r\n     * @param {!string} eventType\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Array.<!EventRegistration>} registrations\r\n     * @param {!Node} eventCache\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\r\n        var _this = this;\r\n        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n        filteredChanges.sort(this.compareChanges_.bind(this));\r\n        filteredChanges.forEach(function (change) {\r\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\r\n            registrations.forEach(function (registration) {\r\n                if (registration.respondsTo(change.type)) {\r\n                    events.push(registration.createEvent(materializedChange, _this.query_));\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Change} change\r\n     * @param {!Node} eventCache\r\n     * @return {!Change}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\r\n        if (change.type === 'value' || change.type === 'child_removed') {\r\n            return change;\r\n        }\r\n        else {\r\n            change.prevName = eventCache.getPredecessorChildName(\r\n            /** @type {!string} */\r\n            change.childName, change.snapshotNode, this.index_);\r\n            return change;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Change} a\r\n     * @param {!Change} b\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\r\n        if (a.childName == null || b.childName == null) {\r\n            throw assertionError('Should only compare child_ events.');\r\n        }\r\n        var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n        var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n        return this.index_.compare(aWrapped, bWrapped);\r\n    };\r\n    return EventGenerator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\r\nvar View = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     * @param {!ViewCache} initialViewCache\r\n     */\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_.getQueryParams();\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = params.getNodeFilter();\r\n        /**\r\n         * @type {ViewProcessor}\r\n         * @private\r\n         */\r\n        this.processor_ = new ViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.getServerCache();\r\n        var initialEventCache = initialViewCache.getEventCache();\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        /**\r\n         * @type {!ViewCache}\r\n         * @private\r\n         */\r\n        this.viewCache_ = new ViewCache(newEventCache, newServerCache);\r\n        /**\r\n         * @type {!EventGenerator}\r\n         * @private\r\n         */\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    /**\r\n     * @return {!Query}\r\n     */\r\n    View.prototype.getQuery = function () {\r\n        return this.query_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getServerCache = function () {\r\n        return this.viewCache_.getServerCache().getNode();\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getCompleteServerCache = function (path) {\r\n        var cache = this.viewCache_.getCompleteServerSnap();\r\n        if (cache) {\r\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n            // we need to see if it contains the child we're interested in.\r\n            if (this.query_.getQueryParams().loadsAllData() ||\r\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\r\n                return cache.getChild(path);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    View.prototype.isEmpty = function () {\r\n        return this.eventRegistrations_.length === 0;\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    View.prototype.addEventRegistration = function (eventRegistration) {\r\n        this.eventRegistrations_.push(eventRegistration);\r\n    };\r\n    /**\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\r\n        var cancelEvents = [];\r\n        if (cancelError) {\r\n            assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n            var path_1 = this.query_.path;\r\n            this.eventRegistrations_.forEach(function (registration) {\r\n                cancelError /** @type {!Error} */ = cancelError;\r\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n                if (maybeEvent) {\r\n                    cancelEvents.push(maybeEvent);\r\n                }\r\n            });\r\n        }\r\n        if (eventRegistration) {\r\n            var remaining = [];\r\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\r\n                var existing = this.eventRegistrations_[i];\r\n                if (!existing.matches(eventRegistration)) {\r\n                    remaining.push(existing);\r\n                }\r\n                else if (eventRegistration.hasAnyCallback()) {\r\n                    // We're removing just this one\r\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\r\n                    break;\r\n                }\r\n            }\r\n            this.eventRegistrations_ = remaining;\r\n        }\r\n        else {\r\n            this.eventRegistrations_ = [];\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\r\n        if (operation.type === OperationType.MERGE &&\r\n            operation.source.queryId !== null) {\r\n            assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\r\n            assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\r\n        }\r\n        var oldViewCache = this.viewCache_;\r\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\r\n        this.processor_.assertIndexed(result.viewCache);\r\n        assert(result.viewCache.getServerCache().isFullyInitialized() ||\r\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n        this.viewCache_ = result.viewCache;\r\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} registration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.getInitialEvents = function (registration) {\r\n        var eventSnap = this.viewCache_.getEventCache();\r\n        var initialChanges = [];\r\n        if (!eventSnap.getNode().isLeafNode()) {\r\n            var eventNode = eventSnap.getNode();\r\n            eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                initialChanges.push(Change.childAddedChange(key, childNode));\r\n            });\r\n        }\r\n        if (eventSnap.isFullyInitialized()) {\r\n            initialChanges.push(Change.valueChange(eventSnap.getNode()));\r\n        }\r\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {EventRegistration=} eventRegistration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\r\n        var registrations = eventRegistration\r\n            ? [eventRegistration]\r\n            : this.eventRegistrations_;\r\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\r\n    };\r\n    return View;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */\r\n        this.views = new Map();\r\n    }\r\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\r\n        get: function () {\r\n            assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor$1;\r\n        },\r\n        set: function (val) {\r\n            assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\r\n            __referenceConstructor$1 = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    SyncPoint.prototype.isEmpty = function () {\r\n        return this.views.size === 0;\r\n    };\r\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\r\n        var e_1, _a;\r\n        var queryId = operation.source.queryId;\r\n        if (queryId !== null) {\r\n            var view = this.views.get(queryId);\r\n            assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\r\n        }\r\n        else {\r\n            var events = [];\r\n            try {\r\n                for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var view = _c.value;\r\n                    events = events.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache Complete server cache, if we have it.\r\n     * @param {boolean} serverCacheComplete\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var view = this.views.get(queryId);\r\n        if (!view) {\r\n            // TODO: make writesCache take flag for complete server node\r\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\r\n            var eventCacheComplete = false;\r\n            if (eventCache) {\r\n                eventCacheComplete = true;\r\n            }\r\n            else if (serverCache instanceof ChildrenNode) {\r\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\r\n                eventCacheComplete = false;\r\n            }\r\n            else {\r\n                eventCache = ChildrenNode.EMPTY_NODE;\r\n                eventCacheComplete = false;\r\n            }\r\n            var viewCache = new ViewCache(new CacheNode(\r\n            /** @type {!Node} */ eventCache, eventCacheComplete, false), new CacheNode(\r\n            /** @type {!Node} */ serverCache, serverCacheComplete, false));\r\n            view = new View(query, viewCache);\r\n            this.views.set(queryId, view);\r\n        }\r\n        // This is guaranteed to exist now, we just created anything that was missing\r\n        view.addEventRegistration(eventRegistration);\r\n        return view.getInitialEvents(eventRegistration);\r\n    };\r\n    /**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n     */\r\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var e_2, _a;\r\n        var queryId = query.queryIdentifier();\r\n        var removed = [];\r\n        var cancelEvents = [];\r\n        var hadCompleteView = this.hasCompleteView();\r\n        if (queryId === 'default') {\r\n            try {\r\n                // When you do ref.off(...), we search all views for the registration to remove.\r\n                for (var _b = __values(this.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var _d = __read(_c.value, 2), viewQueryId = _d[0], view = _d[1];\r\n                    cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                    if (view.isEmpty()) {\r\n                        this.views.delete(viewQueryId);\r\n                        // We'll deal with complete views later.\r\n                        if (!view.getQuery().getQueryParams().loadsAllData()) {\r\n                            removed.push(view.getQuery());\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_2) throw e_2.error; }\r\n            }\r\n        }\r\n        else {\r\n            // remove the callback from the specific view.\r\n            var view = this.views.get(queryId);\r\n            if (view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    this.views.delete(queryId);\r\n                    // We'll deal with complete views later.\r\n                    if (!view.getQuery().getQueryParams().loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hadCompleteView && !this.hasCompleteView()) {\r\n            // We removed our last complete view.\r\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\r\n        }\r\n        return { removed: removed, events: cancelEvents };\r\n    };\r\n    SyncPoint.prototype.getQueryViews = function () {\r\n        var e_3, _a;\r\n        var result = [];\r\n        try {\r\n            for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                if (!view.getQuery().getQueryParams().loadsAllData()) {\r\n                    result.push(view);\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * @param path The path to the desired complete snapshot\r\n     * @return A complete cache, if it exists\r\n     */\r\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\r\n        var e_4, _a;\r\n        var serverCache = null;\r\n        try {\r\n            for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                serverCache = serverCache || view.getCompleteServerCache(path);\r\n            }\r\n        }\r\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_4) throw e_4.error; }\r\n        }\r\n        return serverCache;\r\n    };\r\n    SyncPoint.prototype.viewForQuery = function (query) {\r\n        var params = query.getQueryParams();\r\n        if (params.loadsAllData()) {\r\n            return this.getCompleteView();\r\n        }\r\n        else {\r\n            var queryId = query.queryIdentifier();\r\n            return this.views.get(queryId);\r\n        }\r\n    };\r\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\r\n        return this.viewForQuery(query) != null;\r\n    };\r\n    SyncPoint.prototype.hasCompleteView = function () {\r\n        return this.getCompleteView() != null;\r\n    };\r\n    SyncPoint.prototype.getCompleteView = function () {\r\n        var e_5, _a;\r\n        try {\r\n            for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                if (view.getQuery().getQueryParams().loadsAllData()) {\r\n                    return view;\r\n                }\r\n            }\r\n        }\r\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_5) throw e_5.error; }\r\n        }\r\n        return null;\r\n    };\r\n    return SyncPoint;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    CompoundWrite.prototype.addWrite = function (path, node) {\r\n        if (path.isEmpty()) {\r\n            return new CompoundWrite(new ImmutableTree(node));\r\n        }\r\n        else {\r\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n            if (rootmost != null) {\r\n                var rootMostPath = rootmost.path;\r\n                var value = rootmost.value;\r\n                var relativePath = Path.relativePath(rootMostPath, path);\r\n                value = value.updateChild(relativePath, node);\r\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\r\n            }\r\n            else {\r\n                var subtree = new ImmutableTree(node);\r\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\r\n                return new CompoundWrite(newWriteTree);\r\n            }\r\n        }\r\n    };\r\n    CompoundWrite.prototype.addWrites = function (path, updates) {\r\n        var newWrite = this;\r\n        each(updates, function (childKey, node) {\r\n            newWrite = newWrite.addWrite(path.child(childKey), node);\r\n        });\r\n        return newWrite;\r\n    };\r\n    /**\r\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n     * location, which must be removed by calling this method with that path.\r\n     *\r\n     * @param path The path at which a write and all deeper writes should be removed\r\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n     */\r\n    CompoundWrite.prototype.removeWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return CompoundWrite.Empty;\r\n        }\r\n        else {\r\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    };\r\n    /**\r\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n     * considered \"complete\".\r\n     *\r\n     * @param path The path to check for\r\n     * @return Whether there is a complete write at that path\r\n     */\r\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\r\n        return this.getCompleteNode(path) != null;\r\n    };\r\n    /**\r\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n     * writes from deeper paths, but will return child nodes from a more shallow path.\r\n     *\r\n     * @param path The path to get a complete write\r\n     * @return The node if complete at that path, or null otherwise.\r\n     */\r\n    CompoundWrite.prototype.getCompleteNode = function (path) {\r\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            return this.writeTree_\r\n                .get(rootmost.path)\r\n                .getChild(Path.relativePath(rootmost.path, path));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all children that are guaranteed to be a complete overwrite.\r\n     *\r\n     * @return A list of all complete children.\r\n     */\r\n    CompoundWrite.prototype.getCompleteChildren = function () {\r\n        var children = [];\r\n        var node = this.writeTree_.value;\r\n        if (node != null) {\r\n            // If it's a leaf node, it has no children; so nothing to do.\r\n            if (!node.isLeafNode()) {\r\n                node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                    children.push(new NamedNode(childName, childNode));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n                if (childTree.value != null) {\r\n                    children.push(new NamedNode(childName, childTree.value));\r\n                }\r\n            });\r\n        }\r\n        return children;\r\n    };\r\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var shadowingNode = this.getCompleteNode(path);\r\n            if (shadowingNode != null) {\r\n                return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n            }\r\n            else {\r\n                return new CompoundWrite(this.writeTree_.subtree(path));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n     * @return Whether this CompoundWrite is empty\r\n     */\r\n    CompoundWrite.prototype.isEmpty = function () {\r\n        return this.writeTree_.isEmpty();\r\n    };\r\n    /**\r\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n     * node\r\n     * @param node The node to apply this CompoundWrite to\r\n     * @return The node with all writes applied\r\n     */\r\n    CompoundWrite.prototype.apply = function (node) {\r\n        return applySubtreeWrite(Path.Empty, this.writeTree_, node);\r\n    };\r\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\r\n    return CompoundWrite;\r\n}());\r\nfunction applySubtreeWrite(relativePath, writeTree, node) {\r\n    if (writeTree.value != null) {\r\n        // Since there a write is always a leaf, we're done here\r\n        return node.updateChild(relativePath, writeTree.value);\r\n    }\r\n    else {\r\n        var priorityWrite_1 = null;\r\n        writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (childKey === '.priority') {\r\n                // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                // to apply priorities to empty nodes that are later filled\r\n                assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                priorityWrite_1 = childTree.value;\r\n            }\r\n            else {\r\n                node = applySubtreeWrite(relativePath.child(childKey), childTree, node);\r\n            }\r\n        });\r\n        // If there was a priority write, we only apply it if the node is not empty\r\n        if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n            node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\r\n        }\r\n        return node;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\r\nvar WriteTree = /** @class */ (function () {\r\n    function WriteTree() {\r\n        /**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         *\r\n         * @type {!CompoundWrite}\r\n         * @private\r\n         */\r\n        this.visibleWrites_ = CompoundWrite.Empty;\r\n        /**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         *\r\n         * @type {!Array.<!WriteRecord>}\r\n         * @private\r\n         */\r\n        this.allWrites_ = [];\r\n        this.lastWriteId_ = -1;\r\n    }\r\n    /**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTree.prototype.childWrites = function (path) {\r\n        return new WriteTreeRef(path, this);\r\n    };\r\n    /**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} writeId\r\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n     */\r\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\r\n        assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        this.allWrites_.push({\r\n            path: path,\r\n            snap: snap,\r\n            writeId: writeId,\r\n            visible: visible\r\n        });\r\n        if (visible) {\r\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\r\n        }\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * Record a new merge from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     */\r\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\r\n        assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\r\n        this.allWrites_.push({\r\n            path: path,\r\n            children: changedChildren,\r\n            writeId: writeId,\r\n            visible: true\r\n        });\r\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * @param {!number} writeId\r\n     * @return {?WriteRecord}\r\n     */\r\n    WriteTree.prototype.getWrite = function (writeId) {\r\n        for (var i = 0; i < this.allWrites_.length; i++) {\r\n            var record = this.allWrites_[i];\r\n            if (record.writeId === writeId) {\r\n                return record;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @param {!number} writeId\r\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */\r\n    WriteTree.prototype.removeWrite = function (writeId) {\r\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n        // out of order.\r\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n        var _this = this;\r\n        var idx = this.allWrites_.findIndex(function (s) {\r\n            return s.writeId === writeId;\r\n        });\r\n        assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n        var writeToRemove = this.allWrites_[idx];\r\n        this.allWrites_.splice(idx, 1);\r\n        var removedWriteWasVisible = writeToRemove.visible;\r\n        var removedWriteOverlapsWithOtherWrites = false;\r\n        var i = this.allWrites_.length - 1;\r\n        while (removedWriteWasVisible && i >= 0) {\r\n            var currentWrite = this.allWrites_[i];\r\n            if (currentWrite.visible) {\r\n                if (i >= idx &&\r\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                    // The removed write was completely shadowed by a subsequent write.\r\n                    removedWriteWasVisible = false;\r\n                }\r\n                else if (writeToRemove.path.contains(currentWrite.path)) {\r\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                    removedWriteOverlapsWithOtherWrites = true;\r\n                }\r\n            }\r\n            i--;\r\n        }\r\n        if (!removedWriteWasVisible) {\r\n            return false;\r\n        }\r\n        else if (removedWriteOverlapsWithOtherWrites) {\r\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n            this.resetTree_();\r\n            return true;\r\n        }\r\n        else {\r\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n            if (writeToRemove.snap) {\r\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\r\n            }\r\n            else {\r\n                var children = writeToRemove.children;\r\n                each(children, function (childName) {\r\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\r\n                });\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.getCompleteWriteData = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        if (!writeIdsToExclude && !includeHiddenWrites) {\r\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\r\n            if (shadowingNode != null) {\r\n                return shadowingNode;\r\n            }\r\n            else {\r\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\r\n                if (subMerge.isEmpty()) {\r\n                    return completeServerCache;\r\n                }\r\n                else if (completeServerCache == null &&\r\n                    !subMerge.hasCompleteWrite(Path.Empty)) {\r\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                    return null;\r\n                }\r\n                else {\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return subMerge.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            if (!includeHiddenWrites && merge.isEmpty()) {\r\n                return completeServerCache;\r\n            }\r\n            else {\r\n                // If the server cache is null, and we don't have a complete cache, we need to return null\r\n                if (!includeHiddenWrites &&\r\n                    completeServerCache == null &&\r\n                    !merge.hasCompleteWrite(Path.Empty)) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    var filter = function (write) {\r\n                        return ((write.visible || includeHiddenWrites) &&\r\n                            (!writeIdsToExclude ||\r\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                            (write.path.contains(treePath) || treePath.contains(write.path)));\r\n                    };\r\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return mergeAtPath.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\r\n        var completeChildren = ChildrenNode.EMPTY_NODE;\r\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\r\n        if (topLevelSet) {\r\n            if (!topLevelSet.isLeafNode()) {\r\n                // we're shadowing everything. Return the children.\r\n                topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n                });\r\n            }\r\n            return completeChildren;\r\n        }\r\n        else if (completeServerChildren) {\r\n            // Layer any children we have on top of this\r\n            // We know we don't have a top-level set, so just enumerate existing children\r\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\r\n            completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                var node = merge_1\r\n                    .childCompoundWrite(new Path(childName))\r\n                    .apply(childNode);\r\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n            });\r\n            // Add any complete children we have from the set\r\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n        else {\r\n            // We don't have anything to layer on top of. Layer on any children we have\r\n            // Note that we can return an empty snap if we have a defined delete\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            merge.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n    };\r\n    /**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!Path} childPath\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\r\n        assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n        var path = treePath.child(childPath);\r\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\r\n            // At this point we can probably guarantee that we're in case 2, meaning no events\r\n            // May need to check visibility while doing the findRootMostValueAndPath call\r\n            return null;\r\n        }\r\n        else {\r\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n            if (childMerge.isEmpty()) {\r\n                // We're not shadowing at all. Case 1\r\n                return existingServerSnap.getChild(childPath);\r\n            }\r\n            else {\r\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n                // However this is tricky to find out, since user updates don't necessary change the server\r\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n                // only check if the updates change the serverNode.\r\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n                return childMerge.apply(existingServerSnap.getChild(childPath));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\r\n        var path = treePath.child(childKey);\r\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            if (existingServerSnap.isCompleteForChild(childKey)) {\r\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     */\r\n    WriteTree.prototype.shadowingWrite = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     */\r\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\r\n        var toIterate;\r\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n        var shadowingNode = merge.getCompleteNode(Path.Empty);\r\n        if (shadowingNode != null) {\r\n            toIterate = shadowingNode;\r\n        }\r\n        else if (completeServerData != null) {\r\n            toIterate = merge.apply(completeServerData);\r\n        }\r\n        else {\r\n            // no children to iterate on\r\n            return [];\r\n        }\r\n        toIterate = toIterate.withIndex(index);\r\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n            var nodes = [];\r\n            var cmp = index.getCompare();\r\n            var iter = reverse\r\n                ? toIterate.getReverseIteratorFrom(startPost, index)\r\n                : toIterate.getIteratorFrom(startPost, index);\r\n            var next = iter.getNext();\r\n            while (next && nodes.length < count) {\r\n                if (cmp(next, startPost) !== 0) {\r\n                    nodes.push(next);\r\n                }\r\n                next = iter.getNext();\r\n            }\r\n            return nodes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\r\n        if (writeRecord.snap) {\r\n            return writeRecord.path.contains(path);\r\n        }\r\n        else {\r\n            for (var childName in writeRecord.children) {\r\n                if (writeRecord.children.hasOwnProperty(childName) &&\r\n                    writeRecord.path.child(childName).contains(path)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     */\r\n    WriteTree.prototype.resetTree_ = function () {\r\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\r\n        if (this.allWrites_.length > 0) {\r\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\r\n        }\r\n        else {\r\n            this.lastWriteId_ = -1;\r\n        }\r\n    };\r\n    /**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     */\r\n    WriteTree.DefaultFilter_ = function (write) {\r\n        return write.visible;\r\n    };\r\n    /**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     */\r\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\r\n        var compoundWrite = CompoundWrite.Empty;\r\n        for (var i = 0; i < writes.length; ++i) {\r\n            var write = writes[i];\r\n            // Theory, a later set will either:\r\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n            if (filter(write)) {\r\n                var writePath = write.path;\r\n                var relativePath = void 0;\r\n                if (write.snap) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\r\n                    }\r\n                    else ;\r\n                }\r\n                else if (write.children) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        if (relativePath.isEmpty()) {\r\n                            compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\r\n                        }\r\n                        else {\r\n                            var child = safeGet(write.children, relativePath.getFront());\r\n                            if (child) {\r\n                                // There exists a child in this node that matches the root path\r\n                                var deepNode = child.getChild(relativePath.popFront());\r\n                                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\r\n                            }\r\n                        }\r\n                    }\r\n                    else ;\r\n                }\r\n                else {\r\n                    throw assertionError('WriteRecord should have .snap or .children');\r\n                }\r\n            }\r\n        }\r\n        return compoundWrite;\r\n    };\r\n    return WriteTree;\r\n}());\r\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\r\nvar WriteTreeRef = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!WriteTree} writeTree\r\n     */\r\n    function WriteTreeRef(path, writeTree) {\r\n        this.treePath_ = path;\r\n        this.writeTree_ = writeTree;\r\n    }\r\n    /**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n    };\r\n    /**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\r\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\r\n    };\r\n    /**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     * @param {!Path} path\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\r\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\r\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     *\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\r\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerCache\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\r\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\r\n    };\r\n    /**\r\n     * Return a WriteTreeRef for a child.\r\n     *\r\n     * @param {string} childName\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTreeRef.prototype.child = function (childName) {\r\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\r\n    };\r\n    return WriteTreeRef;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */\r\n        this.syncPointTree_ = ImmutableTree.Empty;\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */\r\n        this.pendingWriteTree_ = new WriteTree();\r\n        this.tagToQueryMap = new Map();\r\n        this.queryToTagMap = new Map();\r\n    }\r\n    /**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\r\n        // Record pending write.\r\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\r\n        if (!visible) {\r\n            return [];\r\n        }\r\n        else {\r\n            return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\r\n        }\r\n    };\r\n    /**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\r\n        // Record pending merge.\r\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\r\n    };\r\n    /**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param revert True if the given write failed and needs to be reverted\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\r\n        if (revert === void 0) { revert = false; }\r\n        var write = this.pendingWriteTree_.getWrite(writeId);\r\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\r\n        if (!needToReevaluate) {\r\n            return [];\r\n        }\r\n        else {\r\n            var affectedTree_1 = ImmutableTree.Empty;\r\n            if (write.snap != null) {\r\n                // overwrite\r\n                affectedTree_1 = affectedTree_1.set(Path.Empty, true);\r\n            }\r\n            else {\r\n                each(write.children, function (pathString, node) {\r\n                    affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\r\n                });\r\n            }\r\n            return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\r\n        }\r\n    };\r\n    /**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\r\n        return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\r\n    };\r\n    /**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\r\n    };\r\n    /**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyListenComplete = function (path) {\r\n        return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\r\n    };\r\n    /**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey != null) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // Query must have been removed already\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var changeTree = ImmutableTree.fromObject(changedChildren);\r\n            var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        var foundAncestorDefaultView = false;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = Path.relativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || sp.hasCompleteView();\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\r\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var serverCacheComplete;\r\n        if (serverCache != null) {\r\n            serverCacheComplete = true;\r\n        }\r\n        else {\r\n            serverCacheComplete = false;\r\n            serverCache = ChildrenNode.EMPTY_NODE;\r\n            var subtree = this.syncPointTree_.subtree(path);\r\n            subtree.foreachChild(function (childName, childSyncPoint) {\r\n                var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\r\n                if (completeCache) {\r\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n                }\r\n            });\r\n        }\r\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\r\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\r\n            // We need to track a tag for this query\r\n            var queryKey = SyncTree.makeQueryKey_(query);\r\n            assert(!this.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\r\n            var tag = SyncTree.getNextQueryTag_();\r\n            this.queryToTagMap.set(queryKey, tag);\r\n            this.tagToQueryMap.set(tag, queryKey);\r\n        }\r\n        var writesCache = this.pendingWriteTree_.childWrites(path);\r\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\r\n            events = events.concat(this.setupListener_(query, view));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param eventRegistration If null, all callbacks are removed.\r\n     * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return Cancel events, if cancelError was provided.\r\n     */\r\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var _this = this;\r\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n        var path = query.path;\r\n        var maybeSyncPoint = this.syncPointTree_.get(path);\r\n        var cancelEvents = [];\r\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n        // not loadsAllData().\r\n        if (maybeSyncPoint &&\r\n            (query.queryIdentifier() === 'default' ||\r\n                maybeSyncPoint.viewExistsForQuery(query))) {\r\n            /**\r\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n             */\r\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\r\n            if (maybeSyncPoint.isEmpty()) {\r\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\r\n            }\r\n            var removed = removedAndEvents.removed;\r\n            cancelEvents = removedAndEvents.events;\r\n            // We may have just removed one of many listeners and can short-circuit this whole process\r\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n            // properly set up.\r\n            //\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            var removingDefault = -1 !==\r\n                removed.findIndex(function (query) {\r\n                    return query.getQueryParams().loadsAllData();\r\n                });\r\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n                return parentSyncPoint.hasCompleteView();\r\n            });\r\n            if (removingDefault && !covered) {\r\n                var subtree = this.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (var i = 0; i < newViews.length; ++i) {\r\n                        var view = newViews[i], newQuery = view.getQuery();\r\n                        var listener = this.createListenerForView_(view);\r\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    var defaultTag = null;\r\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach(function (queryToRemove) {\r\n                        var tagToRemove = _this.queryToTagMap.get(SyncTree.makeQueryKey_(queryToRemove));\r\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n            // Now, clear all of the tags we're tracking for the removed listens\r\n            this.removeTags_(removed);\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n     * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n     * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n     *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     *\r\n     * @param path The path to the data we want\r\n     * @param writeIdsToExclude A specific set to be excluded\r\n     */\r\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\r\n        var includeHiddenSets = true;\r\n        var writeTree = this.pendingWriteTree_;\r\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n            var relativePath = Path.relativePath(pathSoFar, path);\r\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\r\n            if (serverCache) {\r\n                return serverCache;\r\n            }\r\n        });\r\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n    };\r\n    /**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     */\r\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\r\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\r\n                var completeView = maybeChildSyncPoint.getCompleteView();\r\n                return [completeView];\r\n            }\r\n            else {\r\n                // No complete view here, flatten any deeper listens into an array\r\n                var views_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    views_1 = maybeChildSyncPoint.getQueryViews();\r\n                }\r\n                each(childMap, function (_key, childViews) {\r\n                    views_1 = views_1.concat(childViews);\r\n                });\r\n                return views_1;\r\n            }\r\n        });\r\n    };\r\n    SyncTree.prototype.removeTags_ = function (queries) {\r\n        for (var j = 0; j < queries.length; ++j) {\r\n            var removedQuery = queries[j];\r\n            if (!removedQuery.getQueryParams().loadsAllData()) {\r\n                // We should have a tag for this\r\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\r\n                var removedQueryTag = this.queryToTagMap.get(removedQueryKey);\r\n                this.queryToTagMap.delete(removedQueryKey);\r\n                this.tagToQueryMap.delete(removedQueryTag);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes a query to a query we send the server for listening\r\n     *\r\n     * @return The normalized query\r\n     */\r\n    SyncTree.queryForListening_ = function (query) {\r\n        if (query.getQueryParams().loadsAllData() &&\r\n            !query.getQueryParams().isDefault()) {\r\n            // We treat queries that load all data as default queries\r\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n            // from Query\r\n            return query.getRef();\r\n        }\r\n        else {\r\n            return query;\r\n        }\r\n    };\r\n    /**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @return This method can return events to support synchronous data sources\r\n     */\r\n    SyncTree.prototype.setupListener_ = function (query, view) {\r\n        var path = query.path;\r\n        var tag = this.tagForQuery_(query);\r\n        var listener = this.createListenerForView_(view);\r\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n        var subtree = this.syncPointTree_.subtree(path);\r\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n        // may need to shadow other listens as well.\r\n        if (tag) {\r\n            assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\r\n        }\r\n        else {\r\n            // Shadow everything at or below this location, this is a default listener.\r\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n                if (!relativePath.isEmpty() &&\r\n                    maybeChildSyncPoint &&\r\n                    maybeChildSyncPoint.hasCompleteView()) {\r\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\r\n                }\r\n                else {\r\n                    // No default listener here, flatten any deeper queries into an array\r\n                    var queries_1 = [];\r\n                    if (maybeChildSyncPoint) {\r\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\r\n                    }\r\n                    each(childMap, function (_key, childQueries) {\r\n                        queries_1 = queries_1.concat(childQueries);\r\n                    });\r\n                    return queries_1;\r\n                }\r\n            });\r\n            for (var i = 0; i < queriesToStop.length; ++i) {\r\n                var queryToStop = queriesToStop[i];\r\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    SyncTree.prototype.createListenerForView_ = function (view) {\r\n        var _this = this;\r\n        var query = view.getQuery();\r\n        var tag = this.tagForQuery_(query);\r\n        return {\r\n            hashFn: function () {\r\n                var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\r\n                return cache.hash();\r\n            },\r\n            onComplete: function (status) {\r\n                if (status === 'ok') {\r\n                    if (tag) {\r\n                        return _this.applyTaggedListenComplete(query.path, tag);\r\n                    }\r\n                    else {\r\n                        return _this.applyListenComplete(query.path);\r\n                    }\r\n                }\r\n                else {\r\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                    var error = errorForServerCode(status, query);\r\n                    return _this.removeEventRegistration(query, \r\n                    /*eventRegistration*/ null, error);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     */\r\n    SyncTree.makeQueryKey_ = function (query) {\r\n        return query.path.toString() + '$' + query.queryIdentifier();\r\n    };\r\n    /**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     */\r\n    SyncTree.parseQueryKey_ = function (queryKey) {\r\n        var splitIndex = queryKey.indexOf('$');\r\n        assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n        return {\r\n            queryId: queryKey.substr(splitIndex + 1),\r\n            path: new Path(queryKey.substr(0, splitIndex))\r\n        };\r\n    };\r\n    /**\r\n     * Return the query associated with the given tag, if we have one\r\n     */\r\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\r\n        return this.tagToQueryMap.get(tag);\r\n    };\r\n    /**\r\n     * Return the tag associated with the given query.\r\n     */\r\n    SyncTree.prototype.tagForQuery_ = function (query) {\r\n        var queryKey = SyncTree.makeQueryKey_(query);\r\n        return this.queryToTagMap.get(queryKey);\r\n    };\r\n    /**\r\n     * Static accessor for query tags.\r\n     */\r\n    SyncTree.getNextQueryTag_ = function () {\r\n        return SyncTree.nextQueryTag_++;\r\n    };\r\n    /**\r\n     * A helper method to apply tagged operations\r\n     */\r\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\r\n        var syncPoint = this.syncPointTree_.get(queryPath);\r\n        assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\r\n        return syncPoint.applyOperation(operation, writesCache, \r\n        /*serverCache=*/ null);\r\n    };\r\n    /**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n     *\r\n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n     *\r\n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     */\r\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\r\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \r\n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path.Empty));\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     */\r\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        if (operation.path.isEmpty()) {\r\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n        }\r\n        else {\r\n            var syncPoint = syncPointTree.get(Path.Empty);\r\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n            if (serverCache == null && syncPoint != null) {\r\n                serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n            }\r\n            var events = [];\r\n            var childName = operation.path.getFront();\r\n            var childOperation = operation.operationForChild(childName);\r\n            var childTree = syncPointTree.children.get(childName);\r\n            if (childTree && childOperation) {\r\n                var childServerCache = serverCache\r\n                    ? serverCache.getImmediateChild(childName)\r\n                    : null;\r\n                var childWritesCache = writesCache.child(childName);\r\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n            if (syncPoint) {\r\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     */\r\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        var _this = this;\r\n        var syncPoint = syncPointTree.get(Path.Empty);\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var events = [];\r\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writesCache.child(childName);\r\n            var childOperation = operation.operationForChild(childName);\r\n            if (childOperation) {\r\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n        });\r\n        if (syncPoint) {\r\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Static tracker for next query tag.\r\n     */\r\n    SyncTree.nextQueryTag_ = 1;\r\n    return SyncTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!contains(this.counters_, name)) {\r\n            this.counters_[name] = 0;\r\n        }\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StatsManager = /** @class */ (function () {\r\n    function StatsManager() {\r\n    }\r\n    StatsManager.getCollection = function (repoInfo) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.collections_[hashString]) {\r\n            this.collections_[hashString] = new StatsCollection();\r\n        }\r\n        return this.collections_[hashString];\r\n    };\r\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.reporters_[hashString]) {\r\n            this.reporters_[hashString] = creatorFunction();\r\n        }\r\n        return this.reporters_[hashString];\r\n    };\r\n    StatsManager.collections_ = {};\r\n    StatsManager.reporters_ = {};\r\n    return StatsManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = __assign({}, newStats);\r\n        if (this.last_) {\r\n            each(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\n/**\r\n * @constructor\r\n */\r\nvar StatsReporter = /** @class */ (function () {\r\n    /**\r\n     * @param collection\r\n     * @param server_\r\n     */\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.includeStat = function (stat) {\r\n        this.statsToReport_[stat] = true;\r\n    };\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        each(stats, function (stat, value) {\r\n            if (value > 0 && contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        /**\r\n         * @private\r\n         * @type {!Array.<EventList>}\r\n         */\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         * @private\r\n         * @type {!number}\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    /**\r\n     * @param {!Array.<Event>} eventDataList The new events to queue.\r\n     */\r\n    EventQueue.prototype.queueEvents = function (eventDataList) {\r\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n        var currList = null;\r\n        for (var i = 0; i < eventDataList.length; i++) {\r\n            var eventData = eventDataList[i];\r\n            var eventPath = eventData.getPath();\r\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\r\n                this.eventLists_.push(currList);\r\n                currList = null;\r\n            }\r\n            if (currList === null) {\r\n                currList = new EventList(eventPath);\r\n            }\r\n            currList.add(eventData);\r\n        }\r\n        if (currList) {\r\n            this.eventLists_.push(currList);\r\n        }\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n     * for the specified path.\r\n     *\r\n     * It is assumed that the new events are all for the specified path.\r\n     *\r\n     * @param {!Path} path The path to raise events for.\r\n     * @param {!Array.<Event>} eventDataList The new events to raise.\r\n     */\r\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.equals(path);\r\n        });\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n     * locations related to the specified change path (i.e. all ancestors and descendants).\r\n     *\r\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n     *\r\n     * @param {!Path} changedPath The path to raise events for.\r\n     * @param {!Array.<!Event>} eventDataList The events to raise\r\n     */\r\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!function(!Path):boolean} predicate\r\n     * @private\r\n     */\r\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\r\n        this.recursionDepth_++;\r\n        var sentAll = true;\r\n        for (var i = 0; i < this.eventLists_.length; i++) {\r\n            var eventList = this.eventLists_[i];\r\n            if (eventList) {\r\n                var eventPath = eventList.getPath();\r\n                if (predicate(eventPath)) {\r\n                    this.eventLists_[i].raise();\r\n                    this.eventLists_[i] = null;\r\n                }\r\n                else {\r\n                    sentAll = false;\r\n                }\r\n            }\r\n        }\r\n        if (sentAll) {\r\n            this.eventLists_ = [];\r\n        }\r\n        this.recursionDepth_--;\r\n    };\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\r\nvar EventList = /** @class */ (function () {\r\n    function EventList(path_) {\r\n        this.path_ = path_;\r\n        /**\r\n         * @type {!Array.<Event>}\r\n         * @private\r\n         */\r\n        this.events_ = [];\r\n    }\r\n    /**\r\n     * @param {!Event} eventData\r\n     */\r\n    EventList.prototype.add = function (eventData) {\r\n        this.events_.push(eventData);\r\n    };\r\n    /**\r\n     * Iterates through the list and raises each event\r\n     */\r\n    EventList.prototype.raise = function () {\r\n        for (var i = 0; i < this.events_.length; i++) {\r\n            var eventData = this.events_[i];\r\n            if (eventData !== null) {\r\n                this.events_[i] = null;\r\n                var eventFn = eventData.getEventRunner();\r\n                if (logger) {\r\n                    log('event: ' + eventData.toString());\r\n                }\r\n                exceptionGuard(eventFn);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    EventList.prototype.getPath = function () {\r\n        return this.path_;\r\n    };\r\n    return EventList;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    /**\r\n     * @param {!Array.<string>} allowedEvents_\r\n     */\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     * @param {!string} eventType\r\n     * @param {...*} varArgs\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var varArgs = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            varArgs[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = __spread(this.listeners_[eventType]);\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, varArgs);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @extends {EventEmitter}\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    __extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    __extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     * @param {number} requestNum\r\n     * @param {Array} data\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId An identifier for this connection, used for logging\r\n     * @param repoInfo The info for the endpoint to send data to.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.applicationId = applicationId;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfo.connectionURL(LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     *\r\n     * @param {function(Object)} onMessage Callback when messages arrive\r\n     * @param {function()} onDisconnect Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_) {\r\n                return;\r\n            }\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = __read(args, 5), command = _a[0], arg1 = _a[1], arg2 = _a[2], arg3 = _a[3], arg4 = _a[4];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder) {\r\n                    return; // we closed the connection.\r\n                }\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command === FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = __read(args, 2), pN = _a[0], data = _a[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            }\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (_this.applicationId) {\r\n                urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\r\n            }\r\n            if (typeof location !== 'undefined' &&\r\n                location.href &&\r\n                location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        if (isNodeSdk()) {\r\n            return false;\r\n        }\r\n        else if (BrowserPollConnection.forceAllow_) {\r\n            return true;\r\n        }\r\n        else {\r\n            // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n            // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n            return (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp());\r\n        }\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param {!Object} data The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     * @param {!string} id\r\n     * @param {!string} pw\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (isNodeSdk()) {\r\n            return;\r\n        }\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     * @param {*} args\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        this.outstandingRequests = new Set();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     * @private\r\n     * @return {Element}\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (iframe.document) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param {!string} id - The ID of this connection\r\n     * @param {!string} pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length +\r\n                    SEG_HEADER_SIZE +\r\n                    curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param {!string} url - The URL of the script tag.\r\n     * @param {!number} serial - The serial number of the request.\r\n     * @private\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.delete(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param {!string} url - The URL for the script tag source.\r\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (isNodeSdk()) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls) {\r\n                        return;\r\n                    }\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** The semver (www.semver.org) version of the SDK. */\r\nvar SDK_VERSION = '';\r\n// SDK_VERSION should be set before any database instance is created\r\nfunction setSDKVersion(version) {\r\n    SDK_VERSION = version;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId identifier for this transport\r\n     * @param repoInfo The info for the websocket endpoint.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.applicationId = applicationId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n        this.nodeAdmin = repoInfo.nodeAdmin;\r\n    }\r\n    /**\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return {string} connection url\r\n     * @private\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.href &&\r\n            location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfo.connectionURL(WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     *\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (isNodeSdk()) {\r\n                var device = this.nodeAdmin ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') === 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                var options = {\r\n                    headers: {\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                _this.log_(error);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     * @return {boolean}\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length === this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} frameCount The number of frames we are expecting from the server\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @param {!String} data\r\n     * @return {?String} Any remaining data to be process, or null if there is none\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null) {\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        }\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param {Object} data The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param {string} str String to send.\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        /**\r\n         * @const\r\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n         */\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {!RepoInfo} repoInfo\r\n     * @private\r\n     */\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var e_1, _a;\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable) {\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            }\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports = (this.transports_ = []);\r\n            try {\r\n                for (var _b = __values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var transport = _c.value;\r\n                    if (transport && transport['isAvailable']()) {\r\n                        transports.push(transport);\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n     * initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n     * transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param id - an id for this connection\r\n     * @param repoInfo_ - the info for the endpoint to connect to\r\n     * @param applicationId_ - the Firebase App ID for this project\r\n     * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, applicationId_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.applicationId_ = applicationId_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     * @private\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeoutMS = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeoutMS > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            }, Math.floor(healthyTimeoutMS));\r\n        }\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     * @private\r\n     */\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ !== 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} handshake The handshake data returned from the server\r\n     * @private\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.updateHost(host);\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ === 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.updateHost(host);\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    /**\r\n     *\r\n     * @param {string} reason\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, ?string)} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param {string} token The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    /**\r\n     * @param {Object.<string, *>} stats\r\n     */\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar GET_CONNECT_TIMEOUT = 3 * 1000;\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    __extends(PersistentConnection, _super);\r\n    /**\r\n     * @implements {ServerActions}\r\n     * @param repoInfo_ Data about the namespace we are connecting to\r\n     * @param applicationId_ The Firebase App ID for this project\r\n     * @param onDataUpdate_ A callback for new data from the server\r\n     */\r\n    function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.applicationId_ = applicationId_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        _this.interruptReasons_ = {};\r\n        /** Map<path, Map<queryId, ListenSpec>> */\r\n        _this.listens = new Map();\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingGets_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.outstandingGetCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        _this.establishConnectionTimer_ = null;\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        _this.realtime_ = null;\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(stringify(msg));\r\n        assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    PersistentConnection.prototype.get = function (query) {\r\n        var _this = this;\r\n        var deferred = new Deferred();\r\n        var request = {\r\n            p: query.path.toString(),\r\n            q: query.queryObject()\r\n        };\r\n        var outstandingGet = {\r\n            action: 'g',\r\n            request: request,\r\n            onComplete: function (message) {\r\n                var payload = message['d'];\r\n                if (message['s'] === 'ok') {\r\n                    _this.onDataUpdate_(request['p'], payload, \r\n                    /*isMerge*/ false, \r\n                    /*tag*/ null);\r\n                    deferred.resolve(payload);\r\n                }\r\n                else {\r\n                    deferred.reject(payload);\r\n                }\r\n            }\r\n        };\r\n        this.outstandingGets_.push(outstandingGet);\r\n        this.outstandingGetCount_++;\r\n        var index = this.outstandingGets_.length - 1;\r\n        if (!this.connected_) {\r\n            setTimeout(function () {\r\n                var get = _this.outstandingGets_[index];\r\n                if (get === undefined || outstandingGet !== get) {\r\n                    return;\r\n                }\r\n                delete _this.outstandingGets_[index];\r\n                _this.outstandingGetCount_--;\r\n                if (_this.outstandingGetCount_ === 0) {\r\n                    _this.outstandingGets_ = [];\r\n                }\r\n                _this.log_('get ' + index + ' timed out on connection');\r\n                deferred.reject(new Error('Client is offline.'));\r\n            }, GET_CONNECT_TIMEOUT);\r\n        }\r\n        if (this.connected_) {\r\n            this.sendGet_(index);\r\n        }\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        if (!this.listens.has(pathString)) {\r\n            this.listens.set(pathString, new Map());\r\n        }\r\n        assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\r\n        assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens.get(pathString).set(queryId, listenSpec);\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendGet_ = function (index) {\r\n        var _this = this;\r\n        var get = this.outstandingGets_[index];\r\n        this.sendRequest('g', get.request, function (message) {\r\n            delete _this.outstandingGets_[index];\r\n            _this.outstandingGetCount_--;\r\n            if (_this.outstandingGetCount_ === 0) {\r\n                _this.outstandingGets_ = [];\r\n            }\r\n            if (get.onComplete) {\r\n                get.onComplete(message);\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query.queryObject();\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens.get(pathString) &&\r\n                _this.listens.get(pathString).get(queryId);\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && contains(payload, 'w')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var warnings = safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' + query.getQueryParams().getIndex().toString() + '\"';\r\n                var indexPath = query.path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined) {\r\n            request[ /*hash*/'h'] = hash;\r\n        }\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete) {\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        }\r\n        else if (action === 'm') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        }\r\n        else if (action === 'c') {\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        }\r\n        else if (action === 'ac') {\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'sd') {\r\n            this.onSecurityDebugPacket_(body);\r\n        }\r\n        else {\r\n            error('Unrecognized action received from server: ' +\r\n                stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(timeout));\r\n    };\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                }\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        var _this = this;\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, self_1.applicationId_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error) {\r\n                self_1.log_('Failed to get token: ' + error);\r\n                if (!canceled_1) {\r\n                    if (_this.repoInfo_.nodeAdmin) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete) {\r\n                    put.onComplete('disconnect');\r\n                }\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0) {\r\n            this.outstandingPuts_ = [];\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete) {\r\n            listen.onComplete('permission_denied');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens.has(normalizedPathString)) {\r\n            var map = this.listens.get(normalizedPathString);\r\n            listen = map.get(queryId);\r\n            map.delete(queryId);\r\n            if (map.size === 0) {\r\n                this.listens.delete(normalizedPathString);\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var e_1, _a, e_2, _b;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        try {\r\n            // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n            // make sure to send listens before puts.\r\n            for (var _c = __values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var queries = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, __values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var listenSpec = _f.value;\r\n                        this.sendListen_(listenSpec);\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i]) {\r\n                this.sendPut_(i);\r\n            }\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n        for (var i = 0; i < this.outstandingGets_.length; i++) {\r\n            if (this.outstandingGets_[i]) {\r\n                this.sendGet_(i);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (isNodeSdk()) {\r\n            if (this.repoInfo_.nodeAdmin) {\r\n                clientName = 'admin_node';\r\n            }\r\n            else {\r\n                clientName = 'node';\r\n            }\r\n        }\r\n        stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    __extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param {AuthTokenProvider} authTokenProvider_\r\n     * @implements {ServerActions}\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         *\r\n         * @private {!Object.<string, !Object>}\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?number=} tag\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query.path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParameters = query\r\n            .getQueryParams()\r\n            .toRestQueryStringParameters();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error === 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    ReadonlyRestClient.prototype.get = function (query) {\r\n        var _this = this;\r\n        var queryStringParameters = query\r\n            .getQueryParams()\r\n            .toRestQueryStringParameters();\r\n        var pathString = query.path.toString();\r\n        var deferred = new Deferred();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, \r\n                /*isMerge=*/ false, \r\n                /*tag=*/ null);\r\n                deferred.resolve(data);\r\n            }\r\n            else {\r\n                deferred.reject(new Error(data));\r\n            }\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {!Object.<string, *>} queryStringParameters\r\n     * @param {?function(?number, *=)} callback\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                _this.repoInfo_.namespace +\r\n                querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    function Repo(repoInfo_, forceRestClient_, app, authTokenProvider_) {\r\n        this.repoInfo_ = repoInfo_;\r\n        this.forceRestClient_ = forceRestClient_;\r\n        this.app = app;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        /** A list of data pieces and paths to be set when this client disconnects. */\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        // TODO: This should be @private but it's used by test_access.js and internal.js\r\n        this.persistentConnection_ = null;\r\n        // This key is intentionally not updated if RepoInfo is later changed or replaced\r\n        this.key = this.repoInfo_.toURLString();\r\n    }\r\n    Repo.prototype.start = function () {\r\n        var _this = this;\r\n        this.stats_ = StatsManager.getCollection(this.repoInfo_);\r\n        if (this.forceRestClient_ || beingCrawled()) {\r\n            this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), this.authTokenProvider_);\r\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\r\n        }\r\n        else {\r\n            var authOverride = this.app.options['databaseAuthVariableOverride'];\r\n            // Validate authOverride\r\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n                if (typeof authOverride !== 'object') {\r\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n                }\r\n                try {\r\n                    stringify(authOverride);\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Invalid authOverride provided: ' + e);\r\n                }\r\n            }\r\n            this.persistentConnection_ = new PersistentConnection(this.repoInfo_, this.app.options.appId, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), this.authTokenProvider_, authOverride);\r\n            this.server_ = this.persistentConnection_;\r\n        }\r\n        this.authTokenProvider_.addTokenChangeListener(function (token) {\r\n            _this.server_.refreshAuthToken(token);\r\n        });\r\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n        this.statsReporter_ = StatsManager.getOrCreateReporter(this.repoInfo_, function () { return new StatsReporter(_this.stats_, _this.server_); });\r\n        this.transactionsInit_();\r\n        // Used for .info.\r\n        this.infoData_ = new SnapshotHolder();\r\n        this.infoSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                var infoEvents = [];\r\n                var node = _this.infoData_.getNode(query.path);\r\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n                // on initial data...\r\n                if (!node.isEmpty()) {\r\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\r\n                    setTimeout(function () {\r\n                        onComplete('ok');\r\n                    }, 0);\r\n                }\r\n                return infoEvents;\r\n            },\r\n            stopListening: function () { }\r\n        });\r\n        this.updateInfo_('connected', false);\r\n        this.serverSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                    var events = onComplete(status, data);\r\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\r\n                });\r\n                // No synchronous events for network-backed sync trees\r\n                return [];\r\n            },\r\n            stopListening: function (query, tag) {\r\n                _this.server_.unlisten(query, tag);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @return The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    /**\r\n     * @return The namespace represented by the repo.\r\n     */\r\n    Repo.prototype.name = function () {\r\n        return this.repoInfo_.namespace;\r\n    };\r\n    /**\r\n     * @return The time in milliseconds, taking the server offset into account if we have one.\r\n     */\r\n    Repo.prototype.serverTime = function () {\r\n        var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n        var offset = offsetNode.val() || 0;\r\n        return new Date().getTime() + offset;\r\n    };\r\n    /**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     */\r\n    Repo.prototype.generateServerValues = function () {\r\n        return generateWithValues({\r\n            timestamp: this.serverTime()\r\n        });\r\n    };\r\n    /**\r\n     * Called by realtime when we get new messages from the server.\r\n     */\r\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\r\n        // For testing.\r\n        this.dataUpdateCount++;\r\n        var path = new Path(pathString);\r\n        data = this.interceptServerDataCallback_\r\n            ? this.interceptServerDataCallback_(pathString, data)\r\n            : data;\r\n        var events = [];\r\n        if (tag) {\r\n            if (isMerge) {\r\n                var taggedChildren = map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\r\n            }\r\n            else {\r\n                var taggedSnap = nodeFromJSON$1(data);\r\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\r\n            }\r\n        }\r\n        else if (isMerge) {\r\n            var changedChildren = map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\r\n        }\r\n        else {\r\n            var snap = nodeFromJSON$1(data);\r\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\r\n        }\r\n        var affectedPath = path;\r\n        if (events.length > 0) {\r\n            // Since we have a listener outstanding for each transaction, receiving any events\r\n            // is a proxy for some change having occurred.\r\n            affectedPath = this.rerunTransactions_(path);\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\r\n    };\r\n    // TODO: This should be @private but it's used by test_access.js and internal.js\r\n    Repo.prototype.interceptServerData_ = function (callback) {\r\n        this.interceptServerDataCallback_ = callback;\r\n    };\r\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\r\n        this.updateInfo_('connected', connectStatus);\r\n        if (connectStatus === false) {\r\n            this.runOnDisconnectEvents_();\r\n        }\r\n    };\r\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\r\n        var _this = this;\r\n        each(updates, function (key, value) {\r\n            _this.updateInfo_(key, value);\r\n        });\r\n    };\r\n    Repo.prototype.updateInfo_ = function (pathString, value) {\r\n        var path = new Path('/.info/' + pathString);\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.infoData_.updateSnapshot(path, newNode);\r\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n    };\r\n    Repo.prototype.getNextWriteId_ = function () {\r\n        return this.nextWriteId_++;\r\n    };\r\n    /**\r\n     * The purpose of `getValue` is to return the latest known value\r\n     * satisfying `query`.\r\n     *\r\n     * If the client is connected, this method will send a request\r\n     * to the server. If the client is not connected, then either:\r\n     *\r\n     * 1. The client was once connected, but not anymore.\r\n     * 2. The client has never connected, this is the first operation\r\n     *    this repo is handling.\r\n     *\r\n     * In case (1), it's possible that the client still has an active\r\n     * listener, with cached data. Since this is the latest known\r\n     * value satisfying the query, that's what getValue will return.\r\n     * If there is no cached data, `getValue` surfaces an \"offline\"\r\n     * error.\r\n     *\r\n     * In case (2), `getValue` will trigger a time-limited connection\r\n     * attempt. If the client is unable to connect to the server, it\r\n     * will surface an \"offline\" error because there cannot be any\r\n     * cached data. On the other hand, if the client is able to connect,\r\n     * `getValue` will return the server's value for the query, if one\r\n     * exists.\r\n     *\r\n     * @param query - The query to surface a value for.\r\n     */\r\n    Repo.prototype.getValue = function (query) {\r\n        var _this = this;\r\n        return this.server_.get(query).then(function (payload) {\r\n            var node = nodeFromJSON$1(payload);\r\n            var events = _this.serverSyncTree_.applyServerOverwrite(query.path, node);\r\n            _this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n            return Promise.resolve(new DataSnapshot(node, query.getRef(), query.getQueryParams().getIndex()));\r\n        }, function (err) {\r\n            _this.log_('get for query ' +\r\n                stringify(query) +\r\n                ' falling back to cache after error: ' +\r\n                err);\r\n            var cached = _this.serverSyncTree_.calcCompleteEventCache(query.path);\r\n            if (!cached.isEmpty()) {\r\n                return Promise.resolve(new DataSnapshot(cached, query.getRef(), query.getQueryParams().getIndex()));\r\n            }\r\n            return Promise.reject(new Error(err));\r\n        });\r\n    };\r\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\r\n        var _this = this;\r\n        this.log_('set', {\r\n            path: path.toString(),\r\n            value: newVal,\r\n            priority: newPriority\r\n        });\r\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n        // (b) store unresolved paths on JSON parse\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n        var existing = this.serverSyncTree_.calcCompleteEventCache(path);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\r\n        var writeId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\r\n        this.eventQueue_.queueEvents(events);\r\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('set at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n        var affectedPath = this.abortTransactions_(path);\r\n        this.rerunTransactions_(affectedPath);\r\n        // We queued the events above, so just flush the queue here\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\r\n    };\r\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\r\n        // Start with our existing data and merge each child into it.\r\n        var empty = true;\r\n        var serverValues = this.generateServerValues();\r\n        var changedChildren = {};\r\n        each(childrenToMerge, function (changedKey, changedValue) {\r\n            empty = false;\r\n            changedChildren[changedKey] = resolveDeferredValueTree(path.child(changedKey), nodeFromJSON$1(changedValue), _this.serverSyncTree_, serverValues);\r\n        });\r\n        if (!empty) {\r\n            var writeId_1 = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\r\n            this.eventQueue_.queueEvents(events);\r\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n                var success = status === 'ok';\r\n                if (!success) {\r\n                    warn('update at ' + path + ' failed: ' + status);\r\n                }\r\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\r\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\r\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\r\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n            });\r\n            each(childrenToMerge, function (changedPath) {\r\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\r\n                _this.rerunTransactions_(affectedPath);\r\n            });\r\n            // We queued the events above, so just flush the queue here\r\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\r\n        }\r\n        else {\r\n            log(\"update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n        }\r\n    };\r\n    /**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     */\r\n    Repo.prototype.runOnDisconnectEvents_ = function () {\r\n        var _this = this;\r\n        this.log_('onDisconnectEvents');\r\n        var serverValues = this.generateServerValues();\r\n        var resolvedOnDisconnectTree = new SparseSnapshotTree();\r\n        this.onDisconnect_.forEachTree(Path.Empty, function (path, node) {\r\n            var resolved = resolveDeferredValueTree(path, node, _this.serverSyncTree_, serverValues);\r\n            resolvedOnDisconnectTree.remember(path, resolved);\r\n        });\r\n        var events = [];\r\n        resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\r\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\r\n            var affectedPath = _this.abortTransactions_(path);\r\n            _this.rerunTransactions_(affectedPath);\r\n        });\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\r\n    };\r\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\r\n        var _this = this;\r\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.forget(path);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value, priority);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        if (isEmpty(childrenToMerge)) {\r\n            log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n            return;\r\n        }\r\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                each(childrenToMerge, function (childName, childNode) {\r\n                    var newChildNode = nodeFromJSON$1(childNode);\r\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\r\n                });\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\r\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n        // a little bit by handling the return values anyways.\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.interrupt = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.resume = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.resume(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.stats = function (showDelta) {\r\n        if (showDelta === void 0) { showDelta = false; }\r\n        if (typeof console === 'undefined') {\r\n            return;\r\n        }\r\n        var stats;\r\n        if (showDelta) {\r\n            if (!this.statsListener_) {\r\n                this.statsListener_ = new StatsListener(this.stats_);\r\n            }\r\n            stats = this.statsListener_.get();\r\n        }\r\n        else {\r\n            stats = this.stats_.get();\r\n        }\r\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n            return Math.max(currentValue.length, previousValue);\r\n        }, 0);\r\n        each(stats, function (stat, value) {\r\n            var paddedStat = stat;\r\n            // pad stat names to be the same length (plus 2 extra spaces).\r\n            for (var i = stat.length; i < longestName + 2; i++) {\r\n                paddedStat += ' ';\r\n            }\r\n            console.log(paddedStat + value);\r\n        });\r\n    };\r\n    Repo.prototype.statsIncrementCounter = function (metric) {\r\n        this.stats_.incrementCounter(metric);\r\n        this.statsReporter_.includeStat(metric);\r\n    };\r\n    Repo.prototype.log_ = function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        var prefix = '';\r\n        if (this.persistentConnection_) {\r\n            prefix = this.persistentConnection_.id + ':';\r\n        }\r\n        log.apply(void 0, __spread([prefix], varArgs));\r\n    };\r\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\r\n        if (callback) {\r\n            exceptionGuard(function () {\r\n                if (status === 'ok') {\r\n                    callback(null);\r\n                }\r\n                else {\r\n                    var code = (status || 'error').toUpperCase();\r\n                    var message = code;\r\n                    if (errorReason) {\r\n                        message += ': ' + errorReason;\r\n                    }\r\n                    var error = new Error(message);\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    error.code = code;\r\n                    callback(error);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Repo.prototype, \"database\", {\r\n        get: function () {\r\n            return this.__database || (this.__database = new Database(this));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Repo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    /**\r\n     * @param {!NamedNode} node\r\n     * @return {boolean}\r\n     */\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!Node} snap\r\n     * @param {string} childKey\r\n     * @param {!Node} childSnap\r\n     * @param {!CompleteChildSource} source\r\n     * @param {?ChildChangeAccumulator} changeAccumulator\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        assert(oldEventCache.numChildren() === this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     * @return {!number}\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    /**\r\n     * @return {!Index}\r\n     */\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     * @private\r\n     */\r\n    QueryParams.prototype.copy_ = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limit = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = '';\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToFirst = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToLast = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.startAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.startSet_ = true;\r\n        if (indexValue === undefined) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexStartValue_ = indexValue;\r\n        if (key != null) {\r\n            newParams.startNameSet_ = true;\r\n            newParams.indexStartName_ = key;\r\n        }\r\n        else {\r\n            newParams.startNameSet_ = false;\r\n            newParams.indexStartName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.endAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.endSet_ = true;\r\n        if (indexValue === undefined) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexEndValue_ = indexValue;\r\n        if (key !== undefined) {\r\n            newParams.endNameSet_ = true;\r\n            newParams.indexEndName_ = key;\r\n        }\r\n        else {\r\n            newParams.endNameSet_ = false;\r\n            newParams.indexEndName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!Index} index\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.orderBy = function (index) {\r\n        var newParams = this.copy_();\r\n        newParams.index_ = index;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @return {!Object}\r\n     */\r\n    QueryParams.prototype.getQueryObject = function () {\r\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\r\n        var obj = {};\r\n        if (this.startSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\r\n            if (this.startNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\r\n            if (this.endNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\r\n            var viewFrom = this.viewFrom_;\r\n            if (viewFrom === '') {\r\n                if (this.isViewFromLeft()) {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\r\n                }\r\n                else {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\r\n                }\r\n            }\r\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\r\n        }\r\n        // For now, priority index is the default, so we only specify if it's some other index\r\n        if (this.index_ !== PRIORITY_INDEX) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\r\n    };\r\n    /**\r\n     * @return {!NodeFilter}\r\n     */\r\n    QueryParams.prototype.getNodeFilter = function () {\r\n        if (this.loadsAllData()) {\r\n            return new IndexedFilter(this.getIndex());\r\n        }\r\n        else if (this.hasLimit()) {\r\n            return new LimitedFilter(this);\r\n        }\r\n        else {\r\n            return new RangedFilter(this);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a set of REST query string parameters representing this query.\r\n     *\r\n     * @return {!Object.<string,*>} query string parameters\r\n     */\r\n    QueryParams.prototype.toRestQueryStringParameters = function () {\r\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\r\n        var qs = {};\r\n        if (this.isDefault()) {\r\n            return qs;\r\n        }\r\n        var orderBy;\r\n        if (this.index_ === PRIORITY_INDEX) {\r\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\r\n        }\r\n        else if (this.index_ === VALUE_INDEX) {\r\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\r\n        }\r\n        else if (this.index_ === KEY_INDEX) {\r\n            orderBy = REST_CONSTANTS.KEY_INDEX;\r\n        }\r\n        else {\r\n            assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n            orderBy = this.index_.toString();\r\n        }\r\n        qs[REST_CONSTANTS.ORDER_BY] = stringify(orderBy);\r\n        if (this.startSet_) {\r\n            qs[REST_CONSTANTS.START_AT] = stringify(this.indexStartValue_);\r\n            if (this.startNameSet_) {\r\n                qs[REST_CONSTANTS.START_AT] += ',' + stringify(this.indexStartName_);\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            qs[REST_CONSTANTS.END_AT] = stringify(this.indexEndValue_);\r\n            if (this.endNameSet_) {\r\n                qs[REST_CONSTANTS.END_AT] += ',' + stringify(this.indexEndName_);\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            if (this.isViewFromLeft()) {\r\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\r\n            }\r\n            else {\r\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\r\n            }\r\n        }\r\n        return qs;\r\n    };\r\n    /**\r\n     * Wire Protocol Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\r\n        INDEX_START_VALUE: 'sp',\r\n        INDEX_START_NAME: 'sn',\r\n        INDEX_END_VALUE: 'ep',\r\n        INDEX_END_NAME: 'en',\r\n        LIMIT: 'l',\r\n        VIEW_FROM: 'vf',\r\n        VIEW_FROM_LEFT: 'l',\r\n        VIEW_FROM_RIGHT: 'r',\r\n        INDEX: 'i'\r\n    };\r\n    /**\r\n     * REST Query Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.REST_QUERY_CONSTANTS_ = {\r\n        ORDER_BY: 'orderBy',\r\n        PRIORITY_INDEX: '$priority',\r\n        VALUE_INDEX: '$value',\r\n        KEY_INDEX: '$key',\r\n        START_AT: 'startAt',\r\n        END_AT: 'endAt',\r\n        LIMIT_TO_FIRST: 'limitToFirst',\r\n        LIMIT_TO_LAST: 'limitToLast'\r\n    };\r\n    /**\r\n     * Default, empty query parameters\r\n     * @type {!QueryParams}\r\n     * @const\r\n     */\r\n    QueryParams.DEFAULT = new QueryParams();\r\n    return QueryParams;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Reference = /** @class */ (function (_super) {\r\n    __extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     *\r\n     * @param {!Repo} repo\r\n     * @param {(!Path)} path\r\n     * @extends {Query}\r\n     */\r\n    function Reference(repo, path) {\r\n        var _this = this;\r\n        if (!(repo instanceof Repo)) {\r\n            throw new Error('new Reference() no longer supported - use app.database().');\r\n        }\r\n        // call Query's constructor, passing in the repo and path.\r\n        _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\r\n        return _this;\r\n    }\r\n    /** @return {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        if (this.path.isEmpty()) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.path.getBack();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!(string|Path)} pathString\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.child = function (pathString) {\r\n        validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        else if (!(pathString instanceof Path)) {\r\n            if (this.path.getFront() === null) {\r\n                validateRootPathString('Reference.child', 1, pathString, false);\r\n            }\r\n            else {\r\n                validatePathString('Reference.child', 1, pathString, false);\r\n            }\r\n        }\r\n        return new Reference(this.repo, this.path.child(pathString));\r\n    };\r\n    /** @return {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parentPath = this.path.parent();\r\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\r\n    };\r\n    /** @return {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        var ref = this;\r\n        while (ref.getParent() !== null) {\r\n            ref = ref.getParent();\r\n        }\r\n        return ref;\r\n    };\r\n    /** @return {!Database} */\r\n    Reference.prototype.databaseProp = function () {\r\n        return this.repo.database;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.set', this.path);\r\n        validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\r\n        validateCallback('Reference.set', 2, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, \r\n        /*priority=*/ null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.update = function (objectToMerge, onComplete) {\r\n        validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.update', this.path);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\r\n        validateCallback('Reference.update', 2, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {string|number|null} newPriority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('Reference.setWithPriority', this.path);\r\n        validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\r\n        validatePriority('Reference.setWithPriority', 2, newPriority, false);\r\n        validateCallback('Reference.setWithPriority', 3, onComplete, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys') {\r\n            throw ('Reference.setWithPriority failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.');\r\n        }\r\n        var deferred = new Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.remove = function (onComplete) {\r\n        validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateWritablePath('Reference.remove', this.path);\r\n        validateCallback('Reference.remove', 1, onComplete, true);\r\n        return this.set(null, onComplete);\r\n    };\r\n    /**\r\n     * @param {function(*):*} transactionUpdate\r\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n     * @param {boolean=} applyLocally\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateWritablePath('Reference.transaction', this.path);\r\n        validateCallback('Reference.transaction', 1, transactionUpdate, false);\r\n        validateCallback('Reference.transaction', 2, onComplete, true);\r\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\r\n        // to expose it.\r\n        validateBoolean('Reference.transaction', 3, applyLocally, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys') {\r\n            throw ('Reference.transaction failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.');\r\n        }\r\n        if (applyLocally === undefined) {\r\n            applyLocally = true;\r\n        }\r\n        var deferred = new Deferred();\r\n        if (typeof onComplete === 'function') {\r\n            deferred.promise.catch(function () { });\r\n        }\r\n        var promiseComplete = function (error, committed, snapshot) {\r\n            if (error) {\r\n                deferred.reject(error);\r\n            }\r\n            else {\r\n                deferred.resolve(new TransactionResult(committed, snapshot));\r\n            }\r\n            if (typeof onComplete === 'function') {\r\n                onComplete(error, committed, snapshot);\r\n            }\r\n        };\r\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {string|number|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.setPriority', this.path);\r\n        validatePriority('Reference.setPriority', 1, priority, false);\r\n        validateCallback('Reference.setPriority', 2, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*=} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateWritablePath('Reference.push', this.path);\r\n        validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\r\n        validateCallback('Reference.push', 2, onComplete, true);\r\n        var now = this.repo.serverTime();\r\n        var name = nextPushId(now);\r\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\r\n        // We use child() to create handles to two different references. The first is turned into a\r\n        // ThennableReference below by adding then() and catch() methods and is used as the\r\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\r\n        // value of the first ThennableReference.\r\n        var thennablePushRef = this.child(name);\r\n        var pushRef = this.child(name);\r\n        var promise;\r\n        if (value != null) {\r\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\r\n        }\r\n        else {\r\n            promise = Promise.resolve(pushRef);\r\n        }\r\n        thennablePushRef.then = promise.then.bind(promise);\r\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n        if (typeof onComplete === 'function') {\r\n            promise.catch(function () { });\r\n        }\r\n        return thennablePushRef;\r\n    };\r\n    /**\r\n     * @return {!OnDisconnect}\r\n     */\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this.path);\r\n        return new OnDisconnect(this.repo, this.path);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"database\", {\r\n        get: function () {\r\n            return this.databaseProp();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nQuery.__referenceConstructor = Reference;\r\nSyncPoint.__referenceConstructor = Reference;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Node in a Tree.\r\n */\r\nvar TreeNode = /** @class */ (function () {\r\n    function TreeNode() {\r\n        // TODO: Consider making accessors that create children and value lazily or\r\n        // separate Internal / Leaf 'types'.\r\n        this.children = {};\r\n        this.childCount = 0;\r\n        this.value = null;\r\n    }\r\n    return TreeNode;\r\n}());\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {string=} name_ Optional name of the node.\r\n     * @param {Tree=} parent_ Optional parent node.\r\n     * @param {TreeNode=} node_ Optional node to wrap.\r\n     */\r\n    function Tree(name_, parent_, node_) {\r\n        if (name_ === void 0) { name_ = ''; }\r\n        if (parent_ === void 0) { parent_ = null; }\r\n        if (node_ === void 0) { node_ = new TreeNode(); }\r\n        this.name_ = name_;\r\n        this.parent_ = parent_;\r\n        this.node_ = node_;\r\n    }\r\n    /**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param {!(string|Path)} pathObj Path to look up.\r\n     * @return {!Tree.<T>} Tree for path.\r\n     */\r\n    Tree.prototype.subTree = function (pathObj) {\r\n        // TODO: Require pathObj to be Path?\r\n        var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n        var child = this, next = path.getFront();\r\n        while (next !== null) {\r\n            var childNode = safeGet(child.node_.children, next) || new TreeNode();\r\n            child = new Tree(next, child, childNode);\r\n            path = path.popFront();\r\n            next = path.getFront();\r\n        }\r\n        return child;\r\n    };\r\n    /**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return {?T} The data or null if no data exists.\r\n     */\r\n    Tree.prototype.getValue = function () {\r\n        return this.node_.value;\r\n    };\r\n    /**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param {!T} value Value to set.\r\n     */\r\n    Tree.prototype.setValue = function (value) {\r\n        assert(typeof value !== 'undefined', 'Cannot set value to undefined');\r\n        this.node_.value = value;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */\r\n    Tree.prototype.clear = function () {\r\n        this.node_.value = null;\r\n        this.node_.children = {};\r\n        this.node_.childCount = 0;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree has any children.\r\n     */\r\n    Tree.prototype.hasChildren = function () {\r\n        return this.node_.childCount > 0;\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree is empty (no value or children).\r\n     */\r\n    Tree.prototype.isEmpty = function () {\r\n        return this.getValue() === null && !this.hasChildren();\r\n    };\r\n    /**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachChild = function (action) {\r\n        var _this = this;\r\n        each(this.node_.children, function (child, childTree) {\r\n            action(new Tree(child, _this, childTree));\r\n        });\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */\r\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\r\n        if (includeSelf && !childrenFirst) {\r\n            action(this);\r\n        }\r\n        this.forEachChild(function (child) {\r\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\r\n        });\r\n        if (includeSelf && childrenFirst) {\r\n            action(this);\r\n        }\r\n    };\r\n    /**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n     * @return {boolean} true if the action callback returned true.\r\n     */\r\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\r\n        var node = includeSelf ? this : this.parent();\r\n        while (node !== null) {\r\n            if (action(node)) {\r\n                return true;\r\n            }\r\n            node = node.parent();\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\r\n        this.forEachChild(function (child) {\r\n            if (child.getValue() !== null) {\r\n                action(child);\r\n            }\r\n            else {\r\n                child.forEachImmediateDescendantWithValue(action);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @return {!Path} The path of this tree node, as a Path.\r\n     */\r\n    Tree.prototype.path = function () {\r\n        return new Path(this.parent_ === null\r\n            ? this.name_\r\n            : this.parent_.path() + '/' + this.name_);\r\n    };\r\n    /**\r\n     * @return {string} The name of the tree node.\r\n     */\r\n    Tree.prototype.name = function () {\r\n        return this.name_;\r\n    };\r\n    /**\r\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n     */\r\n    Tree.prototype.parent = function () {\r\n        return this.parent_;\r\n    };\r\n    /**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     *\r\n     * @private\r\n     */\r\n    Tree.prototype.updateParents_ = function () {\r\n        if (this.parent_ !== null) {\r\n            this.parent_.updateChild_(this.name_, this);\r\n        }\r\n    };\r\n    /**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param {string} childName The name of the child to update.\r\n     * @param {!Tree.<T>} child The child to update.\r\n     * @private\r\n     */\r\n    Tree.prototype.updateChild_ = function (childName, child) {\r\n        var childEmpty = child.isEmpty();\r\n        var childExists = contains(this.node_.children, childName);\r\n        if (childEmpty && childExists) {\r\n            delete this.node_.children[childName];\r\n            this.node_.childCount--;\r\n            this.updateParents_();\r\n        }\r\n        else if (!childEmpty && !childExists) {\r\n            this.node_.children[childName] = child.node_;\r\n            this.node_.childCount++;\r\n            this.updateParents_();\r\n        }\r\n    };\r\n    return Tree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\r\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\r\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\r\n// For now it's part of Repo, but in its own file.\r\n/**\r\n * @enum {number}\r\n */\r\nvar TransactionStatus;\r\n(function (TransactionStatus) {\r\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\r\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\r\n    // mismatched hash.\r\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\r\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\r\n    // or rejected yet).\r\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\r\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\r\n    // removed when we get a chance to prune completed ones.\r\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\r\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\r\n    // If it comes back as unsuccessful, we'll abort it.\r\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\r\n    // Temporary state used to mark transactions that need to be aborted.\r\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\r\n})(TransactionStatus || (TransactionStatus = {}));\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\r\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.transactionsInit_ = function () {\r\n    /**\r\n     * Stores queues of outstanding transactions for Firebase locations.\r\n     *\r\n     * @type {!Tree.<Array.<!Transaction>>}\r\n     * @private\r\n     */\r\n    this.transactionQueueTree_ = new Tree();\r\n};\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\r\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\r\n    this.log_('transaction on ' + path);\r\n    // Add a watch to make sure we get server updates.\r\n    var valueCallback = function () { };\r\n    var watchRef = new Reference(this, path);\r\n    watchRef.on('value', valueCallback);\r\n    var unwatcher = function () {\r\n        watchRef.off('value', valueCallback);\r\n    };\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = this.getLatestState_(path);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            // We just set the input snapshot, so this cast should be safe\r\n            var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\r\n            transaction.onComplete(null, false, snapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = TransactionStatus.RUN;\r\n        var queueNode = this.transactionQueueTree_.subTree(path);\r\n        var nodeQueue = queueNode.getValue() || [];\r\n        nodeQueue.push(transaction);\r\n        queueNode.setValue(nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\r\n        // start new transactions from the event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            contains(newVal, '.priority')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            priorityForNode = safeGet(newVal, '.priority');\r\n            assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        this.sendReadyTransactions_();\r\n    }\r\n};\r\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\r\n    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n};\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.sendReadyTransactions_ = function (node) {\r\n    var _this = this;\r\n    if (node === void 0) { node = this.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        this.pruneCompletedTransactionsBelowNode_(node);\r\n    }\r\n    if (node.getValue() !== null) {\r\n        var queue = this.buildTransactionQueue_(node);\r\n        assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            this.sendTransactionQueue_(node.path(), queue);\r\n        }\r\n    }\r\n    else if (node.hasChildren()) {\r\n        node.forEachChild(function (childNode) {\r\n            _this.sendReadyTransactions_(childNode);\r\n        });\r\n    }\r\n};\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\r\n    var _this = this;\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = this.getLatestState_(path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = TransactionStatus.SENT;\r\n        txn.retryCount++;\r\n        var relativePath = Path.relativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /** @type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        _this.log_('transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n            // the callback could trigger more transactions or sets.\r\n            var callbacks = [];\r\n            for (var i = 0; i < queue.length; i++) {\r\n                queue[i].status = TransactionStatus.COMPLETED;\r\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\r\n                    var node = queue[i].currentOutputSnapshotResolved;\r\n                    var ref = new Reference(_this, queue[i].path);\r\n                    var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\r\n            // There may be pending transactions that we can now send.\r\n            _this.sendReadyTransactions_();\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\r\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    }\r\n                    else {\r\n                        queue[i].status = TransactionStatus.RUN;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            _this.rerunTransactions_(path);\r\n        }\r\n    }, latestHash);\r\n};\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.rerunTransactions_ = function (changedPath) {\r\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\r\n    var path = rootMostTransactionNode.path();\r\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\r\n    this.rerunTransactionQueue_(queue, path);\r\n    return path;\r\n};\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n    // the callback could trigger more transactions or sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === TransactionStatus.RUN;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var transaction = queue[i];\r\n        var relativePath = Path.relativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason = void 0;\r\n        assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === TransactionStatus.RUN) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = this.generateServerValues();\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = this.getNextWriteId_();\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = TransactionStatus.COMPLETED;\r\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\r\n            // So defer the unwatcher until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    var ref = new Reference(this, queue[i].path);\r\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\r\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\r\n                    var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    this.sendReadyTransactions_();\r\n};\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\r\n    var transactionNode = this.transactionQueueTree_;\r\n    front = path.getFront();\r\n    while (front !== null && transactionNode.getValue() === null) {\r\n        transactionNode = transactionNode.subTree(front);\r\n        path = path.popFront();\r\n        front = path.getFront();\r\n    }\r\n    return transactionNode;\r\n};\r\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) {\r\n        return a.order - b.order;\r\n    });\r\n    return transactionQueue;\r\n};\r\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\r\n    var _this = this;\r\n    var nodeQueue = node.getValue();\r\n    if (nodeQueue !== null) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    node.forEachChild(function (child) {\r\n        _this.aggregateTransactionQueuesForNode_(child, queue);\r\n    });\r\n};\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\r\n    var _this = this;\r\n    var queue = node.getValue();\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        node.setValue(queue.length > 0 ? queue : null);\r\n    }\r\n    node.forEachChild(function (childNode) {\r\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\r\n    });\r\n};\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.abortTransactions_ = function (path) {\r\n    var _this = this;\r\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\r\n    var transactionNode = this.transactionQueueTree_.subTree(path);\r\n    transactionNode.forEachAncestor(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    this.abortTransactionsOnNode_(transactionNode);\r\n    transactionNode.forEachDescendant(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    return affectedPath;\r\n};\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\r\n    var queue = node.getValue();\r\n    if (queue !== null) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n        // the callback could trigger more transactions or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\r\n        // can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) ;\r\n            else if (queue[i].status === TransactionStatus.SENT) {\r\n                assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    var snapshot = null;\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            node.setValue(null);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar FirebaseAuthTokenProvider = /** @class */ (function () {\r\n    function FirebaseAuthTokenProvider(app_, authProvider_) {\r\n        var _this = this;\r\n        this.app_ = app_;\r\n        this.authProvider_ = authProvider_;\r\n        this.auth_ = null;\r\n        this.auth_ = authProvider_.getImmediate({ optional: true });\r\n        if (!this.auth_) {\r\n            authProvider_.get().then(function (auth) { return (_this.auth_ = auth); });\r\n        }\r\n    }\r\n    /**\r\n     * @param {boolean} forceRefresh\r\n     * @return {!Promise<FirebaseAuthTokenData>}\r\n     */\r\n    FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        if (!this.auth_) {\r\n            return Promise.resolve(null);\r\n        }\r\n        return this.auth_.getToken(forceRefresh).catch(function (error) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error && error.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        if (this.auth_) {\r\n            this.auth_.addAuthTokenListener(listener);\r\n        }\r\n        else {\r\n            setTimeout(function () { return listener(null); }, 0);\r\n            this.authProvider_\r\n                .get()\r\n                .then(function (auth) { return auth.addAuthTokenListener(listener); });\r\n        }\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.authProvider_\r\n            .get()\r\n            .then(function (auth) { return auth.removeAuthTokenListener(listener); });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.app_.name +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return FirebaseAuthTokenProvider;\r\n}());\r\n/* Auth token provider that the Admin SDK uses to connect to the Emulator. */\r\nvar EmulatorAdminTokenProvider = /** @class */ (function () {\r\n    function EmulatorAdminTokenProvider() {\r\n    }\r\n    EmulatorAdminTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return Promise.resolve({\r\n            accessToken: EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN\r\n        });\r\n    };\r\n    EmulatorAdminTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // Invoke the listener immediately to match the behavior in Firebase Auth\r\n        // (see packages/auth/src/auth.js#L1807)\r\n        listener(EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN);\r\n    };\r\n    EmulatorAdminTokenProvider.prototype.removeTokenChangeListener = function (listener) { };\r\n    EmulatorAdminTokenProvider.prototype.notifyForInvalidToken = function () { };\r\n    EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN = 'owner';\r\n    return EmulatorAdminTokenProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\r\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\r\nvar _staticInstance;\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar RepoManager = /** @class */ (function () {\r\n    function RepoManager() {\r\n        /**\r\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n         */\r\n        this.repos_ = {};\r\n        /**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         * @private {boolean}\r\n         */\r\n        this.useRestClient_ = false;\r\n    }\r\n    RepoManager.getInstance = function () {\r\n        if (!_staticInstance) {\r\n            _staticInstance = new RepoManager();\r\n        }\r\n        return _staticInstance;\r\n    };\r\n    // TODO(koss): Remove these functions unless used in tests?\r\n    RepoManager.prototype.interrupt = function () {\r\n        var e_1, _a, e_2, _b;\r\n        try {\r\n            for (var _c = __values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var appName = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, __values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var dbUrl = _f.value;\r\n                        this.repos_[appName][dbUrl].interrupt();\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    };\r\n    RepoManager.prototype.resume = function () {\r\n        var e_3, _a, e_4, _b;\r\n        try {\r\n            for (var _c = __values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var appName = _d.value;\r\n                try {\r\n                    for (var _e = (e_4 = void 0, __values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var dbUrl = _f.value;\r\n                        this.repos_[appName][dbUrl].resume();\r\n                    }\r\n                }\r\n                catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_4) throw e_4.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n    };\r\n    /**\r\n     * Update an existing repo in place to point to a new host/port.\r\n     */\r\n    RepoManager.prototype.applyEmulatorSettings = function (repo, host, port) {\r\n        repo.repoInfo_ = new RepoInfo(host + \":\" + port, \r\n        /* secure= */ false, repo.repoInfo_.namespace, repo.repoInfo_.webSocketOnly, repo.repoInfo_.nodeAdmin, repo.repoInfo_.persistenceKey, repo.repoInfo_.includeNamespaceInQueryParams);\r\n        if (repo.repoInfo_.nodeAdmin) {\r\n            repo.authTokenProvider_ = new EmulatorAdminTokenProvider();\r\n        }\r\n    };\r\n    /**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     *\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Database}\r\n     */\r\n    RepoManager.prototype.databaseFromApp = function (app, authProvider, url, nodeAdmin) {\r\n        var dbUrl = url || app.options.databaseURL;\r\n        if (dbUrl === undefined) {\r\n            if (!app.options.projectId) {\r\n                fatal(\"Can't determine Firebase Database URL. Be sure to include \" +\r\n                    ' a Project ID when calling firebase.initializeApp().');\r\n            }\r\n            log('Using default host for project ', app.options.projectId);\r\n            dbUrl = app.options.projectId + \"-default-rtdb.firebaseio.com\";\r\n        }\r\n        var parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n        var repoInfo = parsedUrl.repoInfo;\r\n        var isEmulator;\r\n        var dbEmulatorHost = undefined;\r\n        if (typeof process !== 'undefined') {\r\n            dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\r\n        }\r\n        if (dbEmulatorHost) {\r\n            isEmulator = true;\r\n            dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\r\n            parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n            repoInfo = parsedUrl.repoInfo;\r\n        }\r\n        else {\r\n            isEmulator = !parsedUrl.repoInfo.secure;\r\n        }\r\n        var authTokenProvider = nodeAdmin && isEmulator\r\n            ? new EmulatorAdminTokenProvider()\r\n            : new FirebaseAuthTokenProvider(app, authProvider);\r\n        validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\r\n        if (!parsedUrl.path.isEmpty()) {\r\n            fatal('Database URL must point to the root of a Firebase Database ' +\r\n                '(not including a child path).');\r\n        }\r\n        var repo = this.createRepo(repoInfo, app, authTokenProvider);\r\n        return repo.database;\r\n    };\r\n    /**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     * @param {!Repo} repo\r\n     */\r\n    RepoManager.prototype.deleteRepo = function (repo) {\r\n        var appRepos = safeGet(this.repos_, repo.app.name);\r\n        // This should never happen...\r\n        if (!appRepos || safeGet(appRepos, repo.key) !== repo) {\r\n            fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n        }\r\n        repo.interrupt();\r\n        delete appRepos[repo.key];\r\n    };\r\n    /**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Repo} The Repo object for the specified server / repoName.\r\n     */\r\n    RepoManager.prototype.createRepo = function (repoInfo, app, authTokenProvider) {\r\n        var appRepos = safeGet(this.repos_, app.name);\r\n        if (!appRepos) {\r\n            appRepos = {};\r\n            this.repos_[app.name] = appRepos;\r\n        }\r\n        var repo = safeGet(appRepos, repoInfo.toURLString());\r\n        if (repo) {\r\n            fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n        }\r\n        repo = new Repo(repoInfo, this.useRestClient_, app, authTokenProvider);\r\n        appRepos[repoInfo.toURLString()] = repo;\r\n        return repo;\r\n    };\r\n    /**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     * @param {boolean} forceRestClient\r\n     */\r\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\r\n        this.useRestClient_ = forceRestClient;\r\n    };\r\n    return RepoManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     * @param {!Repo} repoInternal_\r\n     */\r\n    function Database(repoInternal_) {\r\n        var _this = this;\r\n        this.repoInternal_ = repoInternal_;\r\n        /** Track if the instance has been used (root or repo accessed) */\r\n        this.instanceStarted_ = false;\r\n        this.INTERNAL = {\r\n            delete: function () { return __awaiter(_this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    this.checkDeleted_('delete');\r\n                    RepoManager.getInstance().deleteRepo(this.repo_);\r\n                    this.repoInternal_ = null;\r\n                    this.rootInternal_ = null;\r\n                    return [2 /*return*/];\r\n                });\r\n            }); }\r\n        };\r\n        if (!(repoInternal_ instanceof Repo)) {\r\n            fatal(\"Don't call new Database() directly - please use firebase.database().\");\r\n        }\r\n    }\r\n    Object.defineProperty(Database.prototype, \"repo_\", {\r\n        get: function () {\r\n            if (!this.instanceStarted_) {\r\n                this.repoInternal_.start();\r\n                this.instanceStarted_ = true;\r\n            }\r\n            return this.repoInternal_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Database.prototype, \"root_\", {\r\n        get: function () {\r\n            if (!this.rootInternal_) {\r\n                this.rootInternal_ = new Reference(this.repo_, Path.Empty);\r\n            }\r\n            return this.rootInternal_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Database.prototype, \"app\", {\r\n        get: function () {\r\n            return this.repo_.app;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Modify this instance to communicate with the Realtime Database emulator.\r\n     *\r\n     * <p>Note: This method must be called before performing any other operation.\r\n     *\r\n     * @param host the emulator host (ex: localhost)\r\n     * @param port the emulator port (ex: 8080)\r\n     */\r\n    Database.prototype.useEmulator = function (host, port) {\r\n        this.checkDeleted_('useEmulator');\r\n        if (this.instanceStarted_) {\r\n            fatal('Cannot call useEmulator() after instance has already been initialized.');\r\n            return;\r\n        }\r\n        // Modify the repo to apply emulator settings\r\n        RepoManager.getInstance().applyEmulatorSettings(this.repoInternal_, host, port);\r\n    };\r\n    Database.prototype.ref = function (path) {\r\n        this.checkDeleted_('ref');\r\n        validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            return this.refFromURL(path.toString());\r\n        }\r\n        return path !== undefined ? this.root_.child(path) : this.root_;\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @param {string} url\r\n     * @return {!Reference} Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        /** @const {string} */\r\n        var apiName = 'database.refFromURL';\r\n        this.checkDeleted_(apiName);\r\n        validateArgCount(apiName, 1, 1, arguments.length);\r\n        var parsedURL = parseRepoInfo(url, this.repo_.repoInfo_.nodeAdmin);\r\n        validateUrl(apiName, 1, parsedURL);\r\n        var repoInfo = parsedURL.repoInfo;\r\n        if (!repoInfo.isCustomHost() &&\r\n            repoInfo.host !== this.repo_.repoInfo_.host) {\r\n            fatal(apiName +\r\n                ': Host name does not match the current database: ' +\r\n                '(found ' +\r\n                repoInfo.host +\r\n                ' but expected ' +\r\n                this.repo_.repoInfo_.host +\r\n                ')');\r\n        }\r\n        return this.ref(parsedURL.path.toString());\r\n    };\r\n    /**\r\n     * @param {string} apiName\r\n     */\r\n    Database.prototype.checkDeleted_ = function (apiName) {\r\n        if (this.repoInternal_ === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOffline');\r\n        this.repo_.interrupt();\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOnline');\r\n        this.repo_.resume();\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: {\r\n            '.sv': 'timestamp'\r\n        },\r\n        increment: function (delta) {\r\n            return {\r\n                '.sv': {\r\n                    'increment': delta\r\n                }\r\n            };\r\n        }\r\n    };\r\n    return Database;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    ref.repo.stats(showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    ref.repo.statsIncrementCounter(metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref.repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return ref.repo.interceptServerData_(callback);\r\n};\r\n/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app A valid FirebaseApp-like object\r\n * @param url A valid Firebase databaseURL\r\n * @param version custom version e.g. firebase-admin version\r\n * @param customAuthImpl custom auth implementation\r\n */\r\nfunction initStandalone(_a) {\r\n    var app = _a.app, url = _a.url, version = _a.version, customAuthImpl = _a.customAuthImpl, namespace = _a.namespace, _b = _a.nodeAdmin, nodeAdmin = _b === void 0 ? false : _b;\r\n    setSDKVersion(version);\r\n    /**\r\n     * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n     * any actual function.\r\n     */\r\n    var authProvider = new Provider('auth-internal', new ComponentContainer('database-standalone'));\r\n    authProvider.setComponent(new Component('auth-internal', function () { return customAuthImpl; }, \"PRIVATE\" /* PRIVATE */));\r\n    return {\r\n        instance: RepoManager.getInstance().databaseFromApp(app, authProvider, url, nodeAdmin),\r\n        namespace: namespace\r\n    };\r\n}\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData,\n  initStandalone: initStandalone\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        if (hash !== undefined) {\r\n            hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, onComplete, hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\r\nvar ConnectionTarget = RepoInfo;\r\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\r\nvar queryIdentifier = function (query) {\r\n    return query.queryIdentifier();\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    RepoManager.getInstance().forceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\n\nvar name = \"@firebase/database\";\nvar version = \"0.8.1\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // set SDK_VERSION\r\n    setSDKVersion(instance.SDK_VERSION);\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerComponent(new Component('database', function (container, url) {\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        var authProvider = container.getProvider('auth-internal');\r\n        return RepoManager.getInstance().databaseFromApp(app, authProvider, url);\r\n    }, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(\r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        DataSnapshot: DataSnapshot,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    })\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n    if (isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexport { DataSnapshot, Database, OnDisconnect, Query, Reference, ServerValue, enableLogging, registerDatabase };\n//# sourceMappingURL=index.esm.js.map\n"],"sourceRoot":""}