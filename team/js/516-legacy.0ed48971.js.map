{"version":3,"file":"js/516-legacy.0ed48971.js","mappings":"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","sources":["webpack://team/./node_modules/@firebase/database/dist/index.esm.js"],"sourcesContent":["import firebase from '@firebase/app';\nimport { Provider, ComponentContainer, Component } from '@firebase/component';\nimport { stringify, jsonEval, contains, assert, isNodeSdk, base64, stringToByteArray, Sha1, deepCopy, base64Encode, isMobileCordova, stringLength, Deferred, safeGet, isAdmin, isValidFormat, isEmpty, isReactNative, assertionError, map, querystring, errorPrefix, getModularInstance, createMockUserToken, validateArgCount, validateCallback, validateContextObject } from '@firebase/util';\nimport { __spreadArray, __read, __values, __extends, __awaiter, __generator, __assign } from 'tslib';\nimport { Logger, LogLevel } from '@firebase/logger';\n\nvar name = \"@firebase/database\";\nvar version = \"0.11.0\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** The semver (www.semver.org) version of the SDK. */\r\nvar SDK_VERSION = '';\r\n// SDK_VERSION should be set before any database instance is created\r\nfunction setSDKVersion(version) {\r\n    SDK_VERSION = version;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param key - The key to save the value under\r\n     * @param value - The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @returns The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return jsonEval(storedVal);\r\n        }\r\n    };\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param domStorageName - Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @returns Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param str - The string to hash\r\n * @returns {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    var sha1 = new Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return base64.encodeByteArray(sha1Bytes);\r\n};\r\nvar buildLogMessage_ = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < varArgs.length; i++) {\r\n        var arg = varArgs[i];\r\n        if (Array.isArray(arg) ||\r\n            (arg &&\r\n                typeof arg === 'object' &&\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                typeof arg.length === 'number')) {\r\n            message += buildLogMessage_.apply(null, arg);\r\n        }\r\n        else if (typeof arg === 'object') {\r\n            message += stringify(arg);\r\n        }\r\n        else {\r\n            message += arg;\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n */\r\nvar logger = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param logger_ - A flag to turn on logging, or a custom logger\r\n * @param persistent - Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = LogLevel.VERBOSE;\r\n        logger = logClient.log.bind(logClient);\r\n        if (persistent) {\r\n            SessionStorage.set('logging_enabled', true);\r\n        }\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger = logger_;\r\n    }\r\n    else {\r\n        logger = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\nvar log = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger === null && SessionStorage.get('logging_enabled') === true) {\r\n            enableLogging(true);\r\n        }\r\n    }\r\n    if (logger) {\r\n        var message = buildLogMessage_.apply(null, varArgs);\r\n        logger(message);\r\n    }\r\n};\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\r\n    };\r\n};\r\nvar error = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\r\n    logClient.error(message);\r\n};\r\nvar fatal = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\nvar warn = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data !== data || // NaN\r\n            data === Number.POSITIVE_INFINITY ||\r\n            data === Number.NEGATIVE_INFINITY));\r\n};\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete') {\r\n                    wrappedFn_1();\r\n                }\r\n            });\r\n            // fallback to onload.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @returns {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + stringify(obj));\r\n    }\r\n};\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return stringify(obj);\r\n    }\r\n    var keys = [];\r\n    // eslint-disable-next-line guard-for-in\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0) {\r\n            key += ',';\r\n        }\r\n        key += stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param str - The string\r\n * @param segsize - The maximum number of chars in the string.\r\n * @returns The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj - The object or array to iterate over\r\n * @param fn - The function to apply\r\n */\r\nfunction each(obj, fn) {\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param v - A double\r\n *\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1;\r\n    var s, e, f, ln, i;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    var bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    var str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1) {\r\n            hexByte = '0' + hexByte;\r\n        }\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n */\r\nfunction errorForServerCode(code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code === 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code === 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query._path.toString() + ': ' + reason);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n}\r\n/**\r\n * Used to test for integer-looking strings\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\r\n/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */\r\nvar INTEGER_32_MIN = -2147483648;\r\n/**\r\n * For use in kyes, the maximum possible 32-bit integer.\r\n */\r\nvar INTEGER_32_MAX = 2147483647;\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param fn - The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @returns {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param fn - Function to run.\r\n * @param time - Milliseconds to wait before running.\r\n * @returns The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around AppCheck's token fetching capabilities.\r\n */\r\nvar AppCheckTokenProvider = /** @class */ (function () {\r\n    function AppCheckTokenProvider(appName_, appCheckProvider) {\r\n        var _this = this;\r\n        this.appName_ = appName_;\r\n        this.appCheckProvider = appCheckProvider;\r\n        this.appCheck = appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.getImmediate({ optional: true });\r\n        if (!this.appCheck) {\r\n            appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.get().then(function (appCheck) { return (_this.appCheck = appCheck); });\r\n        }\r\n    }\r\n    AppCheckTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        var _this = this;\r\n        if (!this.appCheck) {\r\n            return new Promise(function (resolve, reject) {\r\n                // Support delayed initialization of FirebaseAppCheck. This allows our\r\n                // customers to initialize the RTDB SDK before initializing Firebase\r\n                // AppCheck and ensures that all requests are authenticated if a token\r\n                // becomes available before the timoeout below expires.\r\n                setTimeout(function () {\r\n                    if (_this.appCheck) {\r\n                        _this.getToken(forceRefresh).then(resolve, reject);\r\n                    }\r\n                    else {\r\n                        resolve(null);\r\n                    }\r\n                }, 0);\r\n            });\r\n        }\r\n        return this.appCheck.getToken(forceRefresh);\r\n    };\r\n    AppCheckTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        var _a;\r\n        (_a = this.appCheckProvider) === null || _a === void 0 ? void 0 : _a.get().then(function (appCheck) { return appCheck.addTokenListener(listener); });\r\n    };\r\n    AppCheckTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        warn(\"Provided AppCheck credentials for the app named \\\"\" + this.appName_ + \"\\\" \" +\r\n            'are invalid. This usually indicates your app was not initialized correctly.');\r\n    };\r\n    return AppCheckTokenProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar FirebaseAuthTokenProvider = /** @class */ (function () {\r\n    function FirebaseAuthTokenProvider(appName_, firebaseOptions_, authProvider_) {\r\n        var _this = this;\r\n        this.appName_ = appName_;\r\n        this.firebaseOptions_ = firebaseOptions_;\r\n        this.authProvider_ = authProvider_;\r\n        this.auth_ = null;\r\n        this.auth_ = authProvider_.getImmediate({ optional: true });\r\n        if (!this.auth_) {\r\n            authProvider_.onInit(function (auth) { return (_this.auth_ = auth); });\r\n        }\r\n    }\r\n    FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        var _this = this;\r\n        if (!this.auth_) {\r\n            return new Promise(function (resolve, reject) {\r\n                // Support delayed initialization of FirebaseAuth. This allows our\r\n                // customers to initialize the RTDB SDK before initializing Firebase\r\n                // Auth and ensures that all requests are authenticated if a token\r\n                // becomes available before the timoeout below expires.\r\n                setTimeout(function () {\r\n                    if (_this.auth_) {\r\n                        _this.getToken(forceRefresh).then(resolve, reject);\r\n                    }\r\n                    else {\r\n                        resolve(null);\r\n                    }\r\n                }, 0);\r\n            });\r\n        }\r\n        return this.auth_.getToken(forceRefresh).catch(function (error) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error && error.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        if (this.auth_) {\r\n            this.auth_.addAuthTokenListener(listener);\r\n        }\r\n        else {\r\n            this.authProvider_\r\n                .get()\r\n                .then(function (auth) { return auth.addAuthTokenListener(listener); });\r\n        }\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.authProvider_\r\n            .get()\r\n            .then(function (auth) { return auth.removeAuthTokenListener(listener); });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.appName_ +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.firebaseOptions_) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.firebaseOptions_) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return FirebaseAuthTokenProvider;\r\n}());\r\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\r\nvar EmulatorTokenProvider = /** @class */ (function () {\r\n    function EmulatorTokenProvider(accessToken) {\r\n        this.accessToken = accessToken;\r\n    }\r\n    EmulatorTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return Promise.resolve({\r\n            accessToken: this.accessToken\r\n        });\r\n    };\r\n    EmulatorTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // Invoke the listener immediately to match the behavior in Firebase Auth\r\n        // (see packages/auth/src/auth.js#L1807)\r\n        listener(this.accessToken);\r\n    };\r\n    EmulatorTokenProvider.prototype.removeTokenChangeListener = function (listener) { };\r\n    EmulatorTokenProvider.prototype.notifyForInvalidToken = function () { };\r\n    /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\r\n    EmulatorTokenProvider.OWNER = 'owner';\r\n    return EmulatorTokenProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\r\n// firebase.corp.google.com\r\nvar FORGE_DOMAIN_RE = /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar APPLICATION_ID_PARAM = 'p';\r\nvar APP_CHECK_TOKEN_PARAM = 'ac';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param host - Hostname portion of the url for the repo\r\n     * @param secure - Whether or not this repo is accessed over ssl\r\n     * @param namespace - The namespace represented by the repo\r\n     * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param nodeAdmin - Whether this instance uses Admin SDK credentials\r\n     * @param persistenceKey - Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, nodeAdmin, persistenceKey, includeNamespaceInQueryParams) {\r\n        if (nodeAdmin === void 0) { nodeAdmin = false; }\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        if (includeNamespaceInQueryParams === void 0) { includeNamespaceInQueryParams = false; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.nodeAdmin = nodeAdmin;\r\n        this.persistenceKey = persistenceKey;\r\n        this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\r\n        this._host = host.toLowerCase();\r\n        this._domain = this._host.substr(this._host.indexOf('.') + 1);\r\n        this.internalHost =\r\n            PersistentStorage.get('host:' + host) || this._host;\r\n    }\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this._domain !== 'firebaseio.com' &&\r\n            this._domain !== 'firebaseio-demo.com');\r\n    };\r\n    Object.defineProperty(RepoInfo.prototype, \"host\", {\r\n        get: function () {\r\n            return this._host;\r\n        },\r\n        set: function (newHost) {\r\n            if (newHost !== this.internalHost) {\r\n                this.internalHost = newHost;\r\n                if (this.isCacheableHost()) {\r\n                    PersistentStorage.set('host:' + this._host, this.internalHost);\r\n                }\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    RepoInfo.prototype.toURLString = function () {\r\n        var protocol = this.secure ? 'https://' : 'http://';\r\n        var query = this.includeNamespaceInQueryParams\r\n            ? \"?ns=\" + this.namespace\r\n            : '';\r\n        return \"\" + protocol + this.host + \"/\" + query;\r\n    };\r\n    return RepoInfo;\r\n}());\r\nfunction repoInfoNeedsQueryParam(repoInfo) {\r\n    return (repoInfo.host !== repoInfo.internalHost ||\r\n        repoInfo.isCustomHost() ||\r\n        repoInfo.includeNamespaceInQueryParams);\r\n}\r\n/**\r\n * Returns the websocket URL for this repo\r\n * @param repoInfo - RepoInfo object\r\n * @param type - of connection\r\n * @param params - list\r\n * @returns The URL for this repo\r\n */\r\nfunction repoInfoConnectionURL(repoInfo, type, params) {\r\n    assert(typeof type === 'string', 'typeof type must == string');\r\n    assert(typeof params === 'object', 'typeof params must == object');\r\n    var connURL;\r\n    if (type === WEBSOCKET) {\r\n        connURL =\r\n            (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\r\n    }\r\n    else if (type === LONG_POLLING) {\r\n        connURL =\r\n            (repoInfo.secure ? 'https://' : 'http://') +\r\n                repoInfo.internalHost +\r\n                '/.lp?';\r\n    }\r\n    else {\r\n        throw new Error('Unknown connection type: ' + type);\r\n    }\r\n    if (repoInfoNeedsQueryParam(repoInfo)) {\r\n        params['ns'] = repoInfo.namespace;\r\n    }\r\n    var pairs = [];\r\n    each(params, function (key, value) {\r\n        pairs.push(key + '=' + value);\r\n    });\r\n    return connURL + pairs.join('&');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!contains(this.counters_, name)) {\r\n            this.counters_[name] = 0;\r\n        }\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar collections = {};\r\nvar reporters = {};\r\nfunction statsManagerGetCollection(repoInfo) {\r\n    var hashString = repoInfo.toString();\r\n    if (!collections[hashString]) {\r\n        collections[hashString] = new StatsCollection();\r\n    }\r\n    return collections[hashString];\r\n}\r\nfunction statsManagerGetOrCreateReporter(repoInfo, creatorFunction) {\r\n    var hashString = repoInfo.toString();\r\n    if (!reporters[hashString]) {\r\n        reporters[hashString] = creatorFunction();\r\n    }\r\n    return reporters[hashString];\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId An identifier for this connection, used for logging\r\n     * @param repoInfo The info for the endpoint to send data to.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param appCheckToken The AppCheck token for this client.\r\n     * @param authToken The AuthToken to use for this connection.\r\n     * @param transportSessionId Optional transportSessionid if we are\r\n     * reconnecting for an existing transport session\r\n     * @param lastSessionId Optional lastSessionId if the PersistentConnection has\r\n     * already created a connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, applicationId, appCheckToken, authToken, transportSessionId, lastSessionId) {\r\n        var _this = this;\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.applicationId = applicationId;\r\n        this.appCheckToken = appCheckToken;\r\n        this.authToken = authToken;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = statsManagerGetCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            // Always add the token if we have one.\r\n            if (_this.appCheckToken) {\r\n                params[APP_CHECK_TOKEN_PARAM] = _this.appCheckToken;\r\n            }\r\n            return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_) {\r\n                return;\r\n            }\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = __read(args, 5), command = _a[0], arg1 = _a[1], arg2 = _a[2]; _a[3]; _a[4];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder) {\r\n                    return; // we closed the connection.\r\n                }\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command === FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = __read(args, 2), pN = _a[0], data = _a[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            }\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (_this.applicationId) {\r\n                urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\r\n            }\r\n            if (_this.appCheckToken) {\r\n                urlParams[APP_CHECK_TOKEN_PARAM] = _this.appCheckToken;\r\n            }\r\n            if (typeof location !== 'undefined' &&\r\n                location.hostname &&\r\n                FORGE_DOMAIN_RE.test(location.hostname)) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        if (isNodeSdk()) {\r\n            return false;\r\n        }\r\n        else if (BrowserPollConnection.forceAllow_) {\r\n            return true;\r\n        }\r\n        else {\r\n            // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n            // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n            return (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp());\r\n        }\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param data - The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (isNodeSdk()) {\r\n            return;\r\n        }\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        this.outstandingRequests = new Set();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (iframe.document) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param id - The ID of this connection\r\n     * @param pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length +\r\n                    SEG_HEADER_SIZE +\r\n                    curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param url - The URL of the script tag.\r\n     * @param serial - The serial number of the request.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.delete(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param url - The URL for the script tag source.\r\n     * @param loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (isNodeSdk()) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls) {\r\n                        return;\r\n                    }\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId identifier for this transport\r\n     * @param repoInfo The info for the websocket endpoint.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param appCheckToken The App Check Token for this client.\r\n     * @param authToken The Auth Token for this client.\r\n     * @param transportSessionId Optional transportSessionId if this is connecting\r\n     * to an existing transport session\r\n     * @param lastSessionId Optional lastSessionId if there was a previous\r\n     * connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, applicationId, appCheckToken, authToken, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.applicationId = applicationId;\r\n        this.appCheckToken = appCheckToken;\r\n        this.authToken = authToken;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = statsManagerGetCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId, appCheckToken);\r\n        this.nodeAdmin = repoInfo.nodeAdmin;\r\n    }\r\n    /**\r\n     * @param repoInfo - The info for the websocket endpoint.\r\n     * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId - Optional lastSessionId if there was a previous connection\r\n     * @returns connection url\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId, appCheckToken) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.hostname &&\r\n            FORGE_DOMAIN_RE.test(location.hostname)) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        if (appCheckToken) {\r\n            urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\r\n        }\r\n        return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (isNodeSdk()) {\r\n                var device = this.nodeAdmin ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                // If using Node with admin creds, AppCheck-related checks are unnecessary.\r\n                // Note that we send the credentials here even if they aren't admin credentials, which is\r\n                // not a problem.\r\n                // Note that this header is just used to bypass appcheck, and the token should still be sent\r\n                // through the websocket connection once it is established.\r\n                if (this.authToken) {\r\n                    options.headers['Authorization'] = \"Bearer \" + this.authToken;\r\n                }\r\n                if (this.appCheckToken) {\r\n                    options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\r\n                }\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') === 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                var options = {\r\n                    headers: {\r\n                        'X-Firebase-GMPID': this.applicationId || '',\r\n                        'X-Firebase-AppCheck': this.appCheckToken || ''\r\n                    }\r\n                };\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                _this.log_(error);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length === this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param frameCount - The number of frames we are expecting from the server\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @returns Any remaining data to be process, or null if there is none\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess - The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null) {\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        }\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param data - The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param str - String to send.\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param repoInfo - Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var e_1, _a;\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable) {\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            }\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports = (this.transports_ = []);\r\n            try {\r\n                for (var _b = __values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var transport = _c.value;\r\n                    if (transport && transport['isAvailable']()) {\r\n                        transports.push(transport);\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @returns The constructor for the initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @returns The constructor for the next transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param id - an id for this connection\r\n     * @param repoInfo_ - the info for the endpoint to connect to\r\n     * @param applicationId_ - the Firebase App ID for this project\r\n     * @param appCheckToken_ - The App Check Token for this device.\r\n     * @param authToken_ - The auth token for this session.\r\n     * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, applicationId_, appCheckToken_, authToken_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.applicationId_ = applicationId_;\r\n        this.appCheckToken_ = appCheckToken_;\r\n        this.authToken_ = authToken_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, null, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeoutMS = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeoutMS > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            }, Math.floor(healthyTimeoutMS));\r\n        }\r\n    };\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ !== 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * @param dataMsg - An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param handshake - The handshake data returned from the server\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.host = host;\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ === 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.host = host;\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param token - The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * Refreshes the app check token for the current connection.\r\n     * @param token The app check token\r\n     */\r\n    ServerActions.prototype.refreshAppCheckToken = function (token) { };\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var varArgs = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            varArgs[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = __spreadArray([], __read(this.listeners_[eventType]));\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, varArgs);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    __extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Maximum key depth. */\r\nvar MAX_PATH_DEPTH = 32;\r\n/** Maximum number of (UTF8) bytes in a Firebase path. */\r\nvar MAX_PATH_LENGTH_BYTES = 768;\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param pathOrString - Path string to parse, or another path, or the raw\r\n     * tokens array\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + this.pieces_[i];\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    return Path;\r\n}());\r\nfunction newEmptyPath() {\r\n    return new Path('');\r\n}\r\nfunction pathGetFront(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    return path.pieces_[path.pieceNum_];\r\n}\r\n/**\r\n * @returns The number of segments in this path\r\n */\r\nfunction pathGetLength(path) {\r\n    return path.pieces_.length - path.pieceNum_;\r\n}\r\nfunction pathPopFront(path) {\r\n    var pieceNum = path.pieceNum_;\r\n    if (pieceNum < path.pieces_.length) {\r\n        pieceNum++;\r\n    }\r\n    return new Path(path.pieces_, pieceNum);\r\n}\r\nfunction pathGetBack(path) {\r\n    if (path.pieceNum_ < path.pieces_.length) {\r\n        return path.pieces_[path.pieces_.length - 1];\r\n    }\r\n    return null;\r\n}\r\nfunction pathToUrlEncodedString(path) {\r\n    var pathString = '';\r\n    for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        if (path.pieces_[i] !== '') {\r\n            pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\r\n        }\r\n    }\r\n    return pathString || '/';\r\n}\r\n/**\r\n * Shallow copy of the parts of the path.\r\n *\r\n */\r\nfunction pathSlice(path, begin) {\r\n    if (begin === void 0) { begin = 0; }\r\n    return path.pieces_.slice(path.pieceNum_ + begin);\r\n}\r\nfunction pathParent(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    var pieces = [];\r\n    for (var i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\nfunction pathChild(path, childPathObj) {\r\n    var pieces = [];\r\n    for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    if (childPathObj instanceof Path) {\r\n        for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n            pieces.push(childPathObj.pieces_[i]);\r\n        }\r\n    }\r\n    else {\r\n        var childPieces = childPathObj.split('/');\r\n        for (var i = 0; i < childPieces.length; i++) {\r\n            if (childPieces[i].length > 0) {\r\n                pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\n/**\r\n * @returns True if there are no segments in this path\r\n */\r\nfunction pathIsEmpty(path) {\r\n    return path.pieceNum_ >= path.pieces_.length;\r\n}\r\n/**\r\n * @returns The path from outerPath to innerPath\r\n */\r\nfunction newRelativePath(outerPath, innerPath) {\r\n    var outer = pathGetFront(outerPath), inner = pathGetFront(innerPath);\r\n    if (outer === null) {\r\n        return innerPath;\r\n    }\r\n    else if (outer === inner) {\r\n        return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\r\n    }\r\n    else {\r\n        throw new Error('INTERNAL ERROR: innerPath (' +\r\n            innerPath +\r\n            ') is not within ' +\r\n            'outerPath (' +\r\n            outerPath +\r\n            ')');\r\n    }\r\n}\r\n/**\r\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\r\n */\r\nfunction pathCompare(left, right) {\r\n    var leftKeys = pathSlice(left, 0);\r\n    var rightKeys = pathSlice(right, 0);\r\n    for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n        var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n        if (cmp !== 0) {\r\n            return cmp;\r\n        }\r\n    }\r\n    if (leftKeys.length === rightKeys.length) {\r\n        return 0;\r\n    }\r\n    return leftKeys.length < rightKeys.length ? -1 : 1;\r\n}\r\n/**\r\n * @returns true if paths are the same.\r\n */\r\nfunction pathEquals(path, other) {\r\n    if (pathGetLength(path) !== pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    for (var i = path.pieceNum_, j = other.pieceNum_; i <= path.pieces_.length; i++, j++) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * @returns True if this path is a parent (or the same as) other\r\n */\r\nfunction pathContains(path, other) {\r\n    var i = path.pieceNum_;\r\n    var j = other.pieceNum_;\r\n    if (pathGetLength(path) > pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    while (i < path.pieces_.length) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n        ++i;\r\n        ++j;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param path - Initial Path.\r\n     * @param errorPrefix_ - Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        this.parts_ = pathSlice(path, 0);\r\n        /** Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += stringLength(this.parts_[i]);\r\n        }\r\n        validationPathCheckValid(this);\r\n    }\r\n    return ValidationPath;\r\n}());\r\nfunction validationPathPush(validationPath, child) {\r\n    // Count the needed '/'\r\n    if (validationPath.parts_.length > 0) {\r\n        validationPath.byteLength_ += 1;\r\n    }\r\n    validationPath.parts_.push(child);\r\n    validationPath.byteLength_ += stringLength(child);\r\n    validationPathCheckValid(validationPath);\r\n}\r\nfunction validationPathPop(validationPath) {\r\n    var last = validationPath.parts_.pop();\r\n    validationPath.byteLength_ -= stringLength(last);\r\n    // Un-count the previous '/'\r\n    if (validationPath.parts_.length > 0) {\r\n        validationPath.byteLength_ -= 1;\r\n    }\r\n}\r\nfunction validationPathCheckValid(validationPath) {\r\n    if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\r\n        throw new Error(validationPath.errorPrefix_ +\r\n            'has a key path longer than ' +\r\n            MAX_PATH_LENGTH_BYTES +\r\n            ' bytes (' +\r\n            validationPath.byteLength_ +\r\n            ').');\r\n    }\r\n    if (validationPath.parts_.length > MAX_PATH_DEPTH) {\r\n        throw new Error(validationPath.errorPrefix_ +\r\n            'path specified exceeds the maximum depth that can be written (' +\r\n            MAX_PATH_DEPTH +\r\n            ') or object contains a cycle ' +\r\n            validationPathToErrorString(validationPath));\r\n    }\r\n}\r\n/**\r\n * String for use in error messages - uses '.' notation for path.\r\n */\r\nfunction validationPathToErrorString(validationPath) {\r\n    if (validationPath.parts_.length === 0) {\r\n        return '';\r\n    }\r\n    return \"in property '\" + validationPath.parts_.join('.') + \"'\";\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    __extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar GET_CONNECT_TIMEOUT = 3 * 1000;\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    __extends(PersistentConnection, _super);\r\n    /**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param applicationId_ - The Firebase App ID for this project\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */\r\n    function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, appCheckTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.applicationId_ = applicationId_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.appCheckTokenProvider_ = appCheckTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        _this.interruptReasons_ = {};\r\n        _this.listens = new Map();\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingGets_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.outstandingGetCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        _this.establishConnectionTimer_ = null;\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        _this.realtime_ = null;\r\n        _this.authToken_ = null;\r\n        _this.appCheckToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.invalidAppCheckTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(stringify(msg));\r\n        assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    PersistentConnection.prototype.get = function (query) {\r\n        var _this = this;\r\n        this.initConnection_();\r\n        var deferred = new Deferred();\r\n        var request = {\r\n            p: query._path.toString(),\r\n            q: query._queryObject\r\n        };\r\n        var outstandingGet = {\r\n            action: 'g',\r\n            request: request,\r\n            onComplete: function (message) {\r\n                var payload = message['d'];\r\n                if (message['s'] === 'ok') {\r\n                    _this.onDataUpdate_(request['p'], payload, \r\n                    /*isMerge*/ false, \r\n                    /*tag*/ null);\r\n                    deferred.resolve(payload);\r\n                }\r\n                else {\r\n                    deferred.reject(payload);\r\n                }\r\n            }\r\n        };\r\n        this.outstandingGets_.push(outstandingGet);\r\n        this.outstandingGetCount_++;\r\n        var index = this.outstandingGets_.length - 1;\r\n        if (!this.connected_) {\r\n            setTimeout(function () {\r\n                var get = _this.outstandingGets_[index];\r\n                if (get === undefined || outstandingGet !== get) {\r\n                    return;\r\n                }\r\n                delete _this.outstandingGets_[index];\r\n                _this.outstandingGetCount_--;\r\n                if (_this.outstandingGetCount_ === 0) {\r\n                    _this.outstandingGets_ = [];\r\n                }\r\n                _this.log_('get ' + index + ' timed out on connection');\r\n                deferred.reject(new Error('Client is offline.'));\r\n            }, GET_CONNECT_TIMEOUT);\r\n        }\r\n        if (this.connected_) {\r\n            this.sendGet_(index);\r\n        }\r\n        return deferred.promise;\r\n    };\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        this.initConnection_();\r\n        var queryId = query._queryIdentifier;\r\n        var pathString = query._path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        if (!this.listens.has(pathString)) {\r\n            this.listens.set(pathString, new Map());\r\n        }\r\n        assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'listen() called for non-default but complete query');\r\n        assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens.get(pathString).set(queryId, listenSpec);\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendGet_ = function (index) {\r\n        var _this = this;\r\n        var get = this.outstandingGets_[index];\r\n        this.sendRequest('g', get.request, function (message) {\r\n            delete _this.outstandingGets_[index];\r\n            _this.outstandingGetCount_--;\r\n            if (_this.outstandingGetCount_ === 0) {\r\n                _this.outstandingGets_ = [];\r\n            }\r\n            if (get.onComplete) {\r\n                get.onComplete(message);\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query._path.toString();\r\n        var queryId = query._queryIdentifier;\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query._queryObject;\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens.get(pathString) &&\r\n                _this.listens.get(pathString).get(queryId);\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && contains(payload, 'w')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var warnings = safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\r\n                var indexPath = query._path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    PersistentConnection.prototype.refreshAppCheckToken = function (token) {\r\n        this.appCheckToken_ = token;\r\n        this.log_('App check token refreshed');\r\n        if (this.appCheckToken_) {\r\n            this.tryAppCheck();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us.\r\n            //If we're not connected, simply delete the credential so we dont become\r\n            // authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unappeck', {}, function () { });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given token. If the authentication\r\n     * attempt fails, it's triggered like the token was revoked (the connection is\r\n     * closed).\r\n     */\r\n    PersistentConnection.prototype.tryAppCheck = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.appCheckToken_) {\r\n            this.sendRequest('appcheck', { 'token': this.appCheckToken_ }, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (status === 'ok') {\r\n                    _this.invalidAppCheckTokenCount_ = 0;\r\n                }\r\n                else {\r\n                    _this.onAppCheckRevoked_(status, data);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query._path.toString();\r\n        var queryId = query._queryIdentifier;\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        this.initConnection_();\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined) {\r\n            request[ /*hash*/'h'] = hash;\r\n        }\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete) {\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        }\r\n        else if (action === 'm') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        }\r\n        else if (action === 'c') {\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        }\r\n        else if (action === 'ac') {\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'apc') {\r\n            this.onAppCheckRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'sd') {\r\n            this.onSecurityDebugPacket_(body);\r\n        }\r\n        else {\r\n            error('Unrecognized action received from server: ' +\r\n                stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(timeout));\r\n    };\r\n    PersistentConnection.prototype.initConnection_ = function () {\r\n        if (!this.realtime_ && this.firstConnection_) {\r\n            this.scheduleConnect_(0);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                }\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var onDataMessage, onReady, onDisconnect_1, connId, lastSessionId, canceled_1, connection_1, closeFn, sendRequestFn, forceRefresh, _a, authToken, appCheckToken, error_1;\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!this.shouldReconnect_()) return [3 /*break*/, 4];\r\n                        this.log_('Making a connection attempt');\r\n                        this.lastConnectionAttemptTime_ = new Date().getTime();\r\n                        this.lastConnectionEstablishedTime_ = null;\r\n                        onDataMessage = this.onDataMessage_.bind(this);\r\n                        onReady = this.onReady_.bind(this);\r\n                        onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n                        connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n                        lastSessionId = this.lastSessionId;\r\n                        canceled_1 = false;\r\n                        connection_1 = null;\r\n                        closeFn = function () {\r\n                            if (connection_1) {\r\n                                connection_1.close();\r\n                            }\r\n                            else {\r\n                                canceled_1 = true;\r\n                                onDisconnect_1();\r\n                            }\r\n                        };\r\n                        sendRequestFn = function (msg) {\r\n                            assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                            connection_1.sendRequest(msg);\r\n                        };\r\n                        this.realtime_ = {\r\n                            close: closeFn,\r\n                            sendRequest: sendRequestFn\r\n                        };\r\n                        forceRefresh = this.forceTokenRefresh_;\r\n                        this.forceTokenRefresh_ = false;\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        _b.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, Promise.all([\r\n                                this.authTokenProvider_.getToken(forceRefresh),\r\n                                this.appCheckTokenProvider_.getToken(forceRefresh)\r\n                            ])];\r\n                    case 2:\r\n                        _a = __read.apply(void 0, [_b.sent(), 2]), authToken = _a[0], appCheckToken = _a[1];\r\n                        if (!canceled_1) {\r\n                            log('getToken() completed. Creating connection.');\r\n                            this.authToken_ = authToken && authToken.accessToken;\r\n                            this.appCheckToken_ = appCheckToken && appCheckToken.token;\r\n                            connection_1 = new Connection(connId, this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, onDataMessage, onReady, onDisconnect_1, \r\n                            /* onKill= */ function (reason) {\r\n                                warn(reason + ' (' + _this.repoInfo_.toString() + ')');\r\n                                _this.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                            }, lastSessionId);\r\n                        }\r\n                        else {\r\n                            log('getToken() completed but was canceled');\r\n                        }\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_1 = _b.sent();\r\n                        this.log_('Failed to get token: ' + error_1);\r\n                        if (!canceled_1) {\r\n                            if (this.repoInfo_.nodeAdmin) {\r\n                                // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                                // But getToken() may also just have temporarily failed, so we still want to\r\n                                // continue retrying.\r\n                                warn(error_1);\r\n                            }\r\n                            closeFn();\r\n                        }\r\n                        return [3 /*break*/, 4];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete) {\r\n                    put.onComplete('disconnect');\r\n                }\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0) {\r\n            this.outstandingPuts_ = [];\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete) {\r\n            listen.onComplete('permission_denied');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens.has(normalizedPathString)) {\r\n            var map = this.listens.get(normalizedPathString);\r\n            listen = map.get(queryId);\r\n            map.delete(queryId);\r\n            if (map.size === 0) {\r\n                this.listens.delete(normalizedPathString);\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onAppCheckRevoked_ = function (statusCode, explanation) {\r\n        log('App check token revoked: ' + statusCode + '/' + explanation);\r\n        this.appCheckToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        // Note: We don't close the connection as the developer may not have\r\n        // enforcement enabled. The backend closes connections with enforcements.\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAppCheckTokenCount_++;\r\n            if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\r\n                this.appCheckTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var e_1, _a, e_2, _b;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        this.tryAppCheck();\r\n        try {\r\n            // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n            // make sure to send listens before puts.\r\n            for (var _c = __values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var queries = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, __values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var listenSpec = _f.value;\r\n                        this.sendListen_(listenSpec);\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i]) {\r\n                this.sendPut_(i);\r\n            }\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n        for (var i = 0; i < this.outstandingGets_.length; i++) {\r\n            if (this.outstandingGets_[i]) {\r\n                this.sendGet_(i);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (isNodeSdk()) {\r\n            if (this.repoInfo_.nodeAdmin) {\r\n                clientName = 'admin_node';\r\n            }\r\n            else {\r\n                clientName = 'node';\r\n            }\r\n        }\r\n        stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @returns A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     *\r\n     * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @returns a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    __extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    KeyIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @param node - Node to iterate.\r\n     * @param isReverse_ - Whether or not to iterate in reverse\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_) {\r\n                cmp *= -1;\r\n            }\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_) {\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            result = { key: node.key, value: node.value };\r\n        }\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @param key - Key associated with this node.\r\n     * @param value - Value associated with this node.\r\n     * @param color - Whether this node is red.\r\n     * @param left - Left child.\r\n     * @param right - Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param key - New key for the node, or null.\r\n     * @param value - New value for the node, or null.\r\n     * @param color - New color for the node, or null.\r\n     * @param left - New left child for the node, or null.\r\n     * @param right - New right child for the node, or null.\r\n     * @returns The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @returns The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @returns True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            !!action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @returns The minimum node in the tree.\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @returns The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @returns The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param key - Key to insert.\r\n     * @param value - Value to insert.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var n = this;\r\n        var cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @returns New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_()) {\r\n            n = n.moveRedLeft_();\r\n        }\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param key - The key of the item to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_()) {\r\n                n = n.rotateRight_();\r\n            }\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @returns Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @returns New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_()) {\r\n            n = n.rotateLeft_();\r\n        }\r\n        if (n.left.isRed_() && n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n        }\r\n        if (n.left.isRed_() && n.right.isRed_()) {\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @returns New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @returns New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @returns New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @returns New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @returns Newt ree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @returns True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    LLRBNode.prototype.check_ = function () {\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        var blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @returns The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @returns The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @returns True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @returns Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @param comparator_ - Key comparator.\r\n     * @param root_ - Optional root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @returns New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @returns New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param key - The key to look up.\r\n     * @returns The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param key - The key to find the predecessor of\r\n     * @returns The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty()) {\r\n                        node = node.right;\r\n                    }\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @returns True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @returns The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @returns The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @returns The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @returns The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE$2;\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$2 = val;\r\n}\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number') {\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    }\r\n    else {\r\n        return 'string:' + priority;\r\n    }\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        assert(priorityNode === MAX_NODE$2 || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    assert(priorityNode === MAX_NODE$2 || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @param value_ - The value to store in this leaf node. The object type is\r\n     * possible in the event of a deferred value\r\n     * @param priorityNode_ - The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this;\r\n        }\r\n        else if (pathGetFront(path) === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            assert(front !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(pathPopFront(path), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty()) {\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        }\r\n        else {\r\n            return this.getValue();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            }\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @returns The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    LeafNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON$1;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON$1 = val;\r\n}\r\nfunction setMaxNode(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    __extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    PriorityIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\nvar Base12Num = /** @class */ (function () {\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @param childList - Unsorted list of children\r\n * @param cmp - The comparison method to be used\r\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\r\n * type is not NamedNode\r\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length === 0) {\r\n            return null;\r\n        }\r\n        else if (length === 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         */\r\n        get: function () {\r\n            assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap) {\r\n            throw new Error('No index defined for ' + indexKey);\r\n        }\r\n        if (sortedMap instanceof SortedMap) {\r\n            return sortedMap;\r\n        }\r\n        else {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n    };\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = __assign({}, this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = __assign({}, this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = safeGet(_this.indexSet_, indexName);\r\n            assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name !== namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     * @param children_ - List of children of this node..\r\n     * @param priorityNode_ - The priority of this node (as a snapshot node).\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return this;\r\n        }\r\n        return this.getImmediateChild(front).getChild(pathPopFront(path));\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            var newPriority = newChildren.isEmpty()\r\n                ? EMPTY_NODE\r\n                : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            assert(pathGetFront(path) !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(pathPopFront(path), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty()) {\r\n            return null;\r\n        }\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            // eslint-disable-next-line guard-for-in\r\n            for (var key in obj) {\r\n                array[key] = obj[key];\r\n            }\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty()) {\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            }\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '') {\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n                }\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    __extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n */\r\nvar MAX_NODE = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode$1(MAX_NODE);\r\nsetMaxNode(MAX_NODE);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param json - JSON to create a node for.\r\n * @param priority - Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n */\r\nfunction nodeFromJSON(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj = json;\r\n        each(hinzeJsonObj, function (key, child) {\r\n            if (key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON(child);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length === 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        each(json, function (key, childData) {\r\n            if (contains(json, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty()) {\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    __extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        assert(!pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    PathIndex.prototype.toString = function () {\r\n        return pathSlice(this.indexPath_, 0).join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    __extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    ValueIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    ValueIndex.prototype.maxPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MAX;\r\n    };\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Modeled after base64 web-safe chars, but ordered by ASCII.\r\nvar PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\nvar MIN_PUSH_CHAR = '-';\r\nvar MAX_PUSH_CHAR = 'z';\r\nvar MAX_KEY_LEN = 786;\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\r\nvar successor = function (key) {\r\n    if (key === '' + INTEGER_32_MAX) {\r\n        // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\r\n        return MIN_PUSH_CHAR;\r\n    }\r\n    var keyAsInt = tryParseInt(key);\r\n    if (keyAsInt != null) {\r\n        return '' + (keyAsInt + 1);\r\n    }\r\n    var next = new Array(key.length);\r\n    for (var i_1 = 0; i_1 < next.length; i_1++) {\r\n        next[i_1] = key.charAt(i_1);\r\n    }\r\n    if (next.length < MAX_KEY_LEN) {\r\n        next.push(MIN_PUSH_CHAR);\r\n        return next.join('');\r\n    }\r\n    var i = next.length - 1;\r\n    while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\r\n        i--;\r\n    }\r\n    // `successor` was called on the largest possible key, so return the\r\n    // MAX_NAME, which sorts larger than all keys.\r\n    if (i === -1) {\r\n        return MAX_NAME;\r\n    }\r\n    var source = next[i];\r\n    var sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\r\n    next[i] = sourcePlusOne;\r\n    return next.slice(0, i + 1).join('');\r\n};\r\n// `key` is assumed to be non-empty.\r\nvar predecessor = function (key) {\r\n    if (key === '' + INTEGER_32_MIN) {\r\n        return MIN_NAME;\r\n    }\r\n    var keyAsInt = tryParseInt(key);\r\n    if (keyAsInt != null) {\r\n        return '' + (keyAsInt - 1);\r\n    }\r\n    var next = new Array(key.length);\r\n    for (var i = 0; i < next.length; i++) {\r\n        next[i] = key.charAt(i);\r\n    }\r\n    // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\r\n    // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\r\n    // than that, `predecessor(predecessor(key))`, is\r\n    //\r\n    // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\r\n    //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\r\n    //\r\n    // analogous to increment/decrement for base-10 integers.\r\n    //\r\n    // This works because lexigographic comparison works character-by-character,\r\n    // using length as a tie-breaker if one key is a prefix of the other.\r\n    if (next[next.length - 1] === MIN_PUSH_CHAR) {\r\n        if (next.length === 1) {\r\n            // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\r\n            return '' + INTEGER_32_MAX;\r\n        }\r\n        delete next[next.length - 1];\r\n        return next.join('');\r\n    }\r\n    // Replace the last character with it's immediate predecessor, and\r\n    // fill the suffix of the key with MAX_PUSH_CHAR. This is the\r\n    // lexicographically largest possible key smaller than `key`.\r\n    next[next.length - 1] = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(next[next.length - 1]) - 1);\r\n    return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction changeValue(snapshotNode) {\r\n    return { type: \"value\" /* VALUE */, snapshotNode: snapshotNode };\r\n}\r\nfunction changeChildAdded(childName, snapshotNode) {\r\n    return { type: \"child_added\" /* CHILD_ADDED */, snapshotNode: snapshotNode, childName: childName };\r\n}\r\nfunction changeChildRemoved(childName, snapshotNode) {\r\n    return { type: \"child_removed\" /* CHILD_REMOVED */, snapshotNode: snapshotNode, childName: childName };\r\n}\r\nfunction changeChildChanged(childName, snapshotNode, oldSnap) {\r\n    return {\r\n        type: \"child_changed\" /* CHILD_CHANGED */,\r\n        snapshotNode: snapshotNode,\r\n        childName: childName,\r\n        oldSnap: oldSnap\r\n    };\r\n}\r\nfunction changeChildMoved(childName, snapshotNode) {\r\n    return { type: \"child_moved\" /* CHILD_MOVED */, snapshotNode: snapshotNode, childName: childName };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() === newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(changeChildRemoved(key, oldChild));\r\n                }\r\n                else {\r\n                    assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(changeChildChanged(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(changeChildRemoved(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(changeChildChanged(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(changeChildAdded(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        assert(oldEventCache.numChildren() === this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildChanged(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(changeChildAdded(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(changeChildAdded(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.startAfterSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.endBeforeSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    QueryParams.prototype.hasStartAfter = function () {\r\n        return this.startAfterSet_;\r\n    };\r\n    QueryParams.prototype.hasEndBefore = function () {\r\n        return this.endBeforeSet_;\r\n    };\r\n    /**\r\n     * @returns True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return this.viewFrom_ === \"l\" /* VIEW_FROM_LEFT */;\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @returns True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\r\n    };\r\n    QueryParams.prototype.copy = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    return QueryParams;\r\n}());\r\nfunction queryParamsGetNodeFilter(queryParams) {\r\n    if (queryParams.loadsAllData()) {\r\n        return new IndexedFilter(queryParams.getIndex());\r\n    }\r\n    else if (queryParams.hasLimit()) {\r\n        return new LimitedFilter(queryParams);\r\n    }\r\n    else {\r\n        return new RangedFilter(queryParams);\r\n    }\r\n}\r\nfunction queryParamsLimitToFirst(queryParams, newLimit) {\r\n    var newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"l\" /* VIEW_FROM_LEFT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsLimitToLast(queryParams, newLimit) {\r\n    var newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"r\" /* VIEW_FROM_RIGHT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAt(queryParams, indexValue, key) {\r\n    var newParams = queryParams.copy();\r\n    newParams.startSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexStartValue_ = indexValue;\r\n    if (key != null) {\r\n        newParams.startNameSet_ = true;\r\n        newParams.indexStartName_ = key;\r\n    }\r\n    else {\r\n        newParams.startNameSet_ = false;\r\n        newParams.indexStartName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAfter(queryParams, indexValue, key) {\r\n    var params;\r\n    if (queryParams.index_ === KEY_INDEX) {\r\n        if (typeof indexValue === 'string') {\r\n            indexValue = successor(indexValue);\r\n        }\r\n        params = queryParamsStartAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        var childKey = void 0;\r\n        if (key == null) {\r\n            childKey = MAX_NAME;\r\n        }\r\n        else {\r\n            childKey = successor(key);\r\n        }\r\n        params = queryParamsStartAt(queryParams, indexValue, childKey);\r\n    }\r\n    params.startAfterSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsEndAt(queryParams, indexValue, key) {\r\n    var newParams = queryParams.copy();\r\n    newParams.endSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexEndValue_ = indexValue;\r\n    if (key !== undefined) {\r\n        newParams.endNameSet_ = true;\r\n        newParams.indexEndName_ = key;\r\n    }\r\n    else {\r\n        newParams.endNameSet_ = false;\r\n        newParams.indexEndName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsEndBefore(queryParams, indexValue, key) {\r\n    var childKey;\r\n    var params;\r\n    if (queryParams.index_ === KEY_INDEX) {\r\n        if (typeof indexValue === 'string') {\r\n            indexValue = predecessor(indexValue);\r\n        }\r\n        params = queryParamsEndAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        if (key == null) {\r\n            childKey = MIN_NAME;\r\n        }\r\n        else {\r\n            childKey = predecessor(key);\r\n        }\r\n        params = queryParamsEndAt(queryParams, indexValue, childKey);\r\n    }\r\n    params.endBeforeSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsOrderBy(queryParams, index) {\r\n    var newParams = queryParams.copy();\r\n    newParams.index_ = index;\r\n    return newParams;\r\n}\r\n/**\r\n * Returns a set of REST query string parameters representing this query.\r\n *\r\n * @returns query string parameters\r\n */\r\nfunction queryParamsToRestQueryStringParameters(queryParams) {\r\n    var qs = {};\r\n    if (queryParams.isDefault()) {\r\n        return qs;\r\n    }\r\n    var orderBy;\r\n    if (queryParams.index_ === PRIORITY_INDEX) {\r\n        orderBy = \"$priority\" /* PRIORITY_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === VALUE_INDEX) {\r\n        orderBy = \"$value\" /* VALUE_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === KEY_INDEX) {\r\n        orderBy = \"$key\" /* KEY_INDEX */;\r\n    }\r\n    else {\r\n        assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n        orderBy = queryParams.index_.toString();\r\n    }\r\n    qs[\"orderBy\" /* ORDER_BY */] = stringify(orderBy);\r\n    if (queryParams.startSet_) {\r\n        qs[\"startAt\" /* START_AT */] = stringify(queryParams.indexStartValue_);\r\n        if (queryParams.startNameSet_) {\r\n            qs[\"startAt\" /* START_AT */] +=\r\n                ',' + stringify(queryParams.indexStartName_);\r\n        }\r\n    }\r\n    if (queryParams.endSet_) {\r\n        qs[\"endAt\" /* END_AT */] = stringify(queryParams.indexEndValue_);\r\n        if (queryParams.endNameSet_) {\r\n            qs[\"endAt\" /* END_AT */] +=\r\n                ',' + stringify(queryParams.indexEndName_);\r\n        }\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        if (queryParams.isViewFromLeft()) {\r\n            qs[\"limitToFirst\" /* LIMIT_TO_FIRST */] = queryParams.limit_;\r\n        }\r\n        else {\r\n            qs[\"limitToLast\" /* LIMIT_TO_LAST */] = queryParams.limit_;\r\n        }\r\n    }\r\n    return qs;\r\n}\r\nfunction queryParamsGetQueryObject(queryParams) {\r\n    var obj = {};\r\n    if (queryParams.startSet_) {\r\n        obj[\"sp\" /* INDEX_START_VALUE */] =\r\n            queryParams.indexStartValue_;\r\n        if (queryParams.startNameSet_) {\r\n            obj[\"sn\" /* INDEX_START_NAME */] =\r\n                queryParams.indexStartName_;\r\n        }\r\n    }\r\n    if (queryParams.endSet_) {\r\n        obj[\"ep\" /* INDEX_END_VALUE */] = queryParams.indexEndValue_;\r\n        if (queryParams.endNameSet_) {\r\n            obj[\"en\" /* INDEX_END_NAME */] = queryParams.indexEndName_;\r\n        }\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        obj[\"l\" /* LIMIT */] = queryParams.limit_;\r\n        var viewFrom = queryParams.viewFrom_;\r\n        if (viewFrom === '') {\r\n            if (queryParams.isViewFromLeft()) {\r\n                viewFrom = \"l\" /* VIEW_FROM_LEFT */;\r\n            }\r\n            else {\r\n                viewFrom = \"r\" /* VIEW_FROM_RIGHT */;\r\n            }\r\n        }\r\n        obj[\"vf\" /* VIEW_FROM */] = viewFrom;\r\n    }\r\n    // For now, priority index is the default, so we only specify if it's some other index\r\n    if (queryParams.index_ !== PRIORITY_INDEX) {\r\n        obj[\"i\" /* INDEX */] = queryParams.index_.toString();\r\n    }\r\n    return obj;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    __extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_, appCheckTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.appCheckTokenProvider_ = appCheckTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            assert(query._queryParams.isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query._path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query._path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error === 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    ReadonlyRestClient.prototype.get = function (query) {\r\n        var _this = this;\r\n        var queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\r\n        var pathString = query._path.toString();\r\n        var deferred = new Deferred();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, \r\n                /*isMerge=*/ false, \r\n                /*tag=*/ null);\r\n                deferred.resolve(data);\r\n            }\r\n            else {\r\n                deferred.reject(new Error(data));\r\n            }\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        return Promise.all([\r\n            this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\r\n            this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\r\n        ]).then(function (_a) {\r\n            var _b = __read(_a, 2), authToken = _b[0], appCheckToken = _b[1];\r\n            if (authToken && authToken.accessToken) {\r\n                queryStringParameters['auth'] = authToken.accessToken;\r\n            }\r\n            if (appCheckToken && appCheckToken.token) {\r\n                queryStringParameters['ac'] = appCheckToken.token;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                _this.repoInfo_.namespace +\r\n                querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newSparseSnapshotTree() {\r\n    return {\r\n        value: null,\r\n        children: new Map()\r\n    };\r\n}\r\n/**\r\n * Stores the given node at the specified path. If there is already a node\r\n * at a shallower path, it merges the new data into that snapshot node.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @param data - The new data, or null.\r\n */\r\nfunction sparseSnapshotTreeRemember(sparseSnapshotTree, path, data) {\r\n    if (pathIsEmpty(path)) {\r\n        sparseSnapshotTree.value = data;\r\n        sparseSnapshotTree.children.clear();\r\n    }\r\n    else if (sparseSnapshotTree.value !== null) {\r\n        sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\r\n    }\r\n    else {\r\n        var childKey = pathGetFront(path);\r\n        if (!sparseSnapshotTree.children.has(childKey)) {\r\n            sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\r\n        }\r\n        var child = sparseSnapshotTree.children.get(childKey);\r\n        path = pathPopFront(path);\r\n        sparseSnapshotTreeRemember(child, path, data);\r\n    }\r\n}\r\n/**\r\n * Purge the data at path from the cache.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @returns True if this node should now be removed.\r\n */\r\nfunction sparseSnapshotTreeForget(sparseSnapshotTree, path) {\r\n    if (pathIsEmpty(path)) {\r\n        sparseSnapshotTree.value = null;\r\n        sparseSnapshotTree.children.clear();\r\n        return true;\r\n    }\r\n    else {\r\n        if (sparseSnapshotTree.value !== null) {\r\n            if (sparseSnapshotTree.value.isLeafNode()) {\r\n                // We're trying to forget a node that doesn't exist\r\n                return false;\r\n            }\r\n            else {\r\n                var value = sparseSnapshotTree.value;\r\n                sparseSnapshotTree.value = null;\r\n                value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                    sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\r\n                });\r\n                return sparseSnapshotTreeForget(sparseSnapshotTree, path);\r\n            }\r\n        }\r\n        else if (sparseSnapshotTree.children.size > 0) {\r\n            var childKey = pathGetFront(path);\r\n            path = pathPopFront(path);\r\n            if (sparseSnapshotTree.children.has(childKey)) {\r\n                var safeToRemove = sparseSnapshotTreeForget(sparseSnapshotTree.children.get(childKey), path);\r\n                if (safeToRemove) {\r\n                    sparseSnapshotTree.children.delete(childKey);\r\n                }\r\n            }\r\n            return sparseSnapshotTree.children.size === 0;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Recursively iterates through all of the stored tree and calls the\r\n * callback on each one.\r\n *\r\n * @param prefixPath - Path to look up node for.\r\n * @param func - The function to invoke for each tree.\r\n */\r\nfunction sparseSnapshotTreeForEachTree(sparseSnapshotTree, prefixPath, func) {\r\n    if (sparseSnapshotTree.value !== null) {\r\n        func(prefixPath, sparseSnapshotTree.value);\r\n    }\r\n    else {\r\n        sparseSnapshotTreeForEachChild(sparseSnapshotTree, function (key, tree) {\r\n            var path = new Path(prefixPath.toString() + '/' + key);\r\n            sparseSnapshotTreeForEachTree(tree, path, func);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Iterates through each immediate child and triggers the callback.\r\n * Only seems to be used in tests.\r\n *\r\n * @param func - The function to invoke for each child.\r\n */\r\nfunction sparseSnapshotTreeForEachChild(sparseSnapshotTree, func) {\r\n    sparseSnapshotTree.children.forEach(function (tree, key) {\r\n        func(key, tree);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ - The collection to \"listen\" to.\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = __assign({}, newStats);\r\n        if (this.last_) {\r\n            each(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\nvar StatsReporter = /** @class */ (function () {\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        each(stats, function (stat, value) {\r\n            if (value > 0 && contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\r\nfunction statsReporterIncludeStat(reporter, stat) {\r\n    reporter.statsToReport_[stat] = true;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\nfunction newOperationSourceUser() {\r\n    return {\r\n        fromUser: true,\r\n        fromServer: false,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServer() {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServerTaggedQuery(queryId) {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId: queryId,\r\n        tagged: true\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\r\n     */\r\n    function AckUserWrite(\r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ affectedTree, \r\n    /** @inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = newOperationSourceUser();\r\n    }\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!pathIsEmpty(this.path)) {\r\n            assert(pathGetFront(this.path) === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(pathPopFront(this.path), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(newEmptyPath(), childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new ListenComplete(this.source, newEmptyPath());\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, pathPopFront(this.path));\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new Overwrite(this.source, newEmptyPath(), this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, pathPopFront(this.path), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /** @inheritDoc */ source, \r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, newEmptyPath(), childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, newEmptyPath(), childTree);\r\n            }\r\n        }\r\n        else {\r\n            assert(pathGetFront(this.path) === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, pathPopFront(this.path), this.children);\r\n        }\r\n    };\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = pathGetFront(path);\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        this.index_ = this.query_._queryParams.getIndex();\r\n    }\r\n    return EventGenerator;\r\n}());\r\n/**\r\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n *\r\n * Notes:\r\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n *    our index.\r\n *  - prevName will be calculated based on the index ordering.\r\n */\r\nfunction eventGeneratorGenerateEventsForChanges(eventGenerator, changes, eventCache, eventRegistrations) {\r\n    var events = [];\r\n    var moves = [];\r\n    changes.forEach(function (change) {\r\n        if (change.type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n            eventGenerator.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n            moves.push(changeChildMoved(change.childName, change.snapshotNode));\r\n        }\r\n    });\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_removed\" /* CHILD_REMOVED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_added\" /* CHILD_ADDED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_moved\" /* CHILD_MOVED */, moves, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_changed\" /* CHILD_CHANGED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"value\" /* VALUE */, changes, eventRegistrations, eventCache);\r\n    return events;\r\n}\r\n/**\r\n * Given changes of a single change type, generate the corresponding events.\r\n */\r\nfunction eventGeneratorGenerateEventsForType(eventGenerator, events, eventType, changes, registrations, eventCache) {\r\n    var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n    filteredChanges.sort(function (a, b) {\r\n        return eventGeneratorCompareChanges(eventGenerator, a, b);\r\n    });\r\n    filteredChanges.forEach(function (change) {\r\n        var materializedChange = eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache);\r\n        registrations.forEach(function (registration) {\r\n            if (registration.respondsTo(change.type)) {\r\n                events.push(registration.createEvent(materializedChange, eventGenerator.query_));\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache) {\r\n    if (change.type === 'value' || change.type === 'child_removed') {\r\n        return change;\r\n    }\r\n    else {\r\n        change.prevName = eventCache.getPredecessorChildName(change.childName, change.snapshotNode, eventGenerator.index_);\r\n        return change;\r\n    }\r\n}\r\nfunction eventGeneratorCompareChanges(eventGenerator, a, b) {\r\n    if (a.childName == null || b.childName == null) {\r\n        throw assertionError('Should only compare child_ events.');\r\n    }\r\n    var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n    var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n    return eventGenerator.index_.compare(aWrapped, bWrapped);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newViewCache(eventCache, serverCache) {\r\n    return { eventCache: eventCache, serverCache: serverCache };\r\n}\r\nfunction viewCacheUpdateEventSnap(viewCache, eventSnap, complete, filtered) {\r\n    return newViewCache(new CacheNode(eventSnap, complete, filtered), viewCache.serverCache);\r\n}\r\nfunction viewCacheUpdateServerSnap(viewCache, serverSnap, complete, filtered) {\r\n    return newViewCache(viewCache.eventCache, new CacheNode(serverSnap, complete, filtered));\r\n}\r\nfunction viewCacheGetCompleteEventSnap(viewCache) {\r\n    return viewCache.eventCache.isFullyInitialized()\r\n        ? viewCache.eventCache.getNode()\r\n        : null;\r\n}\r\nfunction viewCacheGetCompleteServerSnap(viewCache) {\r\n    return viewCache.serverCache.isFullyInitialized()\r\n        ? viewCache.serverCache.getNode()\r\n        : null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = new ImmutableTree(null);\r\n        each(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\r\n     * objects on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param relativePath - The remainder of the path\r\n     * @param predicate - The predicate to satisfy to return a node\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: newEmptyPath(), value: this.value };\r\n        }\r\n        else {\r\n            if (pathIsEmpty(relativePath)) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathGetFront(relativePath);\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(pathPopFront(relativePath), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = pathChild(new Path(front), childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @returns The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param relativePath - Path to set value at.\r\n     * @param toSet - Value to set.\r\n     * @returns Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front) || new ImmutableTree(null);\r\n            var newChild = child.set(pathPopFront(relativePath), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param relativePath - Path to value to remove.\r\n     * @returns Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            if (this.children.isEmpty()) {\r\n                return new ImmutableTree(null);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(pathPopFront(relativePath));\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return new ImmutableTree(null);\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param relativePath - Path to get value for.\r\n     * @returns Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param relativePath - Path to replace subtree for.\r\n     * @param newTree - New tree.\r\n     * @returns Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front) || new ImmutableTree(null);\r\n            var newChild = child.setTree(pathPopFront(relativePath), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(newEmptyPath(), fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathIsEmpty(pathToFollow)) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathGetFront(pathToFollow);\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathPopFront(pathToFollow), pathChild(pathSoFar, front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathIsEmpty(pathToFollow)) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathGetFront(pathToFollow);\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathPopFront(pathToFollow), pathChild(currentRelativePath, front), f);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param f - A function to be called with the path from the root of the tree to\r\n     * a node, and the value at that node. Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(pathChild(currentRelativePath, childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    CompoundWrite.empty = function () {\r\n        return new CompoundWrite(new ImmutableTree(null));\r\n    };\r\n    return CompoundWrite;\r\n}());\r\nfunction compoundWriteAddWrite(compoundWrite, path, node) {\r\n    if (pathIsEmpty(path)) {\r\n        return new CompoundWrite(new ImmutableTree(node));\r\n    }\r\n    else {\r\n        var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            var rootMostPath = rootmost.path;\r\n            var value = rootmost.value;\r\n            var relativePath = newRelativePath(rootMostPath, path);\r\n            value = value.updateChild(relativePath, node);\r\n            return new CompoundWrite(compoundWrite.writeTree_.set(rootMostPath, value));\r\n        }\r\n        else {\r\n            var subtree = new ImmutableTree(node);\r\n            var newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    }\r\n}\r\nfunction compoundWriteAddWrites(compoundWrite, path, updates) {\r\n    var newWrite = compoundWrite;\r\n    each(updates, function (childKey, node) {\r\n        newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\r\n    });\r\n    return newWrite;\r\n}\r\n/**\r\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n * location, which must be removed by calling this method with that path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to remove.\r\n * @param path - The path at which a write and all deeper writes should be removed\r\n * @returns The new CompoundWrite with the removed path\r\n */\r\nfunction compoundWriteRemoveWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return CompoundWrite.empty();\r\n    }\r\n    else {\r\n        var newWriteTree = compoundWrite.writeTree_.setTree(path, new ImmutableTree(null));\r\n        return new CompoundWrite(newWriteTree);\r\n    }\r\n}\r\n/**\r\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n * considered \"complete\".\r\n *\r\n * @param compoundWrite - The CompoundWrite to check.\r\n * @param path - The path to check for\r\n * @returns Whether there is a complete write at that path\r\n */\r\nfunction compoundWriteHasCompleteWrite(compoundWrite, path) {\r\n    return compoundWriteGetCompleteNode(compoundWrite, path) != null;\r\n}\r\n/**\r\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n * writes from deeper paths, but will return child nodes from a more shallow path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get the node from.\r\n * @param path - The path to get a complete write\r\n * @returns The node if complete at that path, or null otherwise.\r\n */\r\nfunction compoundWriteGetCompleteNode(compoundWrite, path) {\r\n    var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n    if (rootmost != null) {\r\n        return compoundWrite.writeTree_\r\n            .get(rootmost.path)\r\n            .getChild(newRelativePath(rootmost.path, path));\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Returns all children that are guaranteed to be a complete overwrite.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get children from.\r\n * @returns A list of all complete children.\r\n */\r\nfunction compoundWriteGetCompleteChildren(compoundWrite) {\r\n    var children = [];\r\n    var node = compoundWrite.writeTree_.value;\r\n    if (node != null) {\r\n        // If it's a leaf node, it has no children; so nothing to do.\r\n        if (!node.isLeafNode()) {\r\n            node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                children.push(new NamedNode(childName, childNode));\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        compoundWrite.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value != null) {\r\n                children.push(new NamedNode(childName, childTree.value));\r\n            }\r\n        });\r\n    }\r\n    return children;\r\n}\r\nfunction compoundWriteChildCompoundWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return compoundWrite;\r\n    }\r\n    else {\r\n        var shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\r\n        if (shadowingNode != null) {\r\n            return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n        }\r\n        else {\r\n            return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n * @returns Whether this CompoundWrite is empty\r\n */\r\nfunction compoundWriteIsEmpty(compoundWrite) {\r\n    return compoundWrite.writeTree_.isEmpty();\r\n}\r\n/**\r\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n * node\r\n * @param node - The node to apply this CompoundWrite to\r\n * @returns The node with all writes applied\r\n */\r\nfunction compoundWriteApply(compoundWrite, node) {\r\n    return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\r\n}\r\nfunction applySubtreeWrite(relativePath, writeTree, node) {\r\n    if (writeTree.value != null) {\r\n        // Since there a write is always a leaf, we're done here\r\n        return node.updateChild(relativePath, writeTree.value);\r\n    }\r\n    else {\r\n        var priorityWrite_1 = null;\r\n        writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (childKey === '.priority') {\r\n                // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                // to apply priorities to empty nodes that are later filled\r\n                assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                priorityWrite_1 = childTree.value;\r\n            }\r\n            else {\r\n                node = applySubtreeWrite(pathChild(relativePath, childKey), childTree, node);\r\n            }\r\n        });\r\n        // If there was a priority write, we only apply it if the node is not empty\r\n        if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n            node = node.updateChild(pathChild(relativePath, '.priority'), priorityWrite_1);\r\n        }\r\n        return node;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n *\r\n */\r\nfunction writeTreeChildWrites(writeTree, path) {\r\n    return newWriteTreeRef(path, writeTree);\r\n}\r\n/**\r\n * Record a new overwrite from user code.\r\n *\r\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\r\n */\r\nfunction writeTreeAddOverwrite(writeTree, path, snap, writeId, visible) {\r\n    assert(writeId > writeTree.lastWriteId, 'Stacking an older write on top of newer ones');\r\n    if (visible === undefined) {\r\n        visible = true;\r\n    }\r\n    writeTree.allWrites.push({\r\n        path: path,\r\n        snap: snap,\r\n        writeId: writeId,\r\n        visible: visible\r\n    });\r\n    if (visible) {\r\n        writeTree.visibleWrites = compoundWriteAddWrite(writeTree.visibleWrites, path, snap);\r\n    }\r\n    writeTree.lastWriteId = writeId;\r\n}\r\n/**\r\n * Record a new merge from user code.\r\n */\r\nfunction writeTreeAddMerge(writeTree, path, changedChildren, writeId) {\r\n    assert(writeId > writeTree.lastWriteId, 'Stacking an older merge on top of newer ones');\r\n    writeTree.allWrites.push({\r\n        path: path,\r\n        children: changedChildren,\r\n        writeId: writeId,\r\n        visible: true\r\n    });\r\n    writeTree.visibleWrites = compoundWriteAddWrites(writeTree.visibleWrites, path, changedChildren);\r\n    writeTree.lastWriteId = writeId;\r\n}\r\nfunction writeTreeGetWrite(writeTree, writeId) {\r\n    for (var i = 0; i < writeTree.allWrites.length; i++) {\r\n        var record = writeTree.allWrites[i];\r\n        if (record.writeId === writeId) {\r\n            return record;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n *\r\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n * events as a result).\r\n */\r\nfunction writeTreeRemoveWrite(writeTree, writeId) {\r\n    // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n    // out of order.\r\n    //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n    //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n    var idx = writeTree.allWrites.findIndex(function (s) {\r\n        return s.writeId === writeId;\r\n    });\r\n    assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n    var writeToRemove = writeTree.allWrites[idx];\r\n    writeTree.allWrites.splice(idx, 1);\r\n    var removedWriteWasVisible = writeToRemove.visible;\r\n    var removedWriteOverlapsWithOtherWrites = false;\r\n    var i = writeTree.allWrites.length - 1;\r\n    while (removedWriteWasVisible && i >= 0) {\r\n        var currentWrite = writeTree.allWrites[i];\r\n        if (currentWrite.visible) {\r\n            if (i >= idx &&\r\n                writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                // The removed write was completely shadowed by a subsequent write.\r\n                removedWriteWasVisible = false;\r\n            }\r\n            else if (pathContains(writeToRemove.path, currentWrite.path)) {\r\n                // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                removedWriteOverlapsWithOtherWrites = true;\r\n            }\r\n        }\r\n        i--;\r\n    }\r\n    if (!removedWriteWasVisible) {\r\n        return false;\r\n    }\r\n    else if (removedWriteOverlapsWithOtherWrites) {\r\n        // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n        writeTreeResetTree_(writeTree);\r\n        return true;\r\n    }\r\n    else {\r\n        // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n        if (writeToRemove.snap) {\r\n            writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, writeToRemove.path);\r\n        }\r\n        else {\r\n            var children = writeToRemove.children;\r\n            each(children, function (childName) {\r\n                writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, pathChild(writeToRemove.path, childName));\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n}\r\nfunction writeTreeRecordContainsPath_(writeRecord, path) {\r\n    if (writeRecord.snap) {\r\n        return pathContains(writeRecord.path, path);\r\n    }\r\n    else {\r\n        for (var childName in writeRecord.children) {\r\n            if (writeRecord.children.hasOwnProperty(childName) &&\r\n                pathContains(pathChild(writeRecord.path, childName), path)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n */\r\nfunction writeTreeResetTree_(writeTree) {\r\n    writeTree.visibleWrites = writeTreeLayerTree_(writeTree.allWrites, writeTreeDefaultFilter_, newEmptyPath());\r\n    if (writeTree.allWrites.length > 0) {\r\n        writeTree.lastWriteId =\r\n            writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\r\n    }\r\n    else {\r\n        writeTree.lastWriteId = -1;\r\n    }\r\n}\r\n/**\r\n * The default filter used when constructing the tree. Keep everything that's visible.\r\n */\r\nfunction writeTreeDefaultFilter_(write) {\r\n    return write.visible;\r\n}\r\n/**\r\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n * event data at that path.\r\n */\r\nfunction writeTreeLayerTree_(writes, filter, treeRoot) {\r\n    var compoundWrite = CompoundWrite.empty();\r\n    for (var i = 0; i < writes.length; ++i) {\r\n        var write = writes[i];\r\n        // Theory, a later set will either:\r\n        // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n        // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n        if (filter(write)) {\r\n            var writePath = write.path;\r\n            var relativePath = void 0;\r\n            if (write.snap) {\r\n                if (pathContains(treeRoot, writePath)) {\r\n                    relativePath = newRelativePath(treeRoot, writePath);\r\n                    compoundWrite = compoundWriteAddWrite(compoundWrite, relativePath, write.snap);\r\n                }\r\n                else if (pathContains(writePath, treeRoot)) {\r\n                    relativePath = newRelativePath(writePath, treeRoot);\r\n                    compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), write.snap.getChild(relativePath));\r\n                }\r\n                else ;\r\n            }\r\n            else if (write.children) {\r\n                if (pathContains(treeRoot, writePath)) {\r\n                    relativePath = newRelativePath(treeRoot, writePath);\r\n                    compoundWrite = compoundWriteAddWrites(compoundWrite, relativePath, write.children);\r\n                }\r\n                else if (pathContains(writePath, treeRoot)) {\r\n                    relativePath = newRelativePath(writePath, treeRoot);\r\n                    if (pathIsEmpty(relativePath)) {\r\n                        compoundWrite = compoundWriteAddWrites(compoundWrite, newEmptyPath(), write.children);\r\n                    }\r\n                    else {\r\n                        var child = safeGet(write.children, pathGetFront(relativePath));\r\n                        if (child) {\r\n                            // There exists a child in this node that matches the root path\r\n                            var deepNode = child.getChild(pathPopFront(relativePath));\r\n                            compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), deepNode);\r\n                        }\r\n                    }\r\n                }\r\n                else ;\r\n            }\r\n            else {\r\n                throw assertionError('WriteRecord should have .snap or .children');\r\n            }\r\n        }\r\n    }\r\n    return compoundWrite;\r\n}\r\n/**\r\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n * writes), attempt to calculate a complete snapshot for the given path\r\n *\r\n * @param writeIdsToExclude - An optional set to be excluded\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\r\nfunction writeTreeCalcCompleteEventCache(writeTree, treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n    if (!writeIdsToExclude && !includeHiddenWrites) {\r\n        var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            var subMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n            if (compoundWriteIsEmpty(subMerge)) {\r\n                return completeServerCache;\r\n            }\r\n            else if (completeServerCache == null &&\r\n                !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())) {\r\n                // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                return null;\r\n            }\r\n            else {\r\n                var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                return compoundWriteApply(subMerge, layeredCache);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\r\n            return completeServerCache;\r\n        }\r\n        else {\r\n            // If the server cache is null, and we don't have a complete cache, we need to return null\r\n            if (!includeHiddenWrites &&\r\n                completeServerCache == null &&\r\n                !compoundWriteHasCompleteWrite(merge, newEmptyPath())) {\r\n                return null;\r\n            }\r\n            else {\r\n                var filter = function (write) {\r\n                    return ((write.visible || includeHiddenWrites) &&\r\n                        (!writeIdsToExclude ||\r\n                            !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                        (pathContains(write.path, treePath) ||\r\n                            pathContains(treePath, write.path)));\r\n                };\r\n                var mergeAtPath = writeTreeLayerTree_(writeTree.allWrites, filter, treePath);\r\n                var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                return compoundWriteApply(mergeAtPath, layeredCache);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n * Used when creating new views, to pre-fill their complete event children snapshot.\r\n */\r\nfunction writeTreeCalcCompleteEventChildren(writeTree, treePath, completeServerChildren) {\r\n    var completeChildren = ChildrenNode.EMPTY_NODE;\r\n    var topLevelSet = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\r\n    if (topLevelSet) {\r\n        if (!topLevelSet.isLeafNode()) {\r\n            // we're shadowing everything. Return the children.\r\n            topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n            });\r\n        }\r\n        return completeChildren;\r\n    }\r\n    else if (completeServerChildren) {\r\n        // Layer any children we have on top of this\r\n        // We know we don't have a top-level set, so just enumerate existing children\r\n        var merge_1 = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var node = compoundWriteApply(compoundWriteChildCompoundWrite(merge_1, new Path(childName)), childNode);\r\n            completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n        });\r\n        // Add any complete children we have from the set\r\n        compoundWriteGetCompleteChildren(merge_1).forEach(function (namedNode) {\r\n            completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n        });\r\n        return completeChildren;\r\n    }\r\n    else {\r\n        // We don't have anything to layer on top of. Layer on any children we have\r\n        // Note that we can return an empty snap if we have a defined delete\r\n        var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        compoundWriteGetCompleteChildren(merge).forEach(function (namedNode) {\r\n            completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n        });\r\n        return completeChildren;\r\n    }\r\n}\r\n/**\r\n * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n * applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist\r\n */\r\nfunction writeTreeCalcEventCacheAfterServerOverwrite(writeTree, treePath, childPath, existingEventSnap, existingServerSnap) {\r\n    assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n    var path = pathChild(treePath, childPath);\r\n    if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\r\n        // At this point we can probably guarantee that we're in case 2, meaning no events\r\n        // May need to check visibility while doing the findRootMostValueAndPath call\r\n        return null;\r\n    }\r\n    else {\r\n        // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n        var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\r\n        if (compoundWriteIsEmpty(childMerge)) {\r\n            // We're not shadowing at all. Case 1\r\n            return existingServerSnap.getChild(childPath);\r\n        }\r\n        else {\r\n            // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n            // However this is tricky to find out, since user updates don't necessary change the server\r\n            // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n            // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n            // only check if the updates change the serverNode.\r\n            // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n            return compoundWriteApply(childMerge, existingServerSnap.getChild(childPath));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\r\nfunction writeTreeCalcCompleteChild(writeTree, treePath, childKey, existingServerSnap) {\r\n    var path = pathChild(treePath, childKey);\r\n    var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\r\n    if (shadowingNode != null) {\r\n        return shadowingNode;\r\n    }\r\n    else {\r\n        if (existingServerSnap.isCompleteForChild(childKey)) {\r\n            var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\r\n            return compoundWriteApply(childMerge, existingServerSnap.getNode().getImmediateChild(childKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n */\r\nfunction writeTreeShadowingWrite(writeTree, path) {\r\n    return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\r\n}\r\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window.\r\n */\r\nfunction writeTreeCalcIndexedSlice(writeTree, treePath, completeServerData, startPost, count, reverse, index) {\r\n    var toIterate;\r\n    var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n    var shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\r\n    if (shadowingNode != null) {\r\n        toIterate = shadowingNode;\r\n    }\r\n    else if (completeServerData != null) {\r\n        toIterate = compoundWriteApply(merge, completeServerData);\r\n    }\r\n    else {\r\n        // no children to iterate on\r\n        return [];\r\n    }\r\n    toIterate = toIterate.withIndex(index);\r\n    if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n        var nodes = [];\r\n        var cmp = index.getCompare();\r\n        var iter = reverse\r\n            ? toIterate.getReverseIteratorFrom(startPost, index)\r\n            : toIterate.getIteratorFrom(startPost, index);\r\n        var next = iter.getNext();\r\n        while (next && nodes.length < count) {\r\n            if (cmp(next, startPost) !== 0) {\r\n                nodes.push(next);\r\n            }\r\n            next = iter.getNext();\r\n        }\r\n        return nodes;\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n}\r\nfunction newWriteTree() {\r\n    return {\r\n        visibleWrites: CompoundWrite.empty(),\r\n        allWrites: [],\r\n        lastWriteId: -1\r\n    };\r\n}\r\n/**\r\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n * can lead to a more expensive calculation.\r\n *\r\n * @param writeIdsToExclude - Optional writes to exclude.\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\r\nfunction writeTreeRefCalcCompleteEventCache(writeTreeRef, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n    return writeTreeCalcCompleteEventCache(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n}\r\n/**\r\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n * mix of the given server data and write data.\r\n *\r\n */\r\nfunction writeTreeRefCalcCompleteEventChildren(writeTreeRef, completeServerChildren) {\r\n    return writeTreeCalcCompleteEventChildren(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerChildren);\r\n}\r\n/**\r\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n * if anything, needs to be applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events should be raised\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n *\r\n *\r\n */\r\nfunction writeTreeRefCalcEventCacheAfterServerOverwrite(writeTreeRef, path, existingEventSnap, existingServerSnap) {\r\n    return writeTreeCalcEventCacheAfterServerOverwrite(writeTreeRef.writeTree, writeTreeRef.treePath, path, existingEventSnap, existingServerSnap);\r\n}\r\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n *\r\n */\r\nfunction writeTreeRefShadowingWrite(writeTreeRef, path) {\r\n    return writeTreeShadowingWrite(writeTreeRef.writeTree, pathChild(writeTreeRef.treePath, path));\r\n}\r\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window\r\n */\r\nfunction writeTreeRefCalcIndexedSlice(writeTreeRef, completeServerData, startPost, count, reverse, index) {\r\n    return writeTreeCalcIndexedSlice(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerData, startPost, count, reverse, index);\r\n}\r\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\r\nfunction writeTreeRefCalcCompleteChild(writeTreeRef, childKey, existingServerCache) {\r\n    return writeTreeCalcCompleteChild(writeTreeRef.writeTree, writeTreeRef.treePath, childKey, existingServerCache);\r\n}\r\n/**\r\n * Return a WriteTreeRef for a child.\r\n */\r\nfunction writeTreeRefChild(writeTreeRef, childName) {\r\n    return newWriteTreeRef(pathChild(writeTreeRef.treePath, childName), writeTreeRef.writeTree);\r\n}\r\nfunction newWriteTreeRef(path, writeTree) {\r\n    return {\r\n        treePath: path,\r\n        writeTree: writeTree\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap = new Map();\r\n    }\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey = change.childName;\r\n        assert(type === \"child_added\" /* CHILD_ADDED */ ||\r\n            type === \"child_changed\" /* CHILD_CHANGED */ ||\r\n            type === \"child_removed\" /* CHILD_REMOVED */, 'Only child changes supported for tracking');\r\n        assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = this.changeMap.get(childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type === \"child_added\" /* CHILD_ADDED */ &&\r\n                oldType === \"child_removed\" /* CHILD_REMOVED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.snapshotNode));\r\n            }\r\n            else if (type === \"child_removed\" /* CHILD_REMOVED */ &&\r\n                oldType === \"child_added\" /* CHILD_ADDED */) {\r\n                this.changeMap.delete(childKey);\r\n            }\r\n            else if (type === \"child_removed\" /* CHILD_REMOVED */ &&\r\n                oldType === \"child_changed\" /* CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildRemoved(childKey, oldChange.oldSnap));\r\n            }\r\n            else if (type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n                oldType === \"child_added\" /* CHILD_ADDED */) {\r\n                this.changeMap.set(childKey, changeChildAdded(childKey, change.snapshotNode));\r\n            }\r\n            else if (type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n                oldType === \"child_changed\" /* CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap));\r\n            }\r\n            else {\r\n                throw assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap.set(childKey, change);\r\n        }\r\n    };\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return Array.from(this.changeMap.values());\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.eventCache;\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.serverCache;\r\n            return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\r\n        }\r\n    };\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : viewCacheGetCompleteServerSnap(this.viewCache_);\r\n        var nodes = writeTreeRefCalcIndexedSlice(this.writes_, completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newViewProcessor(filter) {\r\n    return { filter: filter };\r\n}\r\nfunction viewProcessorAssertIndexed(viewProcessor, viewCache) {\r\n    assert(viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Event snap not indexed');\r\n    assert(viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Server snap not indexed');\r\n}\r\nfunction viewProcessorApplyOperation(viewProcessor, oldViewCache, operation, writesCache, completeCache) {\r\n    var accumulator = new ChildChangeAccumulator();\r\n    var newViewCache, filterServerNode;\r\n    if (operation.type === OperationType.OVERWRITE) {\r\n        var overwrite = operation;\r\n        if (overwrite.source.fromUser) {\r\n            newViewCache = viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            assert(overwrite.source.fromServer, 'Unknown source.');\r\n            // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n            // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n            // again\r\n            filterServerNode =\r\n                overwrite.source.tagged ||\r\n                    (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\r\n            newViewCache = viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.MERGE) {\r\n        var merge = operation;\r\n        if (merge.source.fromUser) {\r\n            newViewCache = viewProcessorApplyUserMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            assert(merge.source.fromServer, 'Unknown source.');\r\n            // We filter the node if it's a tagged update or the node has been previously filtered\r\n            filterServerNode =\r\n                merge.source.tagged || oldViewCache.serverCache.isFiltered();\r\n            newViewCache = viewProcessorApplyServerMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n        var ackUserWrite = operation;\r\n        if (!ackUserWrite.revert) {\r\n            newViewCache = viewProcessorAckUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            newViewCache = viewProcessorRevertUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n        newViewCache = viewProcessorListenComplete(viewProcessor, oldViewCache, operation.path, writesCache, accumulator);\r\n    }\r\n    else {\r\n        throw assertionError('Unknown operation type: ' + operation.type);\r\n    }\r\n    var changes = accumulator.getChanges();\r\n    viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\r\n    return { viewCache: newViewCache, changes: changes };\r\n}\r\nfunction viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, accumulator) {\r\n    var eventSnap = newViewCache.eventCache;\r\n    if (eventSnap.isFullyInitialized()) {\r\n        var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n        var oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\r\n        if (accumulator.length > 0 ||\r\n            !oldViewCache.eventCache.isFullyInitialized() ||\r\n            (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\r\n            !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\r\n            accumulator.push(changeValue(viewCacheGetCompleteEventSnap(newViewCache)));\r\n        }\r\n    }\r\n}\r\nfunction viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, viewCache, changePath, writesCache, source, accumulator) {\r\n    var oldEventSnap = viewCache.eventCache;\r\n    if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\r\n        // we have a shadowing write, ignore changes\r\n        return viewCache;\r\n    }\r\n    else {\r\n        var newEventCache = void 0, serverNode = void 0;\r\n        if (pathIsEmpty(changePath)) {\r\n            // TODO: figure out how this plays with \"sliding ack windows\"\r\n            assert(viewCache.serverCache.isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n            if (viewCache.serverCache.isFiltered()) {\r\n                // We need to special case this, because we need to only apply writes to complete children, or\r\n                // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                // writes cannot be guaranteed to be complete\r\n                var serverCache = viewCacheGetCompleteServerSnap(viewCache);\r\n                var completeChildren = serverCache instanceof ChildrenNode\r\n                    ? serverCache\r\n                    : ChildrenNode.EMPTY_NODE;\r\n                var completeEventChildren = writeTreeRefCalcCompleteEventChildren(writesCache, completeChildren);\r\n                newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeEventChildren, accumulator);\r\n            }\r\n            else {\r\n                var completeNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n                newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeNode, accumulator);\r\n            }\r\n        }\r\n        else {\r\n            var childKey = pathGetFront(changePath);\r\n            if (childKey === '.priority') {\r\n                assert(pathGetLength(changePath) === 1, \"Can't have a priority with additional path components\");\r\n                var oldEventNode = oldEventSnap.getNode();\r\n                serverNode = viewCache.serverCache.getNode();\r\n                // we might have overwrites for this priority\r\n                var updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventNode, serverNode);\r\n                if (updatedPriority != null) {\r\n                    newEventCache = viewProcessor.filter.updatePriority(oldEventNode, updatedPriority);\r\n                }\r\n                else {\r\n                    // priority didn't change, keep old node\r\n                    newEventCache = oldEventSnap.getNode();\r\n                }\r\n            }\r\n            else {\r\n                var childChangePath = pathPopFront(changePath);\r\n                // update child\r\n                var newEventChild = void 0;\r\n                if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                    serverNode = viewCache.serverCache.getNode();\r\n                    var eventChildUpdate = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventSnap.getNode(), serverNode);\r\n                    if (eventChildUpdate != null) {\r\n                        newEventChild = oldEventSnap\r\n                            .getNode()\r\n                            .getImmediateChild(childKey)\r\n                            .updateChild(childChangePath, eventChildUpdate);\r\n                    }\r\n                    else {\r\n                        // Nothing changed, just keep the old child\r\n                        newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                    }\r\n                }\r\n                else {\r\n                    newEventChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\r\n                }\r\n                if (newEventChild != null) {\r\n                    newEventCache = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                }\r\n                else {\r\n                    // no complete child available or no change\r\n                    newEventCache = oldEventSnap.getNode();\r\n                }\r\n            }\r\n        }\r\n        return viewCacheUpdateEventSnap(viewCache, newEventCache, oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath), viewProcessor.filter.filtersNodes());\r\n    }\r\n}\r\nfunction viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n    var oldServerSnap = oldViewCache.serverCache;\r\n    var newServerCache;\r\n    var serverFilter = filterServerNode\r\n        ? viewProcessor.filter\r\n        : viewProcessor.filter.getIndexedFilter();\r\n    if (pathIsEmpty(changePath)) {\r\n        newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n    }\r\n    else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n        // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n        var newServerNode = oldServerSnap\r\n            .getNode()\r\n            .updateChild(changePath, changedSnap);\r\n        newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n    }\r\n    else {\r\n        var childKey = pathGetFront(changePath);\r\n        if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n            pathGetLength(changePath) > 1) {\r\n            // We don't update incomplete nodes with updates intended for other listeners\r\n            return oldViewCache;\r\n        }\r\n        var childChangePath = pathPopFront(changePath);\r\n        var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n        var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n        if (childKey === '.priority') {\r\n            newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n        }\r\n        else {\r\n            newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n        }\r\n    }\r\n    var newViewCache = viewCacheUpdateServerSnap(oldViewCache, newServerCache, oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath), serverFilter.filtersNodes());\r\n    var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n    return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, changePath, writesCache, source, accumulator);\r\n}\r\nfunction viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n    var oldEventSnap = oldViewCache.eventCache;\r\n    var newViewCache, newEventCache;\r\n    var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n    if (pathIsEmpty(changePath)) {\r\n        newEventCache = viewProcessor.filter.updateFullNode(oldViewCache.eventCache.getNode(), changedSnap, accumulator);\r\n        newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, true, viewProcessor.filter.filtersNodes());\r\n    }\r\n    else {\r\n        var childKey = pathGetFront(changePath);\r\n        if (childKey === '.priority') {\r\n            newEventCache = viewProcessor.filter.updatePriority(oldViewCache.eventCache.getNode(), changedSnap);\r\n            newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n        }\r\n        else {\r\n            var childChangePath = pathPopFront(changePath);\r\n            var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n            var newChild = void 0;\r\n            if (pathIsEmpty(childChangePath)) {\r\n                // Child overwrite, we can replace the child\r\n                newChild = changedSnap;\r\n            }\r\n            else {\r\n                var childNode = source.getCompleteChild(childKey);\r\n                if (childNode != null) {\r\n                    if (pathGetBack(childChangePath) === '.priority' &&\r\n                        childNode.getChild(pathParent(childChangePath)).isEmpty()) {\r\n                        // This is a priority update on an empty node. If this node exists on the server, the\r\n                        // server will send down the priority in the update, so ignore for now\r\n                        newChild = childNode;\r\n                    }\r\n                    else {\r\n                        newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                    }\r\n                }\r\n                else {\r\n                    // There is no complete child node available\r\n                    newChild = ChildrenNode.EMPTY_NODE;\r\n                }\r\n            }\r\n            if (!oldChild.equals(newChild)) {\r\n                var newEventSnap = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventSnap, oldEventSnap.isFullyInitialized(), viewProcessor.filter.filtersNodes());\r\n            }\r\n            else {\r\n                newViewCache = oldViewCache;\r\n            }\r\n        }\r\n    }\r\n    return newViewCache;\r\n}\r\nfunction viewProcessorCacheHasChild(viewCache, childKey) {\r\n    return viewCache.eventCache.isCompleteForChild(childKey);\r\n}\r\nfunction viewProcessorApplyUserMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n    // window leaving room for new items.  It's important we process these changes first, so we\r\n    // iterate the changes twice, first processing any that affect items currently in view.\r\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n    // not the other.\r\n    var curViewCache = viewCache;\r\n    changedChildren.foreach(function (relativePath, childNode) {\r\n        var writePath = pathChild(path, relativePath);\r\n        if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\r\n            curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n        }\r\n    });\r\n    changedChildren.foreach(function (relativePath, childNode) {\r\n        var writePath = pathChild(path, relativePath);\r\n        if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\r\n            curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n        }\r\n    });\r\n    return curViewCache;\r\n}\r\nfunction viewProcessorApplyMerge(viewProcessor, node, merge) {\r\n    merge.foreach(function (relativePath, childNode) {\r\n        node = node.updateChild(relativePath, childNode);\r\n    });\r\n    return node;\r\n}\r\nfunction viewProcessorApplyServerMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n    // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n    // wait for the complete data update coming soon.\r\n    if (viewCache.serverCache.getNode().isEmpty() &&\r\n        !viewCache.serverCache.isFullyInitialized()) {\r\n        return viewCache;\r\n    }\r\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n    // window leaving room for new items.  It's important we process these changes first, so we\r\n    // iterate the changes twice, first processing any that affect items currently in view.\r\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n    // not the other.\r\n    var curViewCache = viewCache;\r\n    var viewMergeTree;\r\n    if (pathIsEmpty(path)) {\r\n        viewMergeTree = changedChildren;\r\n    }\r\n    else {\r\n        viewMergeTree = new ImmutableTree(null).setTree(path, changedChildren);\r\n    }\r\n    var serverNode = viewCache.serverCache.getNode();\r\n    viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n        if (serverNode.hasChild(childKey)) {\r\n            var serverChild = viewCache.serverCache\r\n                .getNode()\r\n                .getImmediateChild(childKey);\r\n            var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childTree);\r\n            curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n        }\r\n    });\r\n    viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n        var isUnknownDeepMerge = !viewCache.serverCache.isCompleteForChild(childKey) &&\r\n            childMergeTree.value === undefined;\r\n        if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n            var serverChild = viewCache.serverCache\r\n                .getNode()\r\n                .getImmediateChild(childKey);\r\n            var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childMergeTree);\r\n            curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n        }\r\n    });\r\n    return curViewCache;\r\n}\r\nfunction viewProcessorAckUserWrite(viewProcessor, viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n    if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\r\n        return viewCache;\r\n    }\r\n    // Only filter server node if it is currently filtered\r\n    var filterServerNode = viewCache.serverCache.isFiltered();\r\n    // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n    // now that it won't be shadowed.\r\n    var serverCache = viewCache.serverCache;\r\n    if (affectedTree.value != null) {\r\n        // This is an overwrite.\r\n        if ((pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\r\n            serverCache.isCompleteForPath(ackPath)) {\r\n            return viewProcessorApplyServerOverwrite(viewProcessor, viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n        else if (pathIsEmpty(ackPath)) {\r\n            // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n            // should just re-apply whatever we have in our cache as a merge.\r\n            var changedChildren_1 = new ImmutableTree(null);\r\n            serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n            });\r\n            return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n        else {\r\n            return viewCache;\r\n        }\r\n    }\r\n    else {\r\n        // This is a merge.\r\n        var changedChildren_2 = new ImmutableTree(null);\r\n        affectedTree.foreach(function (mergePath, value) {\r\n            var serverCachePath = pathChild(ackPath, mergePath);\r\n            if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n            }\r\n        });\r\n        return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n    }\r\n}\r\nfunction viewProcessorListenComplete(viewProcessor, viewCache, path, writesCache, accumulator) {\r\n    var oldServerNode = viewCache.serverCache;\r\n    var newViewCache = viewCacheUpdateServerSnap(viewCache, oldServerNode.getNode(), oldServerNode.isFullyInitialized() || pathIsEmpty(path), oldServerNode.isFiltered());\r\n    return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n}\r\nfunction viewProcessorRevertUserWrite(viewProcessor, viewCache, path, writesCache, completeServerCache, accumulator) {\r\n    var complete;\r\n    if (writeTreeRefShadowingWrite(writesCache, path) != null) {\r\n        return viewCache;\r\n    }\r\n    else {\r\n        var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n        var oldEventCache = viewCache.eventCache.getNode();\r\n        var newEventCache = void 0;\r\n        if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\r\n            var newNode = void 0;\r\n            if (viewCache.serverCache.isFullyInitialized()) {\r\n                newNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n            }\r\n            else {\r\n                var serverChildren = viewCache.serverCache.getNode();\r\n                assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                newNode = writeTreeRefCalcCompleteEventChildren(writesCache, serverChildren);\r\n            }\r\n            newNode = newNode;\r\n            newEventCache = viewProcessor.filter.updateFullNode(oldEventCache, newNode, accumulator);\r\n        }\r\n        else {\r\n            var childKey = pathGetFront(path);\r\n            var newChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\r\n            if (newChild == null &&\r\n                viewCache.serverCache.isCompleteForChild(childKey)) {\r\n                newChild = oldEventCache.getImmediateChild(childKey);\r\n            }\r\n            if (newChild != null) {\r\n                newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, newChild, pathPopFront(path), source, accumulator);\r\n            }\r\n            else if (viewCache.eventCache.getNode().hasChild(childKey)) {\r\n                // No complete child available, delete the existing one, if any\r\n                newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, pathPopFront(path), source, accumulator);\r\n            }\r\n            else {\r\n                newEventCache = oldEventCache;\r\n            }\r\n            if (newEventCache.isEmpty() &&\r\n                viewCache.serverCache.isFullyInitialized()) {\r\n                // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                complete = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n                if (complete.isLeafNode()) {\r\n                    newEventCache = viewProcessor.filter.updateFullNode(newEventCache, complete, accumulator);\r\n                }\r\n            }\r\n        }\r\n        complete =\r\n            viewCache.serverCache.isFullyInitialized() ||\r\n                writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\r\n        return viewCacheUpdateEventSnap(viewCache, newEventCache, complete, viewProcessor.filter.filtersNodes());\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n */\r\nvar View = /** @class */ (function () {\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_._queryParams;\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = queryParamsGetNodeFilter(params);\r\n        this.processor_ = newViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.serverCache;\r\n        var initialEventCache = initialViewCache.eventCache;\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        this.viewCache_ = newViewCache(newEventCache, newServerCache);\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    Object.defineProperty(View.prototype, \"query\", {\r\n        get: function () {\r\n            return this.query_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return View;\r\n}());\r\nfunction viewGetServerCache(view) {\r\n    return view.viewCache_.serverCache.getNode();\r\n}\r\nfunction viewGetCompleteNode(view) {\r\n    return viewCacheGetCompleteEventSnap(view.viewCache_);\r\n}\r\nfunction viewGetCompleteServerCache(view, path) {\r\n    var cache = viewCacheGetCompleteServerSnap(view.viewCache_);\r\n    if (cache) {\r\n        // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n        // we need to see if it contains the child we're interested in.\r\n        if (view.query._queryParams.loadsAllData() ||\r\n            (!pathIsEmpty(path) &&\r\n                !cache.getImmediateChild(pathGetFront(path)).isEmpty())) {\r\n            return cache.getChild(path);\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction viewIsEmpty(view) {\r\n    return view.eventRegistrations_.length === 0;\r\n}\r\nfunction viewAddEventRegistration(view, eventRegistration) {\r\n    view.eventRegistrations_.push(eventRegistration);\r\n}\r\n/**\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\r\nfunction viewRemoveEventRegistration(view, eventRegistration, cancelError) {\r\n    var cancelEvents = [];\r\n    if (cancelError) {\r\n        assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n        var path_1 = view.query._path;\r\n        view.eventRegistrations_.forEach(function (registration) {\r\n            var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n            if (maybeEvent) {\r\n                cancelEvents.push(maybeEvent);\r\n            }\r\n        });\r\n    }\r\n    if (eventRegistration) {\r\n        var remaining = [];\r\n        for (var i = 0; i < view.eventRegistrations_.length; ++i) {\r\n            var existing = view.eventRegistrations_[i];\r\n            if (!existing.matches(eventRegistration)) {\r\n                remaining.push(existing);\r\n            }\r\n            else if (eventRegistration.hasAnyCallback()) {\r\n                // We're removing just this one\r\n                remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\r\n                break;\r\n            }\r\n        }\r\n        view.eventRegistrations_ = remaining;\r\n    }\r\n    else {\r\n        view.eventRegistrations_ = [];\r\n    }\r\n    return cancelEvents;\r\n}\r\n/**\r\n * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n */\r\nfunction viewApplyOperation(view, operation, writesCache, completeServerCache) {\r\n    if (operation.type === OperationType.MERGE &&\r\n        operation.source.queryId !== null) {\r\n        assert(viewCacheGetCompleteServerSnap(view.viewCache_), 'We should always have a full cache before handling merges');\r\n        assert(viewCacheGetCompleteEventSnap(view.viewCache_), 'Missing event cache, even though we have a server cache');\r\n    }\r\n    var oldViewCache = view.viewCache_;\r\n    var result = viewProcessorApplyOperation(view.processor_, oldViewCache, operation, writesCache, completeServerCache);\r\n    viewProcessorAssertIndexed(view.processor_, result.viewCache);\r\n    assert(result.viewCache.serverCache.isFullyInitialized() ||\r\n        !oldViewCache.serverCache.isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n    view.viewCache_ = result.viewCache;\r\n    return viewGenerateEventsForChanges_(view, result.changes, result.viewCache.eventCache.getNode(), null);\r\n}\r\nfunction viewGetInitialEvents(view, registration) {\r\n    var eventSnap = view.viewCache_.eventCache;\r\n    var initialChanges = [];\r\n    if (!eventSnap.getNode().isLeafNode()) {\r\n        var eventNode = eventSnap.getNode();\r\n        eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            initialChanges.push(changeChildAdded(key, childNode));\r\n        });\r\n    }\r\n    if (eventSnap.isFullyInitialized()) {\r\n        initialChanges.push(changeValue(eventSnap.getNode()));\r\n    }\r\n    return viewGenerateEventsForChanges_(view, initialChanges, eventSnap.getNode(), registration);\r\n}\r\nfunction viewGenerateEventsForChanges_(view, changes, eventCache, eventRegistration) {\r\n    var registrations = eventRegistration\r\n        ? [eventRegistration]\r\n        : view.eventRegistrations_;\r\n    return eventGeneratorGenerateEventsForChanges(view.eventGenerator_, changes, eventCache, registrations);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */\r\n        this.views = new Map();\r\n    }\r\n    return SyncPoint;\r\n}());\r\nfunction syncPointSetReferenceConstructor(val) {\r\n    assert(!referenceConstructor$1, '__referenceConstructor has already been defined');\r\n    referenceConstructor$1 = val;\r\n}\r\nfunction syncPointGetReferenceConstructor() {\r\n    assert(referenceConstructor$1, 'Reference.ts has not been loaded');\r\n    return referenceConstructor$1;\r\n}\r\nfunction syncPointIsEmpty(syncPoint) {\r\n    return syncPoint.views.size === 0;\r\n}\r\nfunction syncPointApplyOperation(syncPoint, operation, writesCache, optCompleteServerCache) {\r\n    var e_1, _a;\r\n    var queryId = operation.source.queryId;\r\n    if (queryId !== null) {\r\n        var view = syncPoint.views.get(queryId);\r\n        assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n        return viewApplyOperation(view, operation, writesCache, optCompleteServerCache);\r\n    }\r\n    else {\r\n        var events = [];\r\n        try {\r\n            for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                events = events.concat(viewApplyOperation(view, operation, writesCache, optCompleteServerCache));\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        return events;\r\n    }\r\n}\r\n/**\r\n * Get a view for the specified query.\r\n *\r\n * @param query - The query to return a view for\r\n * @param writesCache\r\n * @param serverCache\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\r\nfunction syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete) {\r\n    var queryId = query._queryIdentifier;\r\n    var view = syncPoint.views.get(queryId);\r\n    if (!view) {\r\n        // TODO: make writesCache take flag for complete server node\r\n        var eventCache = writeTreeRefCalcCompleteEventCache(writesCache, serverCacheComplete ? serverCache : null);\r\n        var eventCacheComplete = false;\r\n        if (eventCache) {\r\n            eventCacheComplete = true;\r\n        }\r\n        else if (serverCache instanceof ChildrenNode) {\r\n            eventCache = writeTreeRefCalcCompleteEventChildren(writesCache, serverCache);\r\n            eventCacheComplete = false;\r\n        }\r\n        else {\r\n            eventCache = ChildrenNode.EMPTY_NODE;\r\n            eventCacheComplete = false;\r\n        }\r\n        var viewCache = newViewCache(new CacheNode(eventCache, eventCacheComplete, false), new CacheNode(serverCache, serverCacheComplete, false));\r\n        return new View(query, viewCache);\r\n    }\r\n    return view;\r\n}\r\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @param query\r\n * @param eventRegistration\r\n * @param writesCache\r\n * @param serverCache - Complete server cache, if we have it.\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\r\nfunction syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n    var view = syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete);\r\n    if (!syncPoint.views.has(query._queryIdentifier)) {\r\n        syncPoint.views.set(query._queryIdentifier, view);\r\n    }\r\n    // This is guaranteed to exist now, we just created anything that was missing\r\n    viewAddEventRegistration(view, eventRegistration);\r\n    return viewGetInitialEvents(view, eventRegistration);\r\n}\r\n/**\r\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n *\r\n * If query is the default query, we'll check all views for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n *\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns removed queries and any cancel events\r\n */\r\nfunction syncPointRemoveEventRegistration(syncPoint, query, eventRegistration, cancelError) {\r\n    var e_2, _a;\r\n    var queryId = query._queryIdentifier;\r\n    var removed = [];\r\n    var cancelEvents = [];\r\n    var hadCompleteView = syncPointHasCompleteView(syncPoint);\r\n    if (queryId === 'default') {\r\n        try {\r\n            // When you do ref.off(...), we search all views for the registration to remove.\r\n            for (var _b = __values(syncPoint.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var _d = __read(_c.value, 2), viewQueryId = _d[0], view = _d[1];\r\n                cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\r\n                if (viewIsEmpty(view)) {\r\n                    syncPoint.views.delete(viewQueryId);\r\n                    // We'll deal with complete views later.\r\n                    if (!view.query._queryParams.loadsAllData()) {\r\n                        removed.push(view.query);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n    }\r\n    else {\r\n        // remove the callback from the specific view.\r\n        var view = syncPoint.views.get(queryId);\r\n        if (view) {\r\n            cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\r\n            if (viewIsEmpty(view)) {\r\n                syncPoint.views.delete(queryId);\r\n                // We'll deal with complete views later.\r\n                if (!view.query._queryParams.loadsAllData()) {\r\n                    removed.push(view.query);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\r\n        // We removed our last complete view.\r\n        removed.push(new (syncPointGetReferenceConstructor())(query._repo, query._path));\r\n    }\r\n    return { removed: removed, events: cancelEvents };\r\n}\r\nfunction syncPointGetQueryViews(syncPoint) {\r\n    var e_3, _a;\r\n    var result = [];\r\n    try {\r\n        for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var view = _c.value;\r\n            if (!view.query._queryParams.loadsAllData()) {\r\n                result.push(view);\r\n            }\r\n        }\r\n    }\r\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_3) throw e_3.error; }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * @param path - The path to the desired complete snapshot\r\n * @returns A complete cache, if it exists\r\n */\r\nfunction syncPointGetCompleteServerCache(syncPoint, path) {\r\n    var e_4, _a;\r\n    var serverCache = null;\r\n    try {\r\n        for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var view = _c.value;\r\n            serverCache = serverCache || viewGetCompleteServerCache(view, path);\r\n        }\r\n    }\r\n    catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_4) throw e_4.error; }\r\n    }\r\n    return serverCache;\r\n}\r\nfunction syncPointViewForQuery(syncPoint, query) {\r\n    var params = query._queryParams;\r\n    if (params.loadsAllData()) {\r\n        return syncPointGetCompleteView(syncPoint);\r\n    }\r\n    else {\r\n        var queryId = query._queryIdentifier;\r\n        return syncPoint.views.get(queryId);\r\n    }\r\n}\r\nfunction syncPointViewExistsForQuery(syncPoint, query) {\r\n    return syncPointViewForQuery(syncPoint, query) != null;\r\n}\r\nfunction syncPointHasCompleteView(syncPoint) {\r\n    return syncPointGetCompleteView(syncPoint) != null;\r\n}\r\nfunction syncPointGetCompleteView(syncPoint) {\r\n    var e_5, _a;\r\n    try {\r\n        for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var view = _c.value;\r\n            if (view.query._queryParams.loadsAllData()) {\r\n                return view;\r\n            }\r\n        }\r\n    }\r\n    catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_5) throw e_5.error; }\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar referenceConstructor;\r\nfunction syncTreeSetReferenceConstructor(val) {\r\n    assert(!referenceConstructor, '__referenceConstructor has already been defined');\r\n    referenceConstructor = val;\r\n}\r\nfunction syncTreeGetReferenceConstructor() {\r\n    assert(referenceConstructor, 'Reference.ts has not been loaded');\r\n    return referenceConstructor;\r\n}\r\n/**\r\n * Static tracker for next query tag.\r\n */\r\nvar syncTreeNextQueryTag_ = 1;\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param listenProvider_ - Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */\r\n        this.syncPointTree_ = new ImmutableTree(null);\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */\r\n        this.pendingWriteTree_ = newWriteTree();\r\n        this.tagToQueryMap = new Map();\r\n        this.queryToTagMap = new Map();\r\n    }\r\n    return SyncTree;\r\n}());\r\n/**\r\n * Apply the data changes for a user-generated set() or transaction() call.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyUserOverwrite(syncTree, path, newData, writeId, visible) {\r\n    // Record pending write.\r\n    writeTreeAddOverwrite(syncTree.pendingWriteTree_, path, newData, writeId, visible);\r\n    if (!visible) {\r\n        return [];\r\n    }\r\n    else {\r\n        return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceUser(), path, newData));\r\n    }\r\n}\r\n/**\r\n * Apply the data from a user-generated update() call\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyUserMerge(syncTree, path, changedChildren, writeId) {\r\n    // Record pending merge.\r\n    writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\r\n    var changeTree = ImmutableTree.fromObject(changedChildren);\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceUser(), path, changeTree));\r\n}\r\n/**\r\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n *\r\n * @param revert - True if the given write failed and needs to be reverted\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeAckUserWrite(syncTree, writeId, revert) {\r\n    if (revert === void 0) { revert = false; }\r\n    var write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\r\n    var needToReevaluate = writeTreeRemoveWrite(syncTree.pendingWriteTree_, writeId);\r\n    if (!needToReevaluate) {\r\n        return [];\r\n    }\r\n    else {\r\n        var affectedTree_1 = new ImmutableTree(null);\r\n        if (write.snap != null) {\r\n            // overwrite\r\n            affectedTree_1 = affectedTree_1.set(newEmptyPath(), true);\r\n        }\r\n        else {\r\n            each(write.children, function (pathString) {\r\n                affectedTree_1 = affectedTree_1.set(new Path(pathString), true);\r\n            });\r\n        }\r\n        return syncTreeApplyOperationToSyncPoints_(syncTree, new AckUserWrite(write.path, affectedTree_1, revert));\r\n    }\r\n}\r\n/**\r\n * Apply new server data for the specified path..\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyServerOverwrite(syncTree, path, newData) {\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceServer(), path, newData));\r\n}\r\n/**\r\n * Apply new server data to be merged in at the specified path.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyServerMerge(syncTree, path, changedChildren) {\r\n    var changeTree = ImmutableTree.fromObject(changedChildren);\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceServer(), path, changeTree));\r\n}\r\n/**\r\n * Apply a listen complete for a query\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyListenComplete(syncTree, path) {\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new ListenComplete(newOperationSourceServer(), path));\r\n}\r\n/**\r\n * Apply a listen complete for a tagged query\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedListenComplete(syncTree, path, tag) {\r\n    var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey) {\r\n        var r = syncTreeParseQueryKey_(queryKey);\r\n        var queryPath = r.path, queryId = r.queryId;\r\n        var relativePath = newRelativePath(queryPath, path);\r\n        var op = new ListenComplete(newOperationSourceServerTaggedQuery(queryId), relativePath);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // We've already removed the query. No big deal, ignore the update\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Remove event callback(s).\r\n *\r\n * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n *\r\n * @param eventRegistration - If null, all callbacks are removed.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\r\nfunction syncTreeRemoveEventRegistration(syncTree, query, eventRegistration, cancelError) {\r\n    // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n    var path = query._path;\r\n    var maybeSyncPoint = syncTree.syncPointTree_.get(path);\r\n    var cancelEvents = [];\r\n    // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n    // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n    // not loadsAllData().\r\n    if (maybeSyncPoint &&\r\n        (query._queryIdentifier === 'default' ||\r\n            syncPointViewExistsForQuery(maybeSyncPoint, query))) {\r\n        var removedAndEvents = syncPointRemoveEventRegistration(maybeSyncPoint, query, eventRegistration, cancelError);\r\n        if (syncPointIsEmpty(maybeSyncPoint)) {\r\n            syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\r\n        }\r\n        var removed = removedAndEvents.removed;\r\n        cancelEvents = removedAndEvents.events;\r\n        // We may have just removed one of many listeners and can short-circuit this whole process\r\n        // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n        // properly set up.\r\n        //\r\n        // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n        // queryId === 'default'\r\n        var removingDefault = -1 !==\r\n            removed.findIndex(function (query) {\r\n                return query._queryParams.loadsAllData();\r\n            });\r\n        var covered = syncTree.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n            return syncPointHasCompleteView(parentSyncPoint);\r\n        });\r\n        if (removingDefault && !covered) {\r\n            var subtree = syncTree.syncPointTree_.subtree(path);\r\n            // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n            // removal\r\n            if (!subtree.isEmpty()) {\r\n                // We need to fold over our subtree and collect the listeners to send\r\n                var newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\r\n                // Ok, we've collected all the listens we need. Set them up.\r\n                for (var i = 0; i < newViews.length; ++i) {\r\n                    var view = newViews[i], newQuery = view.query;\r\n                    var listener = syncTreeCreateListenerForView_(syncTree, view);\r\n                    syncTree.listenProvider_.startListening(syncTreeQueryForListening_(newQuery), syncTreeTagForQuery_(syncTree, newQuery), listener.hashFn, listener.onComplete);\r\n                }\r\n            }\r\n        }\r\n        // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n        // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n        // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n        if (!covered && removed.length > 0 && !cancelError) {\r\n            // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n            // default. Otherwise, we need to iterate through and cancel each individual query\r\n            if (removingDefault) {\r\n                // We don't tag default listeners\r\n                var defaultTag = null;\r\n                syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(query), defaultTag);\r\n            }\r\n            else {\r\n                removed.forEach(function (queryToRemove) {\r\n                    var tagToRemove = syncTree.queryToTagMap.get(syncTreeMakeQueryKey_(queryToRemove));\r\n                    syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToRemove), tagToRemove);\r\n                });\r\n            }\r\n        }\r\n        // Now, clear all of the tags we're tracking for the removed listens\r\n        syncTreeRemoveTags_(syncTree, removed);\r\n    }\r\n    return cancelEvents;\r\n}\r\n/**\r\n * Apply new server data for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedQueryOverwrite(syncTree, path, snap, tag) {\r\n    var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey != null) {\r\n        var r = syncTreeParseQueryKey_(queryKey);\r\n        var queryPath = r.path, queryId = r.queryId;\r\n        var relativePath = newRelativePath(queryPath, path);\r\n        var op = new Overwrite(newOperationSourceServerTaggedQuery(queryId), relativePath, snap);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // Query must have been removed already\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Apply server data to be merged in for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedQueryMerge(syncTree, path, changedChildren, tag) {\r\n    var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey) {\r\n        var r = syncTreeParseQueryKey_(queryKey);\r\n        var queryPath = r.path, queryId = r.queryId;\r\n        var relativePath = newRelativePath(queryPath, path);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        var op = new Merge(newOperationSourceServerTaggedQuery(queryId), relativePath, changeTree);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // We've already removed the query. No big deal, ignore the update\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeAddEventRegistration(syncTree, query, eventRegistration) {\r\n    var path = query._path;\r\n    var serverCache = null;\r\n    var foundAncestorDefaultView = false;\r\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n    syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n        var relativePath = newRelativePath(pathToSyncPoint, path);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(sp, relativePath);\r\n        foundAncestorDefaultView =\r\n            foundAncestorDefaultView || syncPointHasCompleteView(sp);\r\n    });\r\n    var syncPoint = syncTree.syncPointTree_.get(path);\r\n    if (!syncPoint) {\r\n        syncPoint = new SyncPoint();\r\n        syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\r\n    }\r\n    else {\r\n        foundAncestorDefaultView =\r\n            foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    var serverCacheComplete;\r\n    if (serverCache != null) {\r\n        serverCacheComplete = true;\r\n    }\r\n    else {\r\n        serverCacheComplete = false;\r\n        serverCache = ChildrenNode.EMPTY_NODE;\r\n        var subtree = syncTree.syncPointTree_.subtree(path);\r\n        subtree.foreachChild(function (childName, childSyncPoint) {\r\n            var completeCache = syncPointGetCompleteServerCache(childSyncPoint, newEmptyPath());\r\n            if (completeCache) {\r\n                serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n            }\r\n        });\r\n    }\r\n    var viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\r\n    if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\r\n        // We need to track a tag for this query\r\n        var queryKey = syncTreeMakeQueryKey_(query);\r\n        assert(!syncTree.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\r\n        var tag = syncTreeGetNextQueryTag_();\r\n        syncTree.queryToTagMap.set(queryKey, tag);\r\n        syncTree.tagToQueryMap.set(tag, queryKey);\r\n    }\r\n    var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\r\n    var events = syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n    if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n        var view = syncPointViewForQuery(syncPoint, query);\r\n        events = events.concat(syncTreeSetupListener_(syncTree, query, view));\r\n    }\r\n    return events;\r\n}\r\n/**\r\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n *\r\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n *\r\n * @param path - The path to the data we want\r\n * @param writeIdsToExclude - A specific set to be excluded\r\n */\r\nfunction syncTreeCalcCompleteEventCache(syncTree, path, writeIdsToExclude) {\r\n    var includeHiddenSets = true;\r\n    var writeTree = syncTree.pendingWriteTree_;\r\n    var serverCache = syncTree.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n        var relativePath = newRelativePath(pathSoFar, path);\r\n        var serverCache = syncPointGetCompleteServerCache(syncPoint, relativePath);\r\n        if (serverCache) {\r\n            return serverCache;\r\n        }\r\n    });\r\n    return writeTreeCalcCompleteEventCache(writeTree, path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n}\r\nfunction syncTreeGetServerValue(syncTree, query) {\r\n    var path = query._path;\r\n    var serverCache = null;\r\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n    syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n        var relativePath = newRelativePath(pathToSyncPoint, path);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(sp, relativePath);\r\n    });\r\n    var syncPoint = syncTree.syncPointTree_.get(path);\r\n    if (!syncPoint) {\r\n        syncPoint = new SyncPoint();\r\n        syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\r\n    }\r\n    else {\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    var serverCacheComplete = serverCache != null;\r\n    var serverCacheNode = serverCacheComplete\r\n        ? new CacheNode(serverCache, true, false)\r\n        : null;\r\n    var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, query._path);\r\n    var view = syncPointGetView(syncPoint, query, writesCache, serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE, serverCacheComplete);\r\n    return viewGetCompleteNode(view);\r\n}\r\n/**\r\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n *\r\n * NOTES:\r\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n *\r\n * - We call applyOperation() on each SyncPoint passing three things:\r\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n *   3. A snapshot Node with cached server data, if we have it.\r\n *\r\n * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n */\r\nfunction syncTreeApplyOperationToSyncPoints_(syncTree, operation) {\r\n    return syncTreeApplyOperationHelper_(operation, syncTree.syncPointTree_, \r\n    /*serverCache=*/ null, writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath()));\r\n}\r\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\r\nfunction syncTreeApplyOperationHelper_(operation, syncPointTree, serverCache, writesCache) {\r\n    if (pathIsEmpty(operation.path)) {\r\n        return syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n    }\r\n    else {\r\n        var syncPoint = syncPointTree.get(newEmptyPath());\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n        }\r\n        var events = [];\r\n        var childName = pathGetFront(operation.path);\r\n        var childOperation = operation.operationForChild(childName);\r\n        var childTree = syncPointTree.children.get(childName);\r\n        if (childTree && childOperation) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writeTreeRefChild(writesCache, childName);\r\n            events = events.concat(syncTreeApplyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n        }\r\n        if (syncPoint) {\r\n            events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    }\r\n}\r\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\r\nfunction syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache) {\r\n    var syncPoint = syncPointTree.get(newEmptyPath());\r\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n    if (serverCache == null && syncPoint != null) {\r\n        serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    var events = [];\r\n    syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n        var childServerCache = serverCache\r\n            ? serverCache.getImmediateChild(childName)\r\n            : null;\r\n        var childWritesCache = writeTreeRefChild(writesCache, childName);\r\n        var childOperation = operation.operationForChild(childName);\r\n        if (childOperation) {\r\n            events = events.concat(syncTreeApplyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n        }\r\n    });\r\n    if (syncPoint) {\r\n        events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\r\n    }\r\n    return events;\r\n}\r\nfunction syncTreeCreateListenerForView_(syncTree, view) {\r\n    var query = view.query;\r\n    var tag = syncTreeTagForQuery_(syncTree, query);\r\n    return {\r\n        hashFn: function () {\r\n            var cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\r\n            return cache.hash();\r\n        },\r\n        onComplete: function (status) {\r\n            if (status === 'ok') {\r\n                if (tag) {\r\n                    return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\r\n                }\r\n                else {\r\n                    return syncTreeApplyListenComplete(syncTree, query._path);\r\n                }\r\n            }\r\n            else {\r\n                // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                var error = errorForServerCode(status, query);\r\n                return syncTreeRemoveEventRegistration(syncTree, query, \r\n                /*eventRegistration*/ null, error);\r\n            }\r\n        }\r\n    };\r\n}\r\n/**\r\n * Return the tag associated with the given query.\r\n */\r\nfunction syncTreeTagForQuery_(syncTree, query) {\r\n    var queryKey = syncTreeMakeQueryKey_(query);\r\n    return syncTree.queryToTagMap.get(queryKey);\r\n}\r\n/**\r\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n */\r\nfunction syncTreeMakeQueryKey_(query) {\r\n    return query._path.toString() + '$' + query._queryIdentifier;\r\n}\r\n/**\r\n * Return the query associated with the given tag, if we have one\r\n */\r\nfunction syncTreeQueryKeyForTag_(syncTree, tag) {\r\n    return syncTree.tagToQueryMap.get(tag);\r\n}\r\n/**\r\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n */\r\nfunction syncTreeParseQueryKey_(queryKey) {\r\n    var splitIndex = queryKey.indexOf('$');\r\n    assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n    return {\r\n        queryId: queryKey.substr(splitIndex + 1),\r\n        path: new Path(queryKey.substr(0, splitIndex))\r\n    };\r\n}\r\n/**\r\n * A helper method to apply tagged operations\r\n */\r\nfunction syncTreeApplyTaggedOperation_(syncTree, queryPath, operation) {\r\n    var syncPoint = syncTree.syncPointTree_.get(queryPath);\r\n    assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n    var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, queryPath);\r\n    return syncPointApplyOperation(syncPoint, operation, writesCache, null);\r\n}\r\n/**\r\n * This collapses multiple unfiltered views into a single view, since we only need a single\r\n * listener for them.\r\n */\r\nfunction syncTreeCollectDistinctViewsForSubTree_(subtree) {\r\n    return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n        if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\r\n            var completeView = syncPointGetCompleteView(maybeChildSyncPoint);\r\n            return [completeView];\r\n        }\r\n        else {\r\n            // No complete view here, flatten any deeper listens into an array\r\n            var views_1 = [];\r\n            if (maybeChildSyncPoint) {\r\n                views_1 = syncPointGetQueryViews(maybeChildSyncPoint);\r\n            }\r\n            each(childMap, function (_key, childViews) {\r\n                views_1 = views_1.concat(childViews);\r\n            });\r\n            return views_1;\r\n        }\r\n    });\r\n}\r\n/**\r\n * Normalizes a query to a query we send the server for listening\r\n *\r\n * @returns The normalized query\r\n */\r\nfunction syncTreeQueryForListening_(query) {\r\n    if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\r\n        // We treat queries that load all data as default queries\r\n        // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n        // from Query\r\n        return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\r\n    }\r\n    else {\r\n        return query;\r\n    }\r\n}\r\nfunction syncTreeRemoveTags_(syncTree, queries) {\r\n    for (var j = 0; j < queries.length; ++j) {\r\n        var removedQuery = queries[j];\r\n        if (!removedQuery._queryParams.loadsAllData()) {\r\n            // We should have a tag for this\r\n            var removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\r\n            var removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\r\n            syncTree.queryToTagMap.delete(removedQueryKey);\r\n            syncTree.tagToQueryMap.delete(removedQueryTag);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Static accessor for query tags.\r\n */\r\nfunction syncTreeGetNextQueryTag_() {\r\n    return syncTreeNextQueryTag_++;\r\n}\r\n/**\r\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n *\r\n * @returns This method can return events to support synchronous data sources\r\n */\r\nfunction syncTreeSetupListener_(syncTree, query, view) {\r\n    var path = query._path;\r\n    var tag = syncTreeTagForQuery_(syncTree, query);\r\n    var listener = syncTreeCreateListenerForView_(syncTree, view);\r\n    var events = syncTree.listenProvider_.startListening(syncTreeQueryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n    var subtree = syncTree.syncPointTree_.subtree(path);\r\n    // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n    // may need to shadow other listens as well.\r\n    if (tag) {\r\n        assert(!syncPointHasCompleteView(subtree.value), \"If we're adding a query, it shouldn't be shadowed\");\r\n    }\r\n    else {\r\n        // Shadow everything at or below this location, this is a default listener.\r\n        var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (!pathIsEmpty(relativePath) &&\r\n                maybeChildSyncPoint &&\r\n                syncPointHasCompleteView(maybeChildSyncPoint)) {\r\n                return [syncPointGetCompleteView(maybeChildSyncPoint).query];\r\n            }\r\n            else {\r\n                // No default listener here, flatten any deeper queries into an array\r\n                var queries_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    queries_1 = queries_1.concat(syncPointGetQueryViews(maybeChildSyncPoint).map(function (view) { return view.query; }));\r\n                }\r\n                each(childMap, function (_key, childQueries) {\r\n                    queries_1 = queries_1.concat(childQueries);\r\n                });\r\n                return queries_1;\r\n            }\r\n        });\r\n        for (var i = 0; i < queriesToStop.length; ++i) {\r\n            var queryToStop = queriesToStop[i];\r\n            syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToStop), syncTreeTagForQuery_(syncTree, queryToStop));\r\n        }\r\n    }\r\n    return events;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ExistingValueProvider = /** @class */ (function () {\r\n    function ExistingValueProvider(node_) {\r\n        this.node_ = node_;\r\n    }\r\n    ExistingValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var child = this.node_.getImmediateChild(childName);\r\n        return new ExistingValueProvider(child);\r\n    };\r\n    ExistingValueProvider.prototype.node = function () {\r\n        return this.node_;\r\n    };\r\n    return ExistingValueProvider;\r\n}());\r\nvar DeferredValueProvider = /** @class */ (function () {\r\n    function DeferredValueProvider(syncTree, path) {\r\n        this.syncTree_ = syncTree;\r\n        this.path_ = path;\r\n    }\r\n    DeferredValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var childPath = pathChild(this.path_, childName);\r\n        return new DeferredValueProvider(this.syncTree_, childPath);\r\n    };\r\n    DeferredValueProvider.prototype.node = function () {\r\n        return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\r\n    };\r\n    return DeferredValueProvider;\r\n}());\r\n/**\r\n * Generate placeholders for deferred values.\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n */\r\nvar resolveDeferredLeafValue = function (value, existingVal, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n    if (typeof value['.sv'] === 'string') {\r\n        return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\r\n    }\r\n    else if (typeof value['.sv'] === 'object') {\r\n        return resolveComplexDeferredValue(value['.sv'], existingVal);\r\n    }\r\n    else {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\r\n    }\r\n};\r\nvar resolveScalarDeferredValue = function (op, existing, serverValues) {\r\n    switch (op) {\r\n        case 'timestamp':\r\n            return serverValues['timestamp'];\r\n        default:\r\n            assert(false, 'Unexpected server value: ' + op);\r\n    }\r\n};\r\nvar resolveComplexDeferredValue = function (op, existing, unused) {\r\n    if (!op.hasOwnProperty('increment')) {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\r\n    }\r\n    var delta = op['increment'];\r\n    if (typeof delta !== 'number') {\r\n        assert(false, 'Unexpected increment value: ' + delta);\r\n    }\r\n    var existingNode = existing.node();\r\n    assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls');\r\n    // Incrementing a non-number sets the value to the incremented amount\r\n    if (!existingNode.isLeafNode()) {\r\n        return delta;\r\n    }\r\n    var leaf = existingNode;\r\n    var existingVal = leaf.getValue();\r\n    if (typeof existingVal !== 'number') {\r\n        return delta;\r\n    }\r\n    // No need to do over/underflow arithmetic here because JS only handles floats under the covers\r\n    return existingVal + delta;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param path - path to which write is relative\r\n * @param node - new data written at path\r\n * @param syncTree - current data\r\n */\r\nvar resolveDeferredValueTree = function (path, node, syncTree, serverValues) {\r\n    return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, existing, serverValues) {\r\n    return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\r\n};\r\nfunction resolveDeferredValue(node, existingVal, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @param name - Optional name of the node.\r\n     * @param parent - Optional parent node.\r\n     * @param node - Optional node to wrap.\r\n     */\r\n    function Tree(name, parent, node) {\r\n        if (name === void 0) { name = ''; }\r\n        if (parent === void 0) { parent = null; }\r\n        if (node === void 0) { node = { children: {}, childCount: 0 }; }\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.node = node;\r\n    }\r\n    return Tree;\r\n}());\r\n/**\r\n * Returns a sub-Tree for the given path.\r\n *\r\n * @param pathObj - Path to look up.\r\n * @returns Tree for path.\r\n */\r\nfunction treeSubTree(tree, pathObj) {\r\n    // TODO: Require pathObj to be Path?\r\n    var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n    var child = tree, next = pathGetFront(path);\r\n    while (next !== null) {\r\n        var childNode = safeGet(child.node.children, next) || {\r\n            children: {},\r\n            childCount: 0\r\n        };\r\n        child = new Tree(next, child, childNode);\r\n        path = pathPopFront(path);\r\n        next = pathGetFront(path);\r\n    }\r\n    return child;\r\n}\r\n/**\r\n * Returns the data associated with this tree node.\r\n *\r\n * @returns The data or null if no data exists.\r\n */\r\nfunction treeGetValue(tree) {\r\n    return tree.node.value;\r\n}\r\n/**\r\n * Sets data to this tree node.\r\n *\r\n * @param value - Value to set.\r\n */\r\nfunction treeSetValue(tree, value) {\r\n    tree.node.value = value;\r\n    treeUpdateParents(tree);\r\n}\r\n/**\r\n * @returns Whether the tree has any children.\r\n */\r\nfunction treeHasChildren(tree) {\r\n    return tree.node.childCount > 0;\r\n}\r\n/**\r\n * @returns Whethe rthe tree is empty (no value or children).\r\n */\r\nfunction treeIsEmpty(tree) {\r\n    return treeGetValue(tree) === undefined && !treeHasChildren(tree);\r\n}\r\n/**\r\n * Calls action for each child of this tree node.\r\n *\r\n * @param action - Action to be called for each child.\r\n */\r\nfunction treeForEachChild(tree, action) {\r\n    each(tree.node.children, function (child, childTree) {\r\n        action(new Tree(child, tree, childTree));\r\n    });\r\n}\r\n/**\r\n * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n *\r\n * @param action - Action to be called for each child.\r\n * @param includeSelf - Whether to call action on this node as well. Defaults to\r\n *   false.\r\n * @param childrenFirst - Whether to call action on children before calling it on\r\n *   parent.\r\n */\r\nfunction treeForEachDescendant(tree, action, includeSelf, childrenFirst) {\r\n    if (includeSelf && !childrenFirst) {\r\n        action(tree);\r\n    }\r\n    treeForEachChild(tree, function (child) {\r\n        treeForEachDescendant(child, action, true, childrenFirst);\r\n    });\r\n    if (includeSelf && childrenFirst) {\r\n        action(tree);\r\n    }\r\n}\r\n/**\r\n * Calls action on each ancestor node.\r\n *\r\n * @param action - Action to be called on each parent; return\r\n *   true to abort.\r\n * @param includeSelf - Whether to call action on this node as well.\r\n * @returns true if the action callback returned true.\r\n */\r\nfunction treeForEachAncestor(tree, action, includeSelf) {\r\n    var node = includeSelf ? tree : tree.parent;\r\n    while (node !== null) {\r\n        if (action(node)) {\r\n            return true;\r\n        }\r\n        node = node.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @returns The path of this tree node, as a Path.\r\n */\r\nfunction treeGetPath(tree) {\r\n    return new Path(tree.parent === null\r\n        ? tree.name\r\n        : treeGetPath(tree.parent) + '/' + tree.name);\r\n}\r\n/**\r\n * Adds or removes this child from its parent based on whether it's empty or not.\r\n */\r\nfunction treeUpdateParents(tree) {\r\n    if (tree.parent !== null) {\r\n        treeUpdateChild(tree.parent, tree.name, tree);\r\n    }\r\n}\r\n/**\r\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n *\r\n * @param childName - The name of the child to update.\r\n * @param child - The child to update.\r\n */\r\nfunction treeUpdateChild(tree, childName, child) {\r\n    var childEmpty = treeIsEmpty(child);\r\n    var childExists = contains(tree.node.children, childName);\r\n    if (childEmpty && childExists) {\r\n        delete tree.node.children[childName];\r\n        tree.node.childCount--;\r\n        treeUpdateParents(tree);\r\n    }\r\n    else if (!childEmpty && !childExists) {\r\n        tree.node.children[childName] = child.node;\r\n        tree.node.childCount++;\r\n        treeUpdateParents(tree);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority &&\r\n            typeof priority === 'object' &&\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n */\r\nvar validateFirebaseDataArg = function (fnName, value, path, optional) {\r\n    if (optional && value === undefined) {\r\n        return;\r\n    }\r\n    validateFirebaseData(errorPrefix(fnName, 'value'), value, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + validationPathToErrorString(path));\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            validationPathToErrorString(path) +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix +\r\n            'contains ' +\r\n            data.toString() +\r\n            ' ' +\r\n            validationPathToErrorString(path));\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            validationPathToErrorString(path) +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false;\r\n        var hasActualChild_1 = false;\r\n        each(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        validationPathToErrorString(path) +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            validationPathPush(path, key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            validationPathPop(path);\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                validationPathToErrorString(path) +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = pathSlice(curPath);\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) ;\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(pathCompare);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && pathContains(prevPath, curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    var errorPrefix$1 = errorPrefix(fnName, 'values');\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix$1 + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    each(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix$1, value, pathChild(path, curPath));\r\n        if (pathGetBack(curPath) === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix$1 +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix$1, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, priority, optional) {\r\n    if (optional && priority === undefined) {\r\n        return;\r\n    }\r\n    if (isInvalidJSONNumber(priority)) {\r\n        throw new Error(errorPrefix(fnName, 'priority') +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    }\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority)) {\r\n        throw new Error(errorPrefix(fnName, 'priority') +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n    }\r\n};\r\nvar validateEventType = function (fnName, eventType, optional) {\r\n    if (optional && eventType === undefined) {\r\n        return;\r\n    }\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(errorPrefix(fnName, 'eventType') +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentName, key, optional) {\r\n    if (optional && key === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidKey(key)) {\r\n        throw new Error(errorPrefix(fnName, argumentName) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n    }\r\n};\r\nvar validatePathString = function (fnName, argumentName, pathString, optional) {\r\n    if (optional && pathString === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidPathString(pathString)) {\r\n        throw new Error(errorPrefix(fnName, argumentName) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n    }\r\n};\r\nvar validateRootPathString = function (fnName, argumentName, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentName, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (pathGetFront(path) === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(errorPrefix(fnName, 'url') +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentName, bool, optional) {\r\n    if (optional && bool === undefined) {\r\n        return;\r\n    }\r\n    if (typeof bool !== 'boolean') {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a boolean.');\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param eventDataList - The new events to queue.\r\n */\r\nfunction eventQueueQueueEvents(eventQueue, eventDataList) {\r\n    // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n    var currList = null;\r\n    for (var i = 0; i < eventDataList.length; i++) {\r\n        var data = eventDataList[i];\r\n        var path = data.getPath();\r\n        if (currList !== null && !pathEquals(path, currList.path)) {\r\n            eventQueue.eventLists_.push(currList);\r\n            currList = null;\r\n        }\r\n        if (currList === null) {\r\n            currList = { events: [], path: path };\r\n        }\r\n        currList.events.push(data);\r\n    }\r\n    if (currList) {\r\n        eventQueue.eventLists_.push(currList);\r\n    }\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n * for the specified path.\r\n *\r\n * It is assumed that the new events are all for the specified path.\r\n *\r\n * @param path - The path to raise events for.\r\n * @param eventDataList - The new events to raise.\r\n */\r\nfunction eventQueueRaiseEventsAtPath(eventQueue, path, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\r\n        return pathEquals(eventPath, path);\r\n    });\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n * locations related to the specified change path (i.e. all ancestors and descendants).\r\n *\r\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n *\r\n * @param changedPath - The path to raise events for.\r\n * @param eventDataList - The events to raise\r\n */\r\nfunction eventQueueRaiseEventsForChangedPath(eventQueue, changedPath, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\r\n        return pathContains(eventPath, changedPath) ||\r\n            pathContains(changedPath, eventPath);\r\n    });\r\n}\r\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, predicate) {\r\n    eventQueue.recursionDepth_++;\r\n    var sentAll = true;\r\n    for (var i = 0; i < eventQueue.eventLists_.length; i++) {\r\n        var eventList = eventQueue.eventLists_[i];\r\n        if (eventList) {\r\n            var eventPath = eventList.path;\r\n            if (predicate(eventPath)) {\r\n                eventListRaise(eventQueue.eventLists_[i]);\r\n                eventQueue.eventLists_[i] = null;\r\n            }\r\n            else {\r\n                sentAll = false;\r\n            }\r\n        }\r\n    }\r\n    if (sentAll) {\r\n        eventQueue.eventLists_ = [];\r\n    }\r\n    eventQueue.recursionDepth_--;\r\n}\r\n/**\r\n * Iterates through the list and raises each event\r\n */\r\nfunction eventListRaise(eventList) {\r\n    for (var i = 0; i < eventList.events.length; i++) {\r\n        var eventData = eventList.events[i];\r\n        if (eventData !== null) {\r\n            eventList.events[i] = null;\r\n            var eventFn = eventData.getEventRunner();\r\n            if (logger) {\r\n                log('event: ' + eventData.toString());\r\n            }\r\n            exceptionGuard(eventFn);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */\r\nvar MAX_TRANSACTION_RETRIES = 25;\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    function Repo(repoInfo_, forceRestClient_, authTokenProvider_, appCheckProvider_) {\r\n        this.repoInfo_ = repoInfo_;\r\n        this.forceRestClient_ = forceRestClient_;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.appCheckProvider_ = appCheckProvider_;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        /** A list of data pieces and paths to be set when this client disconnects. */\r\n        this.onDisconnect_ = newSparseSnapshotTree();\r\n        /** Stores queues of outstanding transactions for Firebase locations. */\r\n        this.transactionQueueTree_ = new Tree();\r\n        // TODO: This should be @private but it's used by test_access.js and internal.js\r\n        this.persistentConnection_ = null;\r\n        // This key is intentionally not updated if RepoInfo is later changed or replaced\r\n        this.key = this.repoInfo_.toURLString();\r\n    }\r\n    /**\r\n     * @returns The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    return Repo;\r\n}());\r\nfunction repoStart(repo, appId, authOverride) {\r\n    repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\r\n    if (repo.forceRestClient_ || beingCrawled()) {\r\n        repo.server_ = new ReadonlyRestClient(repo.repoInfo_, function (pathString, data, isMerge, tag) {\r\n            repoOnDataUpdate(repo, pathString, data, isMerge, tag);\r\n        }, repo.authTokenProvider_, repo.appCheckProvider_);\r\n        // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n        setTimeout(function () { return repoOnConnectStatus(repo, /* connectStatus= */ true); }, 0);\r\n    }\r\n    else {\r\n        // Validate authOverride\r\n        if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n            if (typeof authOverride !== 'object') {\r\n                throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n            }\r\n            try {\r\n                stringify(authOverride);\r\n            }\r\n            catch (e) {\r\n                throw new Error('Invalid authOverride provided: ' + e);\r\n            }\r\n        }\r\n        repo.persistentConnection_ = new PersistentConnection(repo.repoInfo_, appId, function (pathString, data, isMerge, tag) {\r\n            repoOnDataUpdate(repo, pathString, data, isMerge, tag);\r\n        }, function (connectStatus) {\r\n            repoOnConnectStatus(repo, connectStatus);\r\n        }, function (updates) {\r\n            repoOnServerInfoUpdate(repo, updates);\r\n        }, repo.authTokenProvider_, repo.appCheckProvider_, authOverride);\r\n        repo.server_ = repo.persistentConnection_;\r\n    }\r\n    repo.authTokenProvider_.addTokenChangeListener(function (token) {\r\n        repo.server_.refreshAuthToken(token);\r\n    });\r\n    repo.appCheckProvider_.addTokenChangeListener(function (result) {\r\n        repo.server_.refreshAppCheckToken(result.token);\r\n    });\r\n    // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n    // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n    repo.statsReporter_ = statsManagerGetOrCreateReporter(repo.repoInfo_, function () { return new StatsReporter(repo.stats_, repo.server_); });\r\n    // Used for .info.\r\n    repo.infoData_ = new SnapshotHolder();\r\n    repo.infoSyncTree_ = new SyncTree({\r\n        startListening: function (query, tag, currentHashFn, onComplete) {\r\n            var infoEvents = [];\r\n            var node = repo.infoData_.getNode(query._path);\r\n            // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n            // on initial data...\r\n            if (!node.isEmpty()) {\r\n                infoEvents = syncTreeApplyServerOverwrite(repo.infoSyncTree_, query._path, node);\r\n                setTimeout(function () {\r\n                    onComplete('ok');\r\n                }, 0);\r\n            }\r\n            return infoEvents;\r\n        },\r\n        stopListening: function () { }\r\n    });\r\n    repoUpdateInfo(repo, 'connected', false);\r\n    repo.serverSyncTree_ = new SyncTree({\r\n        startListening: function (query, tag, currentHashFn, onComplete) {\r\n            repo.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                var events = onComplete(status, data);\r\n                eventQueueRaiseEventsForChangedPath(repo.eventQueue_, query._path, events);\r\n            });\r\n            // No synchronous events for network-backed sync trees\r\n            return [];\r\n        },\r\n        stopListening: function (query, tag) {\r\n            repo.server_.unlisten(query, tag);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @returns The time in milliseconds, taking the server offset into account if we have one.\r\n */\r\nfunction repoServerTime(repo) {\r\n    var offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n    var offset = offsetNode.val() || 0;\r\n    return new Date().getTime() + offset;\r\n}\r\n/**\r\n * Generate ServerValues using some variables from the repo object.\r\n */\r\nfunction repoGenerateServerValues(repo) {\r\n    return generateWithValues({\r\n        timestamp: repoServerTime(repo)\r\n    });\r\n}\r\n/**\r\n * Called by realtime when we get new messages from the server.\r\n */\r\nfunction repoOnDataUpdate(repo, pathString, data, isMerge, tag) {\r\n    // For testing.\r\n    repo.dataUpdateCount++;\r\n    var path = new Path(pathString);\r\n    data = repo.interceptServerDataCallback_\r\n        ? repo.interceptServerDataCallback_(pathString, data)\r\n        : data;\r\n    var events = [];\r\n    if (tag) {\r\n        if (isMerge) {\r\n            var taggedChildren = map(data, function (raw) { return nodeFromJSON(raw); });\r\n            events = syncTreeApplyTaggedQueryMerge(repo.serverSyncTree_, path, taggedChildren, tag);\r\n        }\r\n        else {\r\n            var taggedSnap = nodeFromJSON(data);\r\n            events = syncTreeApplyTaggedQueryOverwrite(repo.serverSyncTree_, path, taggedSnap, tag);\r\n        }\r\n    }\r\n    else if (isMerge) {\r\n        var changedChildren = map(data, function (raw) { return nodeFromJSON(raw); });\r\n        events = syncTreeApplyServerMerge(repo.serverSyncTree_, path, changedChildren);\r\n    }\r\n    else {\r\n        var snap = nodeFromJSON(data);\r\n        events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\r\n    }\r\n    var affectedPath = path;\r\n    if (events.length > 0) {\r\n        // Since we have a listener outstanding for each transaction, receiving any events\r\n        // is a proxy for some change having occurred.\r\n        affectedPath = repoRerunTransactions(repo, path);\r\n    }\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\r\n}\r\n// TODO: This should be @private but it's used by test_access.js and internal.js\r\nfunction repoInterceptServerData(repo, callback) {\r\n    repo.interceptServerDataCallback_ = callback;\r\n}\r\nfunction repoOnConnectStatus(repo, connectStatus) {\r\n    repoUpdateInfo(repo, 'connected', connectStatus);\r\n    if (connectStatus === false) {\r\n        repoRunOnDisconnectEvents(repo);\r\n    }\r\n}\r\nfunction repoOnServerInfoUpdate(repo, updates) {\r\n    each(updates, function (key, value) {\r\n        repoUpdateInfo(repo, key, value);\r\n    });\r\n}\r\nfunction repoUpdateInfo(repo, pathString, value) {\r\n    var path = new Path('/.info/' + pathString);\r\n    var newNode = nodeFromJSON(value);\r\n    repo.infoData_.updateSnapshot(path, newNode);\r\n    var events = syncTreeApplyServerOverwrite(repo.infoSyncTree_, path, newNode);\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n}\r\nfunction repoGetNextWriteId(repo) {\r\n    return repo.nextWriteId_++;\r\n}\r\n/**\r\n * The purpose of `getValue` is to return the latest known value\r\n * satisfying `query`.\r\n *\r\n * This method will first check for in-memory cached values\r\n * belonging to active listeners. If they are found, such values\r\n * are considered to be the most up-to-date.\r\n *\r\n * If the client is not connected, this method will try to\r\n * establish a connection and request the value for `query`. If\r\n * the client is not able to retrieve the query result, it reports\r\n * an error.\r\n *\r\n * @param query - The query to surface a value for.\r\n */\r\nfunction repoGetValue(repo, query) {\r\n    // Only active queries are cached. There is no persisted cache.\r\n    var cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\r\n    if (cached != null) {\r\n        return Promise.resolve(cached);\r\n    }\r\n    return repo.server_.get(query).then(function (payload) {\r\n        var node = nodeFromJSON(payload).withIndex(query._queryParams.getIndex());\r\n        var events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, query._path, node);\r\n        eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n        return Promise.resolve(node);\r\n    }, function (err) {\r\n        repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\r\n        return Promise.reject(new Error(err));\r\n    });\r\n}\r\nfunction repoSetWithPriority(repo, path, newVal, newPriority, onComplete) {\r\n    repoLog(repo, 'set', {\r\n        path: path.toString(),\r\n        value: newVal,\r\n        priority: newPriority\r\n    });\r\n    // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n    // (b) store unresolved paths on JSON parse\r\n    var serverValues = repoGenerateServerValues(repo);\r\n    var newNodeUnresolved = nodeFromJSON(newVal, newPriority);\r\n    var existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\r\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\r\n    var writeId = repoGetNextWriteId(repo);\r\n    var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, writeId, true);\r\n    eventQueueQueueEvents(repo.eventQueue_, events);\r\n    repo.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n        var success = status === 'ok';\r\n        if (!success) {\r\n            warn('set at ' + path + ' failed: ' + status);\r\n        }\r\n        var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId, !success);\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n    var affectedPath = repoAbortTransactions(repo, path);\r\n    repoRerunTransactions(repo, affectedPath);\r\n    // We queued the events above, so just flush the queue here\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\r\n}\r\nfunction repoUpdate(repo, path, childrenToMerge, onComplete) {\r\n    repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\r\n    // Start with our existing data and merge each child into it.\r\n    var empty = true;\r\n    var serverValues = repoGenerateServerValues(repo);\r\n    var changedChildren = {};\r\n    each(childrenToMerge, function (changedKey, changedValue) {\r\n        empty = false;\r\n        changedChildren[changedKey] = resolveDeferredValueTree(pathChild(path, changedKey), nodeFromJSON(changedValue), repo.serverSyncTree_, serverValues);\r\n    });\r\n    if (!empty) {\r\n        var writeId_1 = repoGetNextWriteId(repo);\r\n        var events = syncTreeApplyUserMerge(repo.serverSyncTree_, path, changedChildren, writeId_1);\r\n        eventQueueQueueEvents(repo.eventQueue_, events);\r\n        repo.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('update at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId_1, !success);\r\n            var affectedPath = clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\r\n            eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, clearEvents);\r\n            repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n        });\r\n        each(childrenToMerge, function (changedPath) {\r\n            var affectedPath = repoAbortTransactions(repo, pathChild(path, changedPath));\r\n            repoRerunTransactions(repo, affectedPath);\r\n        });\r\n        // We queued the events above, so just flush the queue here\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\r\n    }\r\n    else {\r\n        log(\"update() called with empty data.  Don't do anything.\");\r\n        repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\r\n    }\r\n}\r\n/**\r\n * Applies all of the changes stored up in the onDisconnect_ tree.\r\n */\r\nfunction repoRunOnDisconnectEvents(repo) {\r\n    repoLog(repo, 'onDisconnectEvents');\r\n    var serverValues = repoGenerateServerValues(repo);\r\n    var resolvedOnDisconnectTree = newSparseSnapshotTree();\r\n    sparseSnapshotTreeForEachTree(repo.onDisconnect_, newEmptyPath(), function (path, node) {\r\n        var resolved = resolveDeferredValueTree(path, node, repo.serverSyncTree_, serverValues);\r\n        sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\r\n    });\r\n    var events = [];\r\n    sparseSnapshotTreeForEachTree(resolvedOnDisconnectTree, newEmptyPath(), function (path, snap) {\r\n        events = events.concat(syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap));\r\n        var affectedPath = repoAbortTransactions(repo, path);\r\n        repoRerunTransactions(repo, affectedPath);\r\n    });\r\n    repo.onDisconnect_ = newSparseSnapshotTree();\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\r\n}\r\nfunction repoOnDisconnectCancel(repo, path, onComplete) {\r\n    repo.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeForget(repo.onDisconnect_, path);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectSet(repo, path, value, onComplete) {\r\n    var newNode = nodeFromJSON(value);\r\n    repo.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectSetWithPriority(repo, path, value, priority, onComplete) {\r\n    var newNode = nodeFromJSON(value, priority);\r\n    repo.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectUpdate(repo, path, childrenToMerge, onComplete) {\r\n    if (isEmpty(childrenToMerge)) {\r\n        log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n        repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\r\n        return;\r\n    }\r\n    repo.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            each(childrenToMerge, function (childName, childNode) {\r\n                var newChildNode = nodeFromJSON(childNode);\r\n                sparseSnapshotTreeRemember(repo.onDisconnect_, pathChild(path, childName), newChildNode);\r\n            });\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoAddEventCallbackForQuery(repo, query, eventRegistration) {\r\n    var events;\r\n    if (pathGetFront(query._path) === '.info') {\r\n        events = syncTreeAddEventRegistration(repo.infoSyncTree_, query, eventRegistration);\r\n    }\r\n    else {\r\n        events = syncTreeAddEventRegistration(repo.serverSyncTree_, query, eventRegistration);\r\n    }\r\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n}\r\nfunction repoRemoveEventCallbackForQuery(repo, query, eventRegistration) {\r\n    // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n    // a little bit by handling the return values anyways.\r\n    var events;\r\n    if (pathGetFront(query._path) === '.info') {\r\n        events = syncTreeRemoveEventRegistration(repo.infoSyncTree_, query, eventRegistration);\r\n    }\r\n    else {\r\n        events = syncTreeRemoveEventRegistration(repo.serverSyncTree_, query, eventRegistration);\r\n    }\r\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n}\r\nfunction repoInterrupt(repo) {\r\n    if (repo.persistentConnection_) {\r\n        repo.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n    }\r\n}\r\nfunction repoResume(repo) {\r\n    if (repo.persistentConnection_) {\r\n        repo.persistentConnection_.resume(INTERRUPT_REASON);\r\n    }\r\n}\r\nfunction repoStats(repo, showDelta) {\r\n    if (showDelta === void 0) { showDelta = false; }\r\n    if (typeof console === 'undefined') {\r\n        return;\r\n    }\r\n    var stats;\r\n    if (showDelta) {\r\n        if (!repo.statsListener_) {\r\n            repo.statsListener_ = new StatsListener(repo.stats_);\r\n        }\r\n        stats = repo.statsListener_.get();\r\n    }\r\n    else {\r\n        stats = repo.stats_.get();\r\n    }\r\n    var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n        return Math.max(currentValue.length, previousValue);\r\n    }, 0);\r\n    each(stats, function (stat, value) {\r\n        var paddedStat = stat;\r\n        // pad stat names to be the same length (plus 2 extra spaces).\r\n        for (var i = stat.length; i < longestName + 2; i++) {\r\n            paddedStat += ' ';\r\n        }\r\n        console.log(paddedStat + value);\r\n    });\r\n}\r\nfunction repoStatsIncrementCounter(repo, metric) {\r\n    repo.stats_.incrementCounter(metric);\r\n    statsReporterIncludeStat(repo.statsReporter_, metric);\r\n}\r\nfunction repoLog(repo) {\r\n    var varArgs = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        varArgs[_i - 1] = arguments[_i];\r\n    }\r\n    var prefix = '';\r\n    if (repo.persistentConnection_) {\r\n        prefix = repo.persistentConnection_.id + ':';\r\n    }\r\n    log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\r\n}\r\nfunction repoCallOnCompleteCallback(repo, callback, status, errorReason) {\r\n    if (callback) {\r\n        exceptionGuard(function () {\r\n            if (status === 'ok') {\r\n                callback(null);\r\n            }\r\n            else {\r\n                var code = (status || 'error').toUpperCase();\r\n                var message = code;\r\n                if (errorReason) {\r\n                    message += ': ' + errorReason;\r\n                }\r\n                var error = new Error(message);\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                error.code = code;\r\n                callback(error);\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and\r\n * sends it to the server if possible.\r\n *\r\n * @param path - Path at which to do transaction.\r\n * @param transactionUpdate - Update callback.\r\n * @param onComplete - Completion callback.\r\n * @param unwatcher - Function that will be called when the transaction no longer\r\n * need data updates for `path`.\r\n * @param applyLocally - Whether or not to make intermediate results visible\r\n */\r\nfunction repoStartTransaction(repo, path, transactionUpdate, onComplete, unwatcher, applyLocally) {\r\n    repoLog(repo, 'transaction on ' + path);\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out\r\n        // which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = repoGetLatestState(repo, path, undefined);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            transaction.onComplete(null, false, transaction.currentInputSnapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = 0 /* RUN */;\r\n        var queueNode = treeSubTree(repo.transactionQueueTree_, path);\r\n        var nodeQueue = treeGetValue(queueNode) || [];\r\n        nodeQueue.push(transaction);\r\n        treeSetValue(queueNode, nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our\r\n        // transaction state, since the user could start new transactions from the\r\n        // event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            contains(newVal, '.priority')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            priorityForNode = safeGet(newVal, '.priority');\r\n            assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        var serverValues = repoGenerateServerValues(repo);\r\n        var newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = repoGetNextWriteId(repo);\r\n        var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n    }\r\n}\r\n/**\r\n * @param excludeSets - A specific set to exclude\r\n */\r\nfunction repoGetLatestState(repo, path, excludeSets) {\r\n    return (syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n}\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding\r\n * transactions to complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively\r\n * with a particular transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param node - transactionQueueTree node to start at.\r\n */\r\nfunction repoSendReadyTransactions(repo, node) {\r\n    if (node === void 0) { node = repo.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        repoPruneCompletedTransactionsBelowNode(repo, node);\r\n    }\r\n    if (treeGetValue(node)) {\r\n        var queue = repoBuildTransactionQueue(repo, node);\r\n        assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === 0 /* RUN */; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            repoSendTransactionQueue(repo, treeGetPath(node), queue);\r\n        }\r\n    }\r\n    else if (treeHasChildren(node)) {\r\n        treeForEachChild(node, function (childNode) {\r\n            repoSendReadyTransactions(repo, childNode);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle\r\n * the result (success or failure).\r\n *\r\n * @param path - The location of the queue.\r\n * @param queue - Queue of transactions under the specified location.\r\n */\r\nfunction repoSendTransactionQueue(repo, path, queue) {\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = repoGetLatestState(repo, path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        assert(txn.status === 0 /* RUN */, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = 1 /* SENT */;\r\n        txn.retryCount++;\r\n        var relativePath = newRelativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /** @type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    repo.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        repoLog(repo, 'transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our\r\n            // transaction state, since the callback could trigger more\r\n            // transactions or sets.\r\n            var callbacks = [];\r\n            var _loop_1 = function (i) {\r\n                queue[i].status = 2 /* COMPLETED */;\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this\r\n                    // transaction is complete, it should be set\r\n                    callbacks.push(function () {\r\n                        return queue[i].onComplete(null, true, queue[i].currentOutputSnapshotResolved);\r\n                    });\r\n                }\r\n                queue[i].unwatcher();\r\n            };\r\n            for (var i = 0; i < queue.length; i++) {\r\n                _loop_1(i);\r\n            }\r\n            // Now remove the completed transactions.\r\n            repoPruneCompletedTransactionsBelowNode(repo, treeSubTree(repo.transactionQueueTree_, path));\r\n            // There may be pending transactions that we can now send.\r\n            repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n            eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === 3 /* SENT_NEEDS_ABORT */) {\r\n                        queue[i].status = 4 /* NEEDS_ABORT */;\r\n                    }\r\n                    else {\r\n                        queue[i].status = 0 /* RUN */;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = 4 /* NEEDS_ABORT */;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            repoRerunTransactions(repo, path);\r\n        }\r\n    }, latestHash);\r\n}\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions. This\r\n * is the path at which events need to be raised for.\r\n *\r\n * @param changedPath - The path in mergedData that changed.\r\n * @returns The rootmost path that was affected by rerunning transactions.\r\n */\r\nfunction repoRerunTransactions(repo, changedPath) {\r\n    var rootMostTransactionNode = repoGetAncestorTransactionNode(repo, changedPath);\r\n    var path = treeGetPath(rootMostTransactionNode);\r\n    var queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\r\n    repoRerunTransactionQueue(repo, queue, path);\r\n    return path;\r\n}\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted\r\n * transactions and whatnot).\r\n *\r\n * @param queue - The queue of transactions to run.\r\n * @param path - The path the queue is for.\r\n */\r\nfunction repoRerunTransactionQueue(repo, queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our\r\n    // transaction state, since the callback could trigger more transactions or\r\n    // sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === 0 /* RUN */;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    var _loop_2 = function (i) {\r\n        var transaction = queue[i];\r\n        var relativePath = newRelativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason;\r\n        assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === 4 /* NEEDS_ABORT */) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === 0 /* RUN */) {\r\n            if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = repoGetLatestState(repo, transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = repoGenerateServerValues(repo);\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = repoGetNextWriteId(repo);\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(syncTreeApplyUserOverwrite(repo.serverSyncTree_, transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = 2 /* COMPLETED */;\r\n            // Removing a listener can trigger pruning which can muck with\r\n            // mergedData/visibleData (as it prunes data). So defer the unwatcher\r\n            // until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    callbacks.push(function () {\r\n                        return queue[i].onComplete(null, false, queue[i].currentInputSnapshot);\r\n                    });\r\n                }\r\n                else {\r\n                    callbacks.push(function () {\r\n                        return queue[i].onComplete(new Error(abortReason), false, null);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n    for (var i = 0; i < queue.length; i++) {\r\n        _loop_2(i);\r\n    }\r\n    // Clean up completed transactions.\r\n    repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n}\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending\r\n * transaction on it, or just returns the node for the given path if there are\r\n * no pending transactions on any ancestor.\r\n *\r\n * @param path - The location to start at.\r\n * @returns The rootmost node with a transaction.\r\n */\r\nfunction repoGetAncestorTransactionNode(repo, path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we\r\n    // find a node with pending transactions.\r\n    var transactionNode = repo.transactionQueueTree_;\r\n    front = pathGetFront(path);\r\n    while (front !== null && treeGetValue(transactionNode) === undefined) {\r\n        transactionNode = treeSubTree(transactionNode, front);\r\n        path = pathPopFront(path);\r\n        front = pathGetFront(path);\r\n    }\r\n    return transactionNode;\r\n}\r\n/**\r\n * Builds the queue of all transactions at or below the specified\r\n * transactionNode.\r\n *\r\n * @param transactionNode\r\n * @returns The generated queue.\r\n */\r\nfunction repoBuildTransactionQueue(repo, transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    repoAggregateTransactionQueuesForNode(repo, transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) { return a.order - b.order; });\r\n    return transactionQueue;\r\n}\r\nfunction repoAggregateTransactionQueuesForNode(repo, node, queue) {\r\n    var nodeQueue = treeGetValue(node);\r\n    if (nodeQueue) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    treeForEachChild(node, function (child) {\r\n        repoAggregateTransactionQueuesForNode(repo, child, queue);\r\n    });\r\n}\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n */\r\nfunction repoPruneCompletedTransactionsBelowNode(repo, node) {\r\n    var queue = treeGetValue(node);\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== 2 /* COMPLETED */) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        treeSetValue(node, queue.length > 0 ? queue : undefined);\r\n    }\r\n    treeForEachChild(node, function (childNode) {\r\n        repoPruneCompletedTransactionsBelowNode(repo, childNode);\r\n    });\r\n}\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.\r\n * Called when doing a set() or update() since we consider them incompatible\r\n * with transactions.\r\n *\r\n * @param path - Path for which we want to abort related transactions.\r\n */\r\nfunction repoAbortTransactions(repo, path) {\r\n    var affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\r\n    var transactionNode = treeSubTree(repo.transactionQueueTree_, path);\r\n    treeForEachAncestor(transactionNode, function (node) {\r\n        repoAbortTransactionsOnNode(repo, node);\r\n    });\r\n    repoAbortTransactionsOnNode(repo, transactionNode);\r\n    treeForEachDescendant(transactionNode, function (node) {\r\n        repoAbortTransactionsOnNode(repo, node);\r\n    });\r\n    return affectedPath;\r\n}\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param node - Node to abort transactions for.\r\n */\r\nfunction repoAbortTransactionsOnNode(repo, node) {\r\n    var queue = treeGetValue(node);\r\n    if (queue) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our\r\n        // transaction state, since the callback could trigger more transactions\r\n        // or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for\r\n        // abort, while the unsent ones can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === 3 /* SENT_NEEDS_ABORT */) ;\r\n            else if (queue[i].status === 1 /* SENT */) {\r\n                assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = 3 /* SENT_NEEDS_ABORT */;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                assert(queue[i].status === 0 /* RUN */, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, null));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            treeSetValue(node, undefined);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, treeGetPath(node), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @returns key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var e_1, _a;\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    try {\r\n        for (var _b = __values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var segment = _c.value;\r\n            if (segment.length === 0) {\r\n                continue;\r\n            }\r\n            var kv = segment.split('=');\r\n            if (kv.length === 2) {\r\n                results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n            }\r\n            else {\r\n                warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return results;\r\n}\r\nvar parseRepoInfo = function (dataURL, nodeAdmin) {\r\n    var parsedUrl = parseDatabaseURL(dataURL), namespace = parsedUrl.namespace;\r\n    if (parsedUrl.domain === 'firebase.com') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace === 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, nodeAdmin, webSocketOnly, \r\n        /*persistenceKey=*/ '', \r\n        /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\nvar parseDatabaseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '', namespace = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = host.length;\r\n        }\r\n        var hostWithoutPort = host.slice(0, colonInd);\r\n        if (hostWithoutPort.toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        else if (hostWithoutPort.split('.').length <= 2) {\r\n            domain = hostWithoutPort;\r\n        }\r\n        else {\r\n            // Interpret the subdomain of a 3 or more component URL as the namespace name.\r\n            var dotInd = host.indexOf('.');\r\n            subdomain = host.substring(0, dotInd).toLowerCase();\r\n            domain = host.substring(dotInd + 1);\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            namespace = subdomain;\r\n        }\r\n        // Always treat the value of the `ns` as the namespace name if it is present.\r\n        if ('ns' in queryParams) {\r\n            namespace = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString,\r\n        namespace: namespace\r\n    };\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param eventRegistration - The function to call to with the event data. User provided\r\n     * @param snapshot - The data backing the event\r\n     * @param prevName - Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.ref;\r\n        if (this.eventType === 'value') {\r\n            return ref._path;\r\n        }\r\n        else {\r\n            return ref.parent._path;\r\n        }\r\n    };\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A wrapper class that converts events from the database@exp SDK to the legacy\r\n * Database SDK. Events are not converted directly as event registration relies\r\n * on reference comparison of the original user callback (see `matches()`) and\r\n * relies on equality of the legacy SDK's `context` object.\r\n */\r\nvar CallbackContext = /** @class */ (function () {\r\n    function CallbackContext(snapshotCallback, cancelCallback) {\r\n        this.snapshotCallback = snapshotCallback;\r\n        this.cancelCallback = cancelCallback;\r\n    }\r\n    CallbackContext.prototype.onValue = function (expDataSnapshot, previousChildName) {\r\n        this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\r\n    };\r\n    CallbackContext.prototype.onCancel = function (error) {\r\n        assert(this.hasCancelCallback, 'Raising a cancel event on a listener with no cancel callback');\r\n        return this.cancelCallback.call(null, error);\r\n    };\r\n    Object.defineProperty(CallbackContext.prototype, \"hasCancelCallback\", {\r\n        get: function () {\r\n            return !!this.cancelCallback;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    CallbackContext.prototype.matches = function (other) {\r\n        return (this.snapshotCallback === other.snapshotCallback ||\r\n            (this.snapshotCallback.userCallback !== undefined &&\r\n                this.snapshotCallback.userCallback ===\r\n                    other.snapshotCallback.userCallback &&\r\n                this.snapshotCallback.context === other.snapshotCallback.context));\r\n    };\r\n    return CallbackContext;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The `onDisconnect` class allows you to write or clear data when your client\r\n * disconnects from the Database server. These updates occur whether your\r\n * client disconnects cleanly or not, so you can rely on them to clean up data\r\n * even if a connection is dropped or a client crashes.\r\n *\r\n * The `onDisconnect` class is most commonly used to manage presence in\r\n * applications where it is useful to detect how many clients are connected and\r\n * when other clients disconnect. See\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information.\r\n *\r\n * To avoid problems when a connection is dropped before the requests can be\r\n * transferred to the Database server, these functions should be called before\r\n * writing any data.\r\n *\r\n * Note that `onDisconnect` operations are only triggered once. If you want an\r\n * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n * the `onDisconnect` operations each time you reconnect.\r\n */\r\nvar OnDisconnect$1 = /** @class */ (function () {\r\n    /** @hideconstructor */\r\n    function OnDisconnect(_repo, _path) {\r\n        this._repo = _repo;\r\n        this._path = _path;\r\n    }\r\n    /**\r\n     * Cancels all previously queued `onDisconnect()` set or update events for this\r\n     * location and all children.\r\n     *\r\n     * If a write has been queued for this location via a `set()` or `update()` at a\r\n     * parent location, the write at this location will be canceled, though writes\r\n     * to sibling locations will still occur.\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */\r\n    OnDisconnect.prototype.cancel = function () {\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectCancel(this._repo, this._path, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Ensures the data at this location is deleted when the client is disconnected\r\n     * (due to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */\r\n    OnDisconnect.prototype.remove = function () {\r\n        validateWritablePath('OnDisconnect.remove', this._path);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectSet(this._repo, this._path, null, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Ensures the data at this location is set to the specified value when the\r\n     * client is disconnected (due to closing the browser, navigating to a new page,\r\n     * or network issues).\r\n     *\r\n     * `set()` is especially useful for implementing \"presence\" systems, where a\r\n     * value should be changed or cleared when a user disconnects so that they\r\n     * appear \"offline\" to other users. See\r\n     * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n     * for more information.\r\n     *\r\n     * Note that `onDisconnect` operations are only triggered once. If you want an\r\n     * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n     * the `onDisconnect` operations each time.\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    OnDisconnect.prototype.set = function (value) {\r\n        validateWritablePath('OnDisconnect.set', this._path);\r\n        validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectSet(this._repo, this._path, value, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Ensures the data at this location is set to the specified value and priority\r\n     * when the client is disconnected (due to closing the browser, navigating to a\r\n     * new page, or network issues).\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @param priority - The priority to be written (string, number, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority) {\r\n        validateWritablePath('OnDisconnect.setWithPriority', this._path);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', value, this._path, false);\r\n        validatePriority('OnDisconnect.setWithPriority', priority, false);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectSetWithPriority(this._repo, this._path, value, priority, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Writes multiple values at this location when the client is disconnected (due\r\n     * to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * The `values` argument contains multiple property-value pairs that will be\r\n     * written to the Database together. Each child property can either be a simple\r\n     * property (for example, \"name\") or a relative path (for example, \"name/first\")\r\n     * from the current location to the data to update.\r\n     *\r\n     * As opposed to the `set()` method, `update()` can be use to selectively update\r\n     * only the referenced properties at the current location (instead of replacing\r\n     * all the child properties at the current location).\r\n     *\r\n     * @param values - Object containing multiple values.\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    OnDisconnect.prototype.update = function (values) {\r\n        validateWritablePath('OnDisconnect.update', this._path);\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', values, this._path, false);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectUpdate(this._repo, this._path, values, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nvar QueryImpl = /** @class */ (function () {\r\n    /**\r\n     * @hideconstructor\r\n     */\r\n    function QueryImpl(_repo, _path, _queryParams, _orderByCalled) {\r\n        this._repo = _repo;\r\n        this._path = _path;\r\n        this._queryParams = _queryParams;\r\n        this._orderByCalled = _orderByCalled;\r\n    }\r\n    Object.defineProperty(QueryImpl.prototype, \"key\", {\r\n        get: function () {\r\n            if (pathIsEmpty(this._path)) {\r\n                return null;\r\n            }\r\n            else {\r\n                return pathGetBack(this._path);\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QueryImpl.prototype, \"ref\", {\r\n        get: function () {\r\n            return new ReferenceImpl(this._repo, this._path);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QueryImpl.prototype, \"_queryIdentifier\", {\r\n        get: function () {\r\n            var obj = queryParamsGetQueryObject(this._queryParams);\r\n            var id = ObjectToUniqueKey(obj);\r\n            return id === '{}' ? 'default' : id;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QueryImpl.prototype, \"_queryObject\", {\r\n        /**\r\n         * An object representation of the query parameters used by this Query.\r\n         */\r\n        get: function () {\r\n            return queryParamsGetQueryObject(this._queryParams);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    QueryImpl.prototype.isEqual = function (other) {\r\n        other = getModularInstance(other);\r\n        if (!(other instanceof QueryImpl)) {\r\n            return false;\r\n        }\r\n        var sameRepo = this._repo === other._repo;\r\n        var samePath = pathEquals(this._path, other._path);\r\n        var sameQueryIdentifier = this._queryIdentifier === other._queryIdentifier;\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    QueryImpl.prototype.toJSON = function () {\r\n        return this.toString();\r\n    };\r\n    QueryImpl.prototype.toString = function () {\r\n        return this._repo.toString() + pathToUrlEncodedString(this._path);\r\n    };\r\n    return QueryImpl;\r\n}());\r\n/**\r\n * Validates that no other order by call has been made\r\n */\r\nfunction validateNoPreviousOrderByCall(query, fnName) {\r\n    if (query._orderByCalled === true) {\r\n        throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n    }\r\n}\r\n/**\r\n * Validates start/end values for queries.\r\n */\r\nfunction validateQueryEndpoints(params) {\r\n    var startNode = null;\r\n    var endNode = null;\r\n    if (params.hasStart()) {\r\n        startNode = params.getIndexStartValue();\r\n    }\r\n    if (params.hasEnd()) {\r\n        endNode = params.getIndexEndValue();\r\n    }\r\n    if (params.getIndex() === KEY_INDEX) {\r\n        var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n            'startAt(), endAt(), or equalTo().';\r\n        var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\r\n            'endAt(), endBefore(), or equalTo() must be a string.';\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            if (startName !== MIN_NAME) {\r\n                throw new Error(tooManyArgsError);\r\n            }\r\n            else if (typeof startNode !== 'string') {\r\n                throw new Error(wrongArgTypeError);\r\n            }\r\n        }\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            if (endName !== MAX_NAME) {\r\n                throw new Error(tooManyArgsError);\r\n            }\r\n            else if (typeof endNode !== 'string') {\r\n                throw new Error(wrongArgTypeError);\r\n            }\r\n        }\r\n    }\r\n    else if (params.getIndex() === PRIORITY_INDEX) {\r\n        if ((startNode != null && !isValidPriority(startNode)) ||\r\n            (endNode != null && !isValidPriority(endNode))) {\r\n            throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\r\n                '(null, a number, or a string).');\r\n        }\r\n    }\r\n    else {\r\n        assert(params.getIndex() instanceof PathIndex ||\r\n            params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n        if ((startNode != null && typeof startNode === 'object') ||\r\n            (endNode != null && typeof endNode === 'object')) {\r\n            throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\r\n                'equalTo() cannot be an object.');\r\n        }\r\n    }\r\n}\r\n/**\r\n * Validates that limit* has been called with the correct combination of parameters\r\n */\r\nfunction validateLimit(params) {\r\n    if (params.hasStart() &&\r\n        params.hasEnd() &&\r\n        params.hasLimit() &&\r\n        !params.hasAnchoredLimit()) {\r\n        throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\r\n            'limitToFirst() or limitToLast() instead.');\r\n    }\r\n}\r\n/**\r\n * @internal\r\n */\r\nvar ReferenceImpl = /** @class */ (function (_super) {\r\n    __extends(ReferenceImpl, _super);\r\n    /** @hideconstructor */\r\n    function ReferenceImpl(repo, path) {\r\n        return _super.call(this, repo, path, new QueryParams(), false) || this;\r\n    }\r\n    Object.defineProperty(ReferenceImpl.prototype, \"parent\", {\r\n        get: function () {\r\n            var parentPath = pathParent(this._path);\r\n            return parentPath === null\r\n                ? null\r\n                : new ReferenceImpl(this._repo, parentPath);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceImpl.prototype, \"root\", {\r\n        get: function () {\r\n            var ref = this;\r\n            while (ref.parent !== null) {\r\n                ref = ref.parent;\r\n            }\r\n            return ref;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return ReferenceImpl;\r\n}(QueryImpl));\r\n/**\r\n * A `DataSnapshot` contains data from a Database location.\r\n *\r\n * Any time you read data from the Database, you receive the data as a\r\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\r\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\r\n * JavaScript object by calling the `val()` method. Alternatively, you can\r\n * traverse into the snapshot by calling `child()` to return child snapshots\r\n * (which you could then call `val()` on).\r\n *\r\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\r\n * a Database location. It cannot be modified and will never change (to modify\r\n * data, you always call the `set()` method on a `Reference` directly).\r\n */\r\nvar DataSnapshot$1 = /** @class */ (function () {\r\n    /**\r\n     * @param _node - A SnapshotNode to wrap.\r\n     * @param ref - The location this snapshot came from.\r\n     * @param _index - The iteration order for this snapshot\r\n     * @hideconstructor\r\n     */\r\n    function DataSnapshot(_node, \r\n    /**\r\n     * The location of this DataSnapshot.\r\n     */\r\n    ref, _index) {\r\n        this._node = _node;\r\n        this.ref = ref;\r\n        this._index = _index;\r\n    }\r\n    Object.defineProperty(DataSnapshot.prototype, \"priority\", {\r\n        /**\r\n         * Gets the priority value of the data in this `DataSnapshot`.\r\n         *\r\n         * Applications need not use priority but can order collections by\r\n         * ordinary properties (see\r\n         * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\r\n         * ).\r\n         */\r\n        get: function () {\r\n            // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n            return this._node.getPriority().val();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        /**\r\n         * The key (last part of the path) of the location of this `DataSnapshot`.\r\n         *\r\n         * The last token in a Database location is considered its key. For example,\r\n         * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\r\n         * `DataSnapshot` will return the key for the location that generated it.\r\n         * However, accessing the key on the root URL of a Database will return\r\n         * `null`.\r\n         */\r\n        get: function () {\r\n            return this.ref.key;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataSnapshot.prototype, \"size\", {\r\n        /** Returns the number of child properties of this `DataSnapshot`. */\r\n        get: function () {\r\n            return this._node.numChildren();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets another `DataSnapshot` for the location at the specified relative path.\r\n     *\r\n     * Passing a relative path to the `child()` method of a DataSnapshot returns\r\n     * another `DataSnapshot` for the location at the specified relative path. The\r\n     * relative path can either be a simple child name (for example, \"ada\") or a\r\n     * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\r\n     * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\r\n     * whose value is `null`) is returned.\r\n     *\r\n     * @param path - A relative path to the location of child data.\r\n     */\r\n    DataSnapshot.prototype.child = function (path) {\r\n        var childPath = new Path(path);\r\n        var childRef = child(this.ref, path);\r\n        return new DataSnapshot(this._node.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns true if this `DataSnapshot` contains any data. It is slightly more\r\n     * efficient than using `snapshot.val() !== null`.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        return !this._node.isEmpty();\r\n    };\r\n    /**\r\n     * Exports the entire contents of the DataSnapshot as a JavaScript object.\r\n     *\r\n     * The `exportVal()` method is similar to `val()`, except priority information\r\n     * is included (if available), making it suitable for backing up your data.\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        return this._node.val(true);\r\n    };\r\n    /**\r\n     * Enumerates the top-level children in the `DataSnapshot`.\r\n     *\r\n     * Because of the way JavaScript objects work, the ordering of data in the\r\n     * JavaScript object returned by `val()` is not guaranteed to match the\r\n     * ordering on the server nor the ordering of `onChildAdded()` events. That is\r\n     * where `forEach()` comes in handy. It guarantees the children of a\r\n     * `DataSnapshot` will be iterated in their query order.\r\n     *\r\n     * If no explicit `orderBy*()` method is used, results are returned\r\n     * ordered by key (unless priorities are used, in which case, results are\r\n     * returned by priority).\r\n     *\r\n     * @param action - A function that will be called for each child DataSnapshot.\r\n     * The callback can return true to cancel further enumeration.\r\n     * @returns true if enumeration was canceled due to your callback returning\r\n     * true.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        if (this._node.isLeafNode()) {\r\n            return false;\r\n        }\r\n        var childrenNode = this._node;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this._index, function (key, node) {\r\n            return action(new DataSnapshot(node, child(_this.ref, key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns true if the specified child path has (non-null) data.\r\n     *\r\n     * @param path - A relative path to the location of a potential child.\r\n     * @returns `true` if data exists at the specified child path; else\r\n     *  `false`.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (path) {\r\n        var childPath = new Path(path);\r\n        return !this._node.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns whether or not the `DataSnapshot` has any non-`null` child\r\n     * properties.\r\n     *\r\n     * You can use `hasChildren()` to determine if a `DataSnapshot` has any\r\n     * children. If it does, you can enumerate them using `forEach()`. If it\r\n     * doesn't, then either this snapshot contains a primitive value (which can be\r\n     * retrieved with `val()`) or it is empty (in which case, `val()` will return\r\n     * `null`).\r\n     *\r\n     * @returns true if this snapshot has any children; else false.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        if (this._node.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return !this._node.isEmpty();\r\n        }\r\n    };\r\n    /**\r\n     * Returns a JSON-serializable representation of this object.\r\n     */\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Extracts a JavaScript value from a `DataSnapshot`.\r\n     *\r\n     * Depending on the data in a `DataSnapshot`, the `val()` method may return a\r\n     * scalar type (string, number, or boolean), an array, or an object. It may\r\n     * also return null, indicating that the `DataSnapshot` is empty (contains no\r\n     * data).\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    DataSnapshot.prototype.val = function () {\r\n        return this._node.val();\r\n    };\r\n    return DataSnapshot;\r\n}());\r\n/**\r\n *\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided path. If no path is provided, the `Reference`\r\n * will point to the root of the Database.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param path - Optional path representing the location the returned\r\n *   `Reference` will point. If not provided, the returned `Reference` will\r\n *   point to the root of the Database.\r\n * @returns If a path is provided, a `Reference`\r\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\r\n *   root of the Database.\r\n */\r\nfunction ref(db, path) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('ref');\r\n    return path !== undefined ? child(db._root, path) : db._root;\r\n}\r\n/**\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided Firebase URL.\r\n *\r\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\r\n * has a different domain than the current `Database` instance.\r\n *\r\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\r\n * and are not applied to the returned `Reference`.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param url - The Firebase URL at which the returned `Reference` will\r\n *   point.\r\n * @returns A `Reference` pointing to the provided\r\n *   Firebase URL.\r\n */\r\nfunction refFromURL(db, url) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('refFromURL');\r\n    var parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\r\n    validateUrl('refFromURL', parsedURL);\r\n    var repoInfo = parsedURL.repoInfo;\r\n    if (!db._repo.repoInfo_.isCustomHost() &&\r\n        repoInfo.host !== db._repo.repoInfo_.host) {\r\n        fatal('refFromURL' +\r\n            ': Host name does not match the current database: ' +\r\n            '(found ' +\r\n            repoInfo.host +\r\n            ' but expected ' +\r\n            db._repo.repoInfo_.host +\r\n            ')');\r\n    }\r\n    return ref(db, parsedURL.path.toString());\r\n}\r\n/**\r\n * Gets a `Reference` for the location at the specified relative path.\r\n *\r\n * The relative path can either be a simple child name (for example, \"ada\") or\r\n * a deeper slash-separated path (for example, \"ada/name/first\").\r\n *\r\n * @param parent - The parent location.\r\n * @param path - A relative path from this location to the desired child\r\n *   location.\r\n * @returns The specified child location.\r\n */\r\nfunction child(parent, path) {\r\n    parent = getModularInstance(parent);\r\n    if (pathGetFront(parent._path) === null) {\r\n        validateRootPathString('child', 'path', path, false);\r\n    }\r\n    else {\r\n        validatePathString('child', 'path', path, false);\r\n    }\r\n    return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\r\n}\r\n/**\r\n * Generates a new child location using a unique key and returns its\r\n * `Reference`.\r\n *\r\n * This is the most common pattern for adding data to a collection of items.\r\n *\r\n * If you provide a value to `push()`, the value is written to the\r\n * generated location. If you don't pass a value, nothing is written to the\r\n * database and the child remains empty (but you can use the `Reference`\r\n * elsewhere).\r\n *\r\n * The unique keys generated by `push()` are ordered by the current time, so the\r\n * resulting list of items is chronologically sorted. The keys are also\r\n * designed to be unguessable (they contain 72 random bits of entropy).\r\n *\r\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}\r\n * </br>See {@link ttps://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}\r\n *\r\n * @param parent - The parent location.\r\n * @param value - Optional value to be written at the generated location.\r\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\r\n * but can be used immediately as the `Reference` to the child location.\r\n */\r\nfunction push(parent, value) {\r\n    parent = getModularInstance(parent);\r\n    validateWritablePath('push', parent._path);\r\n    validateFirebaseDataArg('push', value, parent._path, true);\r\n    var now = repoServerTime(parent._repo);\r\n    var name = nextPushId(now);\r\n    // push() returns a ThennableReference whose promise is fulfilled with a\r\n    // regular Reference. We use child() to create handles to two different\r\n    // references. The first is turned into a ThennableReference below by adding\r\n    // then() and catch() methods and is used as the return value of push(). The\r\n    // second remains a regular Reference and is used as the fulfilled value of\r\n    // the first ThennableReference.\r\n    var thennablePushRef = child(parent, name);\r\n    var pushRef = child(parent, name);\r\n    var promise;\r\n    if (value != null) {\r\n        promise = set(pushRef, value).then(function () { return pushRef; });\r\n    }\r\n    else {\r\n        promise = Promise.resolve(pushRef);\r\n    }\r\n    thennablePushRef.then = promise.then.bind(promise);\r\n    thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n    return thennablePushRef;\r\n}\r\n/**\r\n * Removes the data at this Database location.\r\n *\r\n * Any data at child locations will also be deleted.\r\n *\r\n * The effect of the remove will be visible immediately and the corresponding\r\n * event 'value' will be triggered. Synchronization of the remove to the\r\n * Firebase servers will also be started, and the returned Promise will resolve\r\n * when complete. If provided, the onComplete callback will be called\r\n * asynchronously after synchronization has finished.\r\n *\r\n * @param ref - The location to remove.\r\n * @returns Resolves when remove on server is complete.\r\n */\r\nfunction remove(ref) {\r\n    validateWritablePath('remove', ref._path);\r\n    return set(ref, null);\r\n}\r\n/**\r\n * Writes data to this Database location.\r\n *\r\n * This will overwrite any data at this location and all child locations.\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\r\n * all data at this location and all child locations will be deleted.\r\n *\r\n * `set()` will remove any priority stored at this location, so if priority is\r\n * meant to be preserved, you need to use `setWithPriority()` instead.\r\n *\r\n * Note that modifying data with `set()` will cancel any pending transactions\r\n * at that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to modify the same data.\r\n *\r\n * A single `set()` will generate a single \"value\" event at the location where\r\n * the `set()` was performed.\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction set(ref, value) {\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('set', ref._path);\r\n    validateFirebaseDataArg('set', value, ref._path, false);\r\n    var deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, ref._path, value, \r\n    /*priority=*/ null, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Sets a priority for the data at this Database location.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction setPriority(ref, priority) {\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('setPriority', ref._path);\r\n    validatePriority('setPriority', priority, false);\r\n    var deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, pathChild(ref._path, '.priority'), priority, null, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Writes data the Database location. Like `set()` but also specifies the\r\n * priority for that data.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction setWithPriority(ref, value, priority) {\r\n    validateWritablePath('setWithPriority', ref._path);\r\n    validateFirebaseDataArg('setWithPriority', value, ref._path, false);\r\n    validatePriority('setWithPriority', priority, false);\r\n    if (ref.key === '.length' || ref.key === '.keys') {\r\n        throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\r\n    }\r\n    var deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, ref._path, value, priority, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Writes multiple values to the Database at once.\r\n *\r\n * The `values` argument contains multiple property-value pairs that will be\r\n * written to the Database together. Each child property can either be a simple\r\n * property (for example, \"name\") or a relative path (for example,\r\n * \"name/first\") from the current location to the data to update.\r\n *\r\n * As opposed to the `set()` method, `update()` can be use to selectively update\r\n * only the referenced properties at the current location (instead of replacing\r\n * all the child properties at the current location).\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * A single `update()` will generate a single \"value\" event at the location\r\n * where the `update()` was performed, regardless of how many children were\r\n * modified.\r\n *\r\n * Note that modifying data with `update()` will cancel any pending\r\n * transactions at that location, so extreme care should be taken if mixing\r\n * `update()` and `transaction()` to modify the same data.\r\n *\r\n * Passing `null` to `update()` will remove the data at this location.\r\n *\r\n * See\r\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\r\n *\r\n * @param ref - The location to write to.\r\n * @param values - Object containing multiple values.\r\n * @returns Resolves when update on server is complete.\r\n */\r\nfunction update(ref, values) {\r\n    validateFirebaseMergeDataArg('update', values, ref._path, false);\r\n    var deferred = new Deferred();\r\n    repoUpdate(ref._repo, ref._path, values, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Gets the most up-to-date result for this query.\r\n *\r\n * @param query - The query to run.\r\n * @returns A promise which resolves to the resulting DataSnapshot if a value is\r\n * available, or rejects if the client is unable to return a value (e.g., if the\r\n * server is unreachable and there is nothing cached).\r\n */\r\nfunction get(query) {\r\n    query = getModularInstance(query);\r\n    return repoGetValue(query._repo, query).then(function (node) {\r\n        return new DataSnapshot$1(node, new ReferenceImpl(query._repo, query._path), query._queryParams.getIndex());\r\n    });\r\n}\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    function ValueEventRegistration(callbackContext) {\r\n        this.callbackContext = callbackContext;\r\n    }\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query._queryParams.getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot$1(change.snapshotNode, new ReferenceImpl(query._repo, query._path), index));\r\n    };\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var _this = this;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            return function () {\r\n                return _this.callbackContext.onCancel(eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            return function () {\r\n                return _this.callbackContext.onValue(eventData.snapshot, null);\r\n            };\r\n        }\r\n    };\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.callbackContext.hasCancelCallback) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callbackContext || !this.callbackContext) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return other.callbackContext.matches(this.callbackContext);\r\n        }\r\n    };\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbackContext !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of a child_x event.\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    function ChildEventRegistration(eventType, callbackContext) {\r\n        this.eventType = eventType;\r\n        this.callbackContext = callbackContext;\r\n    }\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return this.eventType === eventToCheck;\r\n    };\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.callbackContext.hasCancelCallback) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        assert(change.childName != null, 'Child events should have a childName.');\r\n        var childRef = child(new ReferenceImpl(query._repo, query._path), change.childName);\r\n        var index = query._queryParams.getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot$1(change.snapshotNode, childRef, index), change.prevName);\r\n    };\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var _this = this;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            return function () {\r\n                return _this.callbackContext.onCancel(eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            return function () {\r\n                return _this.callbackContext.onValue(eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        if (other instanceof ChildEventRegistration) {\r\n            return (this.eventType === other.eventType &&\r\n                (!this.callbackContext ||\r\n                    !other.callbackContext ||\r\n                    this.callbackContext.matches(other.callbackContext)));\r\n        }\r\n        return false;\r\n    };\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return !!this.callbackContext;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\r\nfunction addEventListener(query, eventType, callback, cancelCallbackOrListenOptions, options) {\r\n    var cancelCallback;\r\n    if (typeof cancelCallbackOrListenOptions === 'object') {\r\n        cancelCallback = undefined;\r\n        options = cancelCallbackOrListenOptions;\r\n    }\r\n    if (typeof cancelCallbackOrListenOptions === 'function') {\r\n        cancelCallback = cancelCallbackOrListenOptions;\r\n    }\r\n    if (options && options.onlyOnce) {\r\n        var userCallback_1 = callback;\r\n        var onceCallback = function (dataSnapshot, previousChildName) {\r\n            repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n            userCallback_1(dataSnapshot, previousChildName);\r\n        };\r\n        onceCallback.userCallback = callback.userCallback;\r\n        onceCallback.context = callback.context;\r\n        callback = onceCallback;\r\n    }\r\n    var callbackContext = new CallbackContext(callback, cancelCallback || undefined);\r\n    var container = eventType === 'value'\r\n        ? new ValueEventRegistration(callbackContext)\r\n        : new ChildEventRegistration(eventType, callbackContext);\r\n    repoAddEventCallbackForQuery(query._repo, query, container);\r\n    return function () { return repoRemoveEventCallbackForQuery(query._repo, query, container); };\r\n}\r\nfunction onValue(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'value', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildAdded(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_added', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildChanged(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_changed', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildMoved(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_moved', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildRemoved(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_removed', callback, cancelCallbackOrListenOptions, options);\r\n}\r\n/**\r\n * Detaches a callback previously attached with `on()`.\r\n *\r\n * Detach a callback previously attached with `on()`. Note that if `on()` was\r\n * called multiple times with the same eventType and callback, the callback\r\n * will be called multiple times for each event, and `off()` must be called\r\n * multiple times to remove the callback. Calling `off()` on a parent listener\r\n * will not automatically remove listeners registered on child nodes, `off()`\r\n * must also be called on any child listeners to remove the callback.\r\n *\r\n * If a callback is not specified, all callbacks for the specified eventType\r\n * will be removed. Similarly, if no eventType is specified, all callbacks\r\n * for the `Reference` will be removed.\r\n *\r\n * Individual listeners can also be removed by invoking their unsubscribe\r\n * callbacks.\r\n *\r\n * @param query - The query that the listener was registered with.\r\n * @param eventType - One of the following strings: \"value\", \"child_added\",\r\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\r\n * for the `Reference` will be removed.\r\n * @param callback - The callback function that was passed to `on()` or\r\n * `undefined` to remove all callbacks.\r\n */\r\nfunction off(query, eventType, callback) {\r\n    var container = null;\r\n    var expCallback = callback ? new CallbackContext(callback) : null;\r\n    if (eventType === 'value') {\r\n        container = new ValueEventRegistration(expCallback);\r\n    }\r\n    else if (eventType) {\r\n        container = new ChildEventRegistration(eventType, expCallback);\r\n    }\r\n    repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n}\r\n/**\r\n * A `QueryConstraint` is used to narrow the set of documents returned by a\r\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\r\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\r\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\r\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\r\n * {@link orderByValue}  or {@link equalTo} and\r\n * can then be passed to {@link query} to create a new query instance that\r\n * also contains this `QueryConstraint`.\r\n */\r\nvar QueryConstraint = /** @class */ (function () {\r\n    function QueryConstraint() {\r\n    }\r\n    return QueryConstraint;\r\n}());\r\nvar QueryEndAtConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryEndAtConstraint, _super);\r\n    function QueryEndAtConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryEndAtConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('endAt', this._value, query._path, true);\r\n        var newParams = queryParamsEndAt(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('endAt: Starting point was already set (by another call to endAt, ' +\r\n                'endBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryEndAtConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified ending point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name less than or equal\r\n * to the specified key.\r\n *\r\n * You can read more about `endAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to end at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end at, among the children with the previously\r\n * specified priority. This argument is only allowed if ordering by child,\r\n * value, or priority.\r\n */\r\nfunction endAt(value, key) {\r\n    validateKey('endAt', 'key', key, true);\r\n    return new QueryEndAtConstraint(value, key);\r\n}\r\nvar QueryEndBeforeConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryEndBeforeConstraint, _super);\r\n    function QueryEndBeforeConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryEndBeforeConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('endBefore', this._value, query._path, false);\r\n        var newParams = queryParamsEndBefore(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('endBefore: Starting point was already set (by another call to endAt, ' +\r\n                'endBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryEndBeforeConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is exclusive. If only a value is provided, children\r\n * with a value less than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value lesss than or equal\r\n * to the specified value and a a key name less than the specified key.\r\n *\r\n * @param value - The value to end before. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end before, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\r\nfunction endBefore(value, key) {\r\n    validateKey('endBefore', 'key', key, true);\r\n    return new QueryEndBeforeConstraint(value, key);\r\n}\r\nvar QueryStartAtConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryStartAtConstraint, _super);\r\n    function QueryStartAtConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryStartAtConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('startAt', this._value, query._path, true);\r\n        var newParams = queryParamsStartAt(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('startAt: Starting point was already set (by another call to startAt, ' +\r\n                'startBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryStartAtConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified starting point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name greater than or\r\n * equal to the specified key.\r\n *\r\n * You can read more about `startAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to start at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\r\nfunction startAt(value, key) {\r\n    if (value === void 0) { value = null; }\r\n    validateKey('startAt', 'key', key, true);\r\n    return new QueryStartAtConstraint(value, key);\r\n}\r\nvar QueryStartAfterConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryStartAfterConstraint, _super);\r\n    function QueryStartAfterConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryStartAfterConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('startAfter', this._value, query._path, false);\r\n        var newParams = queryParamsStartAfter(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('startAfter: Starting point was already set (by another call to startAt, ' +\r\n                'startAfter, or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryStartAfterConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is exclusive. If only a value is provided, children\r\n * with a value greater than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value greater than or equal\r\n * to the specified value and a a key name greater than the specified key.\r\n *\r\n * @param value - The value to start after. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start after. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\r\nfunction startAfter(value, key) {\r\n    validateKey('startAfter', 'key', key, true);\r\n    return new QueryStartAfterConstraint(value, key);\r\n}\r\nvar QueryLimitToFirstConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryLimitToFirstConstraint, _super);\r\n    function QueryLimitToFirstConstraint(_limit) {\r\n        var _this = _super.call(this) || this;\r\n        _this._limit = _limit;\r\n        return _this;\r\n    }\r\n    QueryLimitToFirstConstraint.prototype._apply = function (query) {\r\n        if (query._queryParams.hasLimit()) {\r\n            throw new Error('limitToFirst: Limit was already set (by another call to limitToFirst ' +\r\n                'or limitToLast).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, queryParamsLimitToFirst(query._queryParams, this._limit), query._orderByCalled);\r\n    };\r\n    return QueryLimitToFirstConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that if limited to the first specific number\r\n * of children.\r\n *\r\n * The `limitToFirst()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the first 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToFirst()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\r\nfunction limitToFirst(limit) {\r\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\r\n        throw new Error('limitToFirst: First argument must be a positive integer.');\r\n    }\r\n    return new QueryLimitToFirstConstraint(limit);\r\n}\r\nvar QueryLimitToLastConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryLimitToLastConstraint, _super);\r\n    function QueryLimitToLastConstraint(_limit) {\r\n        var _this = _super.call(this) || this;\r\n        _this._limit = _limit;\r\n        return _this;\r\n    }\r\n    QueryLimitToLastConstraint.prototype._apply = function (query) {\r\n        if (query._queryParams.hasLimit()) {\r\n            throw new Error('limitToLast: Limit was already set (by another call to limitToFirst ' +\r\n                'or limitToLast).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, queryParamsLimitToLast(query._queryParams, this._limit), query._orderByCalled);\r\n    };\r\n    return QueryLimitToLastConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that is limited to return only the last\r\n * specified number of children.\r\n *\r\n * The `limitToLast()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the last 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToLast()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\r\nfunction limitToLast(limit) {\r\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\r\n        throw new Error('limitToLast: First argument must be a positive integer.');\r\n    }\r\n    return new QueryLimitToLastConstraint(limit);\r\n}\r\nvar QueryOrderByChildConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByChildConstraint, _super);\r\n    function QueryOrderByChildConstraint(_path) {\r\n        var _this = _super.call(this) || this;\r\n        _this._path = _path;\r\n        return _this;\r\n    }\r\n    QueryOrderByChildConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByChild');\r\n        var parsedPath = new Path(this._path);\r\n        if (pathIsEmpty(parsedPath)) {\r\n            throw new Error('orderByChild: cannot pass in empty path. Use orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = queryParamsOrderBy(query._queryParams, index);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByChildConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by the specified child key.\r\n *\r\n * Queries can only order by one key at a time. Calling `orderByChild()`\r\n * multiple times on the same query is an error.\r\n *\r\n * Firebase queries allow you to order your data by any child key on the fly.\r\n * However, if you know in advance what your indexes will be, you can define\r\n * them via the .indexOn rule in your Security Rules for better performance. See\r\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\r\n * rule for more information.\r\n *\r\n * You can read more about `orderByChild()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n *\r\n * @param path - The path to order by.\r\n */\r\nfunction orderByChild(path) {\r\n    if (path === '$key') {\r\n        throw new Error('orderByChild: \"$key\" is invalid.  Use orderByKey() instead.');\r\n    }\r\n    else if (path === '$priority') {\r\n        throw new Error('orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.');\r\n    }\r\n    else if (path === '$value') {\r\n        throw new Error('orderByChild: \"$value\" is invalid.  Use orderByValue() instead.');\r\n    }\r\n    validatePathString('orderByChild', 'path', path, false);\r\n    return new QueryOrderByChildConstraint(path);\r\n}\r\nvar QueryOrderByKeyConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByKeyConstraint, _super);\r\n    function QueryOrderByKeyConstraint() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    QueryOrderByKeyConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByKey');\r\n        var newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByKeyConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by the key.\r\n *\r\n * Sorts the results of a query by their (ascending) key values.\r\n *\r\n * You can read more about `orderByKey()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\r\nfunction orderByKey() {\r\n    return new QueryOrderByKeyConstraint();\r\n}\r\nvar QueryOrderByPriorityConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByPriorityConstraint, _super);\r\n    function QueryOrderByPriorityConstraint() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    QueryOrderByPriorityConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByPriority');\r\n        var newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByPriorityConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by priority.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\r\n * for alternatives to priority.\r\n */\r\nfunction orderByPriority() {\r\n    return new QueryOrderByPriorityConstraint();\r\n}\r\nvar QueryOrderByValueConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByValueConstraint, _super);\r\n    function QueryOrderByValueConstraint() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    QueryOrderByValueConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByValue');\r\n        var newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByValueConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by value.\r\n *\r\n * If the children of a query are all scalar values (string, number, or\r\n * boolean), you can order the results by their (ascending) values.\r\n *\r\n * You can read more about `orderByValue()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\r\nfunction orderByValue() {\r\n    return new QueryOrderByValueConstraint();\r\n}\r\nvar QueryEqualToValueConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryEqualToValueConstraint, _super);\r\n    function QueryEqualToValueConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryEqualToValueConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('equalTo', this._value, query._path, false);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\r\n                'equalTo).');\r\n        }\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\r\n                'equalTo).');\r\n        }\r\n        return new QueryEndAtConstraint(this._value, this._key)._apply(new QueryStartAtConstraint(this._value, this._key)._apply(query));\r\n    };\r\n    return QueryEqualToValueConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` that includes children that match the specified\r\n * value.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The optional key argument can be used to further limit the range of the\r\n * query. If it is specified, then children that have exactly the specified\r\n * value must also have exactly the specified key as their key name. This can be\r\n * used to filter result sets with many matches for the same value.\r\n *\r\n * You can read more about `equalTo()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to match for. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\r\nfunction equalTo(value, key) {\r\n    validateKey('equalTo', 'key', key, true);\r\n    return new QueryEqualToValueConstraint(value, key);\r\n}\r\n/**\r\n * Creates a new immutable instance of `Query` that is extended to also include\r\n * additional query constraints.\r\n *\r\n * @param query - The Query instance to use as a base for the new constraints.\r\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\r\n * @throws if any of the provided query constraints cannot be combined with the\r\n * existing or new constraints.\r\n */\r\nfunction query(query) {\r\n    var e_1, _a;\r\n    var queryConstraints = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        queryConstraints[_i - 1] = arguments[_i];\r\n    }\r\n    var queryImpl = getModularInstance(query);\r\n    try {\r\n        for (var queryConstraints_1 = __values(queryConstraints), queryConstraints_1_1 = queryConstraints_1.next(); !queryConstraints_1_1.done; queryConstraints_1_1 = queryConstraints_1.next()) {\r\n            var constraint = queryConstraints_1_1.value;\r\n            queryImpl = constraint._apply(queryImpl);\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (queryConstraints_1_1 && !queryConstraints_1_1.done && (_a = queryConstraints_1.return)) _a.call(queryConstraints_1);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return queryImpl;\r\n}\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nsyncPointSetReferenceConstructor(ReferenceImpl);\r\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\r\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar repos = {};\r\n/**\r\n * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n */\r\nvar useRestClient = false;\r\n/**\r\n * Update an existing repo in place to point to a new host/port.\r\n */\r\nfunction repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider) {\r\n    repo.repoInfo_ = new RepoInfo(host + \":\" + port, \r\n    /* secure= */ false, repo.repoInfo_.namespace, repo.repoInfo_.webSocketOnly, repo.repoInfo_.nodeAdmin, repo.repoInfo_.persistenceKey, repo.repoInfo_.includeNamespaceInQueryParams);\r\n    if (tokenProvider) {\r\n        repo.authTokenProvider_ = tokenProvider;\r\n    }\r\n}\r\n/**\r\n * This function should only ever be called to CREATE a new database instance.\r\n * @internal\r\n */\r\nfunction repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url, nodeAdmin) {\r\n    var dbUrl = url || app.options.databaseURL;\r\n    if (dbUrl === undefined) {\r\n        if (!app.options.projectId) {\r\n            fatal(\"Can't determine Firebase Database URL. Be sure to include \" +\r\n                ' a Project ID when calling firebase.initializeApp().');\r\n        }\r\n        log('Using default host for project ', app.options.projectId);\r\n        dbUrl = app.options.projectId + \"-default-rtdb.firebaseio.com\";\r\n    }\r\n    var parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n    var repoInfo = parsedUrl.repoInfo;\r\n    var isEmulator;\r\n    var dbEmulatorHost = undefined;\r\n    if (typeof process !== 'undefined') {\r\n        dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\r\n    }\r\n    if (dbEmulatorHost) {\r\n        isEmulator = true;\r\n        dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\r\n        parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n        repoInfo = parsedUrl.repoInfo;\r\n    }\r\n    else {\r\n        isEmulator = !parsedUrl.repoInfo.secure;\r\n    }\r\n    var authTokenProvider = nodeAdmin && isEmulator\r\n        ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\r\n        : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\r\n    validateUrl('Invalid Firebase Database URL', parsedUrl);\r\n    if (!pathIsEmpty(parsedUrl.path)) {\r\n        fatal('Database URL must point to the root of a Firebase Database ' +\r\n            '(not including a child path).');\r\n    }\r\n    var repo = repoManagerCreateRepo(repoInfo, app, authTokenProvider, new AppCheckTokenProvider(app.name, appCheckProvider));\r\n    return new Database$1(repo, app);\r\n}\r\n/**\r\n * Remove the repo and make sure it is disconnected.\r\n *\r\n */\r\nfunction repoManagerDeleteRepo(repo, appName) {\r\n    var appRepos = repos[appName];\r\n    // This should never happen...\r\n    if (!appRepos || appRepos[repo.key] !== repo) {\r\n        fatal(\"Database \" + appName + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n    }\r\n    repoInterrupt(repo);\r\n    delete appRepos[repo.key];\r\n}\r\n/**\r\n * Ensures a repo doesn't already exist and then creates one using the\r\n * provided app.\r\n *\r\n * @param repoInfo - The metadata about the Repo\r\n * @returns The Repo object for the specified server / repoName.\r\n */\r\nfunction repoManagerCreateRepo(repoInfo, app, authTokenProvider, appCheckProvider) {\r\n    var appRepos = repos[app.name];\r\n    if (!appRepos) {\r\n        appRepos = {};\r\n        repos[app.name] = appRepos;\r\n    }\r\n    var repo = appRepos[repoInfo.toURLString()];\r\n    if (repo) {\r\n        fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n    }\r\n    repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\r\n    appRepos[repoInfo.toURLString()] = repo;\r\n    return repo;\r\n}\r\n/**\r\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n */\r\nfunction repoManagerForceRestClient(forceRestClient) {\r\n    useRestClient = forceRestClient;\r\n}\r\n/**\r\n * Class representing a Firebase Realtime Database.\r\n */\r\nvar Database$1 = /** @class */ (function () {\r\n    /** @hideconstructor */\r\n    function Database(_repoInternal, \r\n    /** The FirebaseApp associated with this Realtime Database instance. */\r\n    app) {\r\n        this._repoInternal = _repoInternal;\r\n        this.app = app;\r\n        /** Represents a database instance. */\r\n        this['type'] = 'database';\r\n        /** Track if the instance has been used (root or repo accessed) */\r\n        this._instanceStarted = false;\r\n    }\r\n    Object.defineProperty(Database.prototype, \"_repo\", {\r\n        get: function () {\r\n            if (!this._instanceStarted) {\r\n                repoStart(this._repoInternal, this.app.options.appId, this.app.options['databaseAuthVariableOverride']);\r\n                this._instanceStarted = true;\r\n            }\r\n            return this._repoInternal;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Database.prototype, \"_root\", {\r\n        get: function () {\r\n            if (!this._rootInternal) {\r\n                this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\r\n            }\r\n            return this._rootInternal;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Database.prototype._delete = function () {\r\n        if (this._rootInternal !== null) {\r\n            repoManagerDeleteRepo(this._repo, this.app.name);\r\n            this._repoInternal = null;\r\n            this._rootInternal = null;\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    Database.prototype._checkNotDeleted = function (apiName) {\r\n        if (this._rootInternal === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    return Database;\r\n}());\r\n/**\r\n * Modify the provided instance to communicate with the Realtime Database\r\n * emulator.\r\n *\r\n * <p>Note: This method must be called before performing any other operation.\r\n *\r\n * @param db - The instance to modify.\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 8080)\r\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n */\r\nfunction connectDatabaseEmulator(db, host, port, options) {\r\n    if (options === void 0) { options = {}; }\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('useEmulator');\r\n    if (db._instanceStarted) {\r\n        fatal('Cannot call useEmulator() after instance has already been initialized.');\r\n    }\r\n    var repo = db._repoInternal;\r\n    var tokenProvider = undefined;\r\n    if (repo.repoInfo_.nodeAdmin) {\r\n        if (options.mockUserToken) {\r\n            fatal('mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".');\r\n        }\r\n        tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\r\n    }\r\n    else if (options.mockUserToken) {\r\n        var token = typeof options.mockUserToken === 'string'\r\n            ? options.mockUserToken\r\n            : createMockUserToken(options.mockUserToken, db.app.options.projectId);\r\n        tokenProvider = new EmulatorTokenProvider(token);\r\n    }\r\n    // Modify the repo to apply emulator settings\r\n    repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\r\n}\r\n/**\r\n * Disconnects from the server (all Database operations will be completed\r\n * offline).\r\n *\r\n * The client automatically maintains a persistent connection to the Database\r\n * server, which will remain active indefinitely and reconnect when\r\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\r\n * to control the client connection in cases where a persistent connection is\r\n * undesirable.\r\n *\r\n * While offline, the client will no longer receive data updates from the\r\n * Database. However, all Database operations performed locally will continue to\r\n * immediately fire events, allowing your application to continue behaving\r\n * normally. Additionally, each operation performed locally will automatically\r\n * be queued and retried upon reconnection to the Database server.\r\n *\r\n * To reconnect to the Database and begin receiving remote events, see\r\n * `goOnline()`.\r\n *\r\n * @param db - The instance to disconnect.\r\n */\r\nfunction goOffline(db) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('goOffline');\r\n    repoInterrupt(db._repo);\r\n}\r\n/**\r\n * Reconnects to the server and synchronizes the offline Database state\r\n * with the server state.\r\n *\r\n * This method should be used after disabling the active connection with\r\n * `goOffline()`. Once reconnected, the client will transmit the proper data\r\n * and fire the appropriate events so that your client \"catches up\"\r\n * automatically.\r\n *\r\n * @param db - The instance to reconnect.\r\n */\r\nfunction goOnline(db) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('goOnline');\r\n    repoResume(db._repo);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar SERVER_TIMESTAMP = {\r\n    '.sv': 'timestamp'\r\n};\r\n/**\r\n * Returns a placeholder value for auto-populating the current timestamp (time\r\n * since the Unix epoch, in milliseconds) as determined by the Firebase\r\n * servers.\r\n */\r\nfunction serverTimestamp() {\r\n    return SERVER_TIMESTAMP;\r\n}\r\n/**\r\n * Returns a placeholder value that can be used to atomically increment the\r\n * current database value by the provided delta.\r\n *\r\n * @param delta - the amount to modify the current value atomically.\r\n * @returns A placeholder value for modifying data atomically server-side.\r\n */\r\nfunction increment(delta) {\r\n    return {\r\n        '.sv': {\r\n            'increment': delta\r\n        }\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A type for the resolve value of Firebase.transaction.\r\n */\r\nvar TransactionResult$1 = /** @class */ (function () {\r\n    /** @hideconstructor */\r\n    function TransactionResult(\r\n    /** Whether the transaction was successfully committed. */\r\n    committed, \r\n    /** The resulting data snapshot. */\r\n    snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    /** Returns a JSON-serializable representation of this object. */\r\n    TransactionResult.prototype.toJSON = function () {\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\r\n/**\r\n * Atomically modifies the data at this location.\r\n *\r\n * Atomically modify the data at this location. Unlike a normal `set()`, which\r\n * just overwrites the data regardless of its previous value, `transaction()` is\r\n * used to modify the existing value to a new value, ensuring there are no\r\n * conflicts with other clients writing to the same location at the same time.\r\n *\r\n * To accomplish this, you pass `runTransaction()` an update function which is\r\n * used to transform the current value into a new value. If another client\r\n * writes to the location before your new value is successfully written, your\r\n * update function will be called again with the new current value, and the\r\n * write will be retried. This will happen repeatedly until your write succeeds\r\n * without conflict or you abort the transaction by not returning a value from\r\n * your update function.\r\n *\r\n * Note: Modifying data with `set()` will cancel any pending transactions at\r\n * that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to update the same data.\r\n *\r\n * Note: When using transactions with Security and Firebase Rules in place, be\r\n * aware that a client needs `.read` access in addition to `.write` access in\r\n * order to perform a transaction. This is because the client-side nature of\r\n * transactions requires the client to read the data in order to transactionally\r\n * update it.\r\n *\r\n * @param ref - The location to atomically modify.\r\n * @param transactionUpdate - A developer-supplied function which will be passed\r\n * the current data stored at this location (as a JavaScript object). The\r\n * function should return the new value it would like written (as a JavaScript\r\n * object). If `undefined` is returned (i.e. you return with no arguments) the\r\n * transaction will be aborted and the data at this location will not be\r\n * modified.\r\n * @param options - An options object to configure transactions.\r\n * @returns A Promise that can optionally be used instead of the onComplete\r\n * callback to handle success and failure.\r\n */\r\nfunction runTransaction(ref, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ntransactionUpdate, options) {\r\n    var _a;\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('Reference.transaction', ref._path);\r\n    if (ref.key === '.length' || ref.key === '.keys') {\r\n        throw ('Reference.transaction failed: ' + ref.key + ' is a read-only object.');\r\n    }\r\n    var applyLocally = (_a = options === null || options === void 0 ? void 0 : options.applyLocally) !== null && _a !== void 0 ? _a : true;\r\n    var deferred = new Deferred();\r\n    var promiseComplete = function (error, committed, node) {\r\n        var dataSnapshot = null;\r\n        if (error) {\r\n            deferred.reject(error);\r\n        }\r\n        else {\r\n            dataSnapshot = new DataSnapshot$1(node, new ReferenceImpl(ref._repo, ref._path), PRIORITY_INDEX);\r\n            deferred.resolve(new TransactionResult$1(committed, dataSnapshot));\r\n        }\r\n    };\r\n    // Add a watch to make sure we get server updates.\r\n    var unwatcher = onValue(ref, function () { });\r\n    repoStartTransaction(ref._repo, ref._path, transactionUpdate, promiseComplete, unwatcher, applyLocally);\r\n    return deferred.promise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    function OnDisconnect(_delegate) {\r\n        this._delegate = _delegate;\r\n    }\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        validateCallback('OnDisconnect.cancel', 'onComplete', onComplete, true);\r\n        var result = this._delegate.cancel();\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateCallback('OnDisconnect.remove', 'onComplete', onComplete, true);\r\n        var result = this._delegate.remove();\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateCallback('OnDisconnect.set', 'onComplete', onComplete, true);\r\n        var result = this._delegate.set(value);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateCallback('OnDisconnect.setWithPriority', 'onComplete', onComplete, true);\r\n        var result = this._delegate.setWithPriority(value, priority);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateCallback('OnDisconnect.update', 'onComplete', onComplete, true);\r\n        var result = this._delegate.update(objectToMerge);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/* eslint-enable @typescript-eslint/no-explicit-any */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    function DataSnapshot(_database, _delegate) {\r\n        this._database = _database;\r\n        this._delegate = _delegate;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this._delegate.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this._delegate.exportVal();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this._delegate.toJSON();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @returns Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return this._delegate.exists();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param path - Path to a child.\r\n     * @returns DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (path) {\r\n        validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        path = String(path);\r\n        validatePathString('DataSnapshot.child', 'path', path, false);\r\n        return new DataSnapshot(this._database, this._delegate.child(path));\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param path - Path to a child.\r\n     * @returns Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (path) {\r\n        validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 'path', path, false);\r\n        return this._delegate.hasChild(path);\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @returns The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        return this._delegate.priority;\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each child.\r\n     * @returns True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        validateCallback('DataSnapshot.forEach', 'action', action, false);\r\n        return this._delegate.forEach(function (expDataSnapshot) {\r\n            return action(new DataSnapshot(_this._database, expDataSnapshot));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @returns True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        return this._delegate.hasChildren();\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this._delegate.key;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @returns The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this._delegate.size;\r\n    };\r\n    /**\r\n     * @returns The Firebase reference for the location this snapshot's data came\r\n     * from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return new Reference(this._database, this._delegate.ref);\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(database, _delegate) {\r\n        this.database = database;\r\n        this._delegate = _delegate;\r\n    }\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        var _this = this;\r\n        var _a;\r\n        validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateCallback('Query.on', 'callback', callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        var valueCallback = function (expSnapshot, previousChildName) {\r\n            callback.call(ret.context, new DataSnapshot(_this.database, expSnapshot), previousChildName);\r\n        };\r\n        valueCallback.userCallback = callback;\r\n        valueCallback.context = ret.context;\r\n        var cancelCallback = (_a = ret.cancel) === null || _a === void 0 ? void 0 : _a.bind(ret.context);\r\n        switch (eventType) {\r\n            case 'value':\r\n                onValue(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_added':\r\n                onChildAdded(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_removed':\r\n                onChildRemoved(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_changed':\r\n                onChildChanged(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_moved':\r\n                onChildMoved(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            default:\r\n                throw new Error(errorPrefix('Query.on', 'eventType') +\r\n                    'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                    '\"child_changed\", or \"child_moved\".');\r\n        }\r\n    };\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', eventType, true);\r\n        validateCallback('Query.off', 'callback', callback, true);\r\n        validateContextObject('Query.off', 'context', context, true);\r\n        if (callback) {\r\n            var valueCallback = function () { };\r\n            valueCallback.userCallback = callback;\r\n            valueCallback.context = context;\r\n            off(this._delegate, eventType, valueCallback);\r\n        }\r\n        else {\r\n            off(this._delegate, eventType);\r\n        }\r\n    };\r\n    /**\r\n     * Get the server-value for this query, or return a cached value if not connected.\r\n     */\r\n    Query.prototype.get = function () {\r\n        var _this = this;\r\n        return get(this._delegate).then(function (expSnapshot) {\r\n            return new DataSnapshot(_this.database, expSnapshot);\r\n        });\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     */\r\n    Query.prototype.once = function (eventType, callback, failureCallbackOrContext, context) {\r\n        var _this = this;\r\n        validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateCallback('Query.once', 'callback', callback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context);\r\n        var deferred = new Deferred();\r\n        var valueCallback = function (expSnapshot, previousChildName) {\r\n            var result = new DataSnapshot(_this.database, expSnapshot);\r\n            if (callback) {\r\n                callback.call(ret.context, result, previousChildName);\r\n            }\r\n            deferred.resolve(result);\r\n        };\r\n        valueCallback.userCallback = callback;\r\n        valueCallback.context = ret.context;\r\n        var cancelCallback = function (error) {\r\n            if (ret.cancel) {\r\n                ret.cancel.call(ret.context, error);\r\n            }\r\n            deferred.reject(error);\r\n        };\r\n        switch (eventType) {\r\n            case 'value':\r\n                onValue(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_added':\r\n                onChildAdded(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_removed':\r\n                onChildRemoved(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_changed':\r\n                onChildChanged(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_moved':\r\n                onChildMoved(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            default:\r\n                throw new Error(errorPrefix('Query.once', 'eventType') +\r\n                    'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                    '\"child_changed\", or \"child_moved\".');\r\n        }\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, limitToFirst(limit)));\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, limitToLast(limit)));\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByChild(path)));\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByKey()));\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByPriority()));\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByValue()));\r\n    };\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, startAt(value, name)));\r\n    };\r\n    Query.prototype.startAfter = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.startAfter', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, startAfter(value, name)));\r\n    };\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, endAt(value, name)));\r\n    };\r\n    Query.prototype.endBefore = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.endBefore', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, endBefore(value, name)));\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, equalTo(value, name)));\r\n    };\r\n    /**\r\n     * @returns URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this._delegate.toString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this._delegate.toJSON();\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error);\r\n        }\r\n        return this._delegate.isEqual(other._delegate);\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param fnName - The function name (on or once)\r\n     *\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: undefined, context: undefined };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            validateCallback(fnName, 'cancel', ret.cancel, true);\r\n            ret.context = context;\r\n            validateContextObject(fnName, 'context', ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(errorPrefix(fnName, 'cancelOrContext') +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return new Reference(this.database, new ReferenceImpl(this._delegate._repo, this._delegate._path));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\r\nvar Reference = /** @class */ (function (_super) {\r\n    __extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     */\r\n    function Reference(database, _delegate) {\r\n        var _this = _super.call(this, database, new QueryImpl(_delegate._repo, _delegate._path, new QueryParams(), false)) || this;\r\n        _this.database = database;\r\n        _this._delegate = _delegate;\r\n        return _this;\r\n    }\r\n    /** @returns {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        return this._delegate.key;\r\n    };\r\n    Reference.prototype.child = function (pathString) {\r\n        validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        return new Reference(this.database, child(this._delegate, pathString));\r\n    };\r\n    /** @returns {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parent = this._delegate.parent;\r\n        return parent ? new Reference(this.database, parent) : null;\r\n    };\r\n    /** @returns {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        return new Reference(this.database, this._delegate.root);\r\n    };\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateCallback('Reference.set', 'onComplete', onComplete, true);\r\n        var result = set(this._delegate, newVal);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.update = function (values, onComplete) {\r\n        validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        if (Array.isArray(values)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < values.length; ++i) {\r\n                newObjectToMerge['' + i] = values[i];\r\n            }\r\n            values = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateWritablePath('Reference.update', this._delegate._path);\r\n        validateCallback('Reference.update', 'onComplete', onComplete, true);\r\n        var result = update(this._delegate, values);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateCallback('Reference.setWithPriority', 'onComplete', onComplete, true);\r\n        var result = setWithPriority(this._delegate, newVal, newPriority);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.remove = function (onComplete) {\r\n        validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateCallback('Reference.remove', 'onComplete', onComplete, true);\r\n        var result = remove(this._delegate);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        var _this = this;\r\n        validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateCallback('Reference.transaction', 'transactionUpdate', transactionUpdate, false);\r\n        validateCallback('Reference.transaction', 'onComplete', onComplete, true);\r\n        validateBoolean('Reference.transaction', 'applyLocally', applyLocally, true);\r\n        var result = runTransaction(this._delegate, transactionUpdate, {\r\n            applyLocally: applyLocally\r\n        }).then(function (transactionResult) {\r\n            return new TransactionResult(transactionResult.committed, new DataSnapshot(_this.database, transactionResult.snapshot));\r\n        });\r\n        if (onComplete) {\r\n            result.then(function (transactionResult) {\r\n                return onComplete(null, transactionResult.committed, transactionResult.snapshot);\r\n            }, function (error) { return onComplete(error, false, null); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateCallback('Reference.setPriority', 'onComplete', onComplete, true);\r\n        var result = setPriority(this._delegate, priority);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        var _this = this;\r\n        validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateCallback('Reference.push', 'onComplete', onComplete, true);\r\n        var expPromise = push(this._delegate, value);\r\n        var promise = expPromise.then(function (expRef) { return new Reference(_this.database, expRef); });\r\n        if (onComplete) {\r\n            promise.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        var result = new Reference(this.database, expPromise);\r\n        result.then = promise.then.bind(promise);\r\n        result.catch = promise.catch.bind(promise, undefined);\r\n        return result;\r\n    };\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this._delegate._path);\r\n        return new OnDisconnect(new OnDisconnect$1(this._delegate._repo, this._delegate._path));\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     */\r\n    function Database(_delegate, app) {\r\n        var _this = this;\r\n        this._delegate = _delegate;\r\n        this.app = app;\r\n        this.INTERNAL = {\r\n            delete: function () { return _this._delegate._delete(); }\r\n        };\r\n    }\r\n    /**\r\n     * Modify this instance to communicate with the Realtime Database emulator.\r\n     *\r\n     * <p>Note: This method must be called before performing any other operation.\r\n     *\r\n     * @param host - the emulator host (ex: localhost)\r\n     * @param port - the emulator port (ex: 8080)\r\n     * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n     */\r\n    Database.prototype.useEmulator = function (host, port, options) {\r\n        if (options === void 0) { options = {}; }\r\n        connectDatabaseEmulator(this._delegate, host, port, options);\r\n    };\r\n    Database.prototype.ref = function (path) {\r\n        validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            var childRef = refFromURL(this._delegate, path.toString());\r\n            return new Reference(this, childRef);\r\n        }\r\n        else {\r\n            var childRef = ref(this._delegate, path);\r\n            return new Reference(this, childRef);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @returns Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        var apiName = 'database.refFromURL';\r\n        validateArgCount(apiName, 1, 1, arguments.length);\r\n        var childRef = refFromURL(this._delegate, url);\r\n        return new Reference(this, childRef);\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        return goOffline(this._delegate);\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        return goOnline(this._delegate);\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: serverTimestamp(),\r\n        increment: function (delta) { return increment(delta); }\r\n    };\r\n    return Database;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    var connection = ref._delegate._repo.persistentConnection_;\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    connection.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    repoStats(ref._delegate._repo, showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    repoStatsIncrementCounter(ref._delegate._repo, metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref._delegate._repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return repoInterceptServerData(ref._delegate._repo, callback);\r\n};\r\n/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app - A valid FirebaseApp-like object\r\n * @param url - A valid Firebase databaseURL\r\n * @param version - custom version e.g. firebase-admin version\r\n * @param customAuthImpl - custom auth implementation\r\n */\r\nfunction initStandalone(_a) {\r\n    var app = _a.app, url = _a.url, version = _a.version, customAuthImpl = _a.customAuthImpl, namespace = _a.namespace, _b = _a.nodeAdmin, nodeAdmin = _b === void 0 ? false : _b;\r\n    setSDKVersion(version);\r\n    /**\r\n     * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n     * any actual function.\r\n     */\r\n    var authProvider = new Provider('auth-internal', new ComponentContainer('database-standalone'));\r\n    authProvider.setComponent(new Component('auth-internal', function () { return customAuthImpl; }, \"PRIVATE\" /* PRIVATE */));\r\n    return {\r\n        instance: new Database(repoManagerDatabaseFromApp(app, authProvider, \r\n        /* appCheckProvider= */ undefined, url, nodeAdmin), app),\r\n        namespace: namespace\r\n    };\r\n}\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData,\n  initStandalone: initStandalone\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        if (hash !== undefined) {\r\n            hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, onComplete, hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\nvar ConnectionTarget = RepoInfo;\r\nvar queryIdentifier = function (query) {\r\n    return query._delegate._queryIdentifier;\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    repoManagerForceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // set SDK_VERSION\r\n    setSDKVersion(instance.SDK_VERSION);\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerComponent(new Component('database', function (container, _a) {\r\n        var url = _a.instanceIdentifier;\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        var authProvider = container.getProvider('auth-internal');\r\n        var appCheckProvider = container.getProvider('app-check-internal');\r\n        return new Database(repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url), app);\r\n    }, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(\r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        DataSnapshot: DataSnapshot,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    })\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n    if (isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexport { DataSnapshot, Database, OnDisconnect, Query, Reference, ServerValue, enableLogging, registerDatabase };\n//# sourceMappingURL=index.esm.js.map\n"],"names":["SDK_VERSION","setSDKVersion","version","id","DOMStorageWrapper","domStorage_","this","prefix_","prototype","set","key","value","removeItem","prefixedName_","setItem","get","storedVal","getItem","remove","name","toString","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","LUIDGenerator","sha1","str","utf8Bytes","update","sha1Bytes","digest","encodeByteArray","buildLogMessage_","varArgs","_i","arguments","length","message","i","arg","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","logLevel","VERBOSE","log","bind","logWrapper","prefix","error","fatal","Error","warn","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","fn","hasOwnProperty","doubleToIEEE754String","v","s","f","ln","bias","Infinity","Math","abs","pow","min","floor","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","INTEGER_REGEXP_","RegExp","INTEGER_32_MIN","INTEGER_32_MAX","test","intVal","exceptionGuard","setTimeout","stack","setTimeoutNonBlocking","time","timeout","AppCheckTokenProvider","appName_","appCheckProvider","_this","appCheck","getImmediate","optional","then","getToken","forceRefresh","Promise","resolve","reject","addTokenChangeListener","listener","_a","addTokenListener","notifyForInvalidToken","FirebaseAuthTokenProvider","firebaseOptions_","authProvider_","auth_","onInit","auth","catch","code","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","EmulatorTokenProvider","accessToken","OWNER","PROTOCOL_VERSION","FORGE_DOMAIN_RE","APP_CHECK_TOKEN_PARAM","WEBSOCKET","LONG_POLLING","RepoInfo","host","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","_host","_domain","indexOf","internalHost","isCacheableHost","isCustomHost","Object","defineProperty","newHost","enumerable","configurable","toURLString","protocol","query","repoInfoConnectionURL","repoInfo","type","params","connURL","repoInfoNeedsQueryParam","pairs","StatsCollection","counters_","incrementCounter","amount","collections","reporters","statsManagerGetCollection","hashString","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","callback","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","FIREBASE_LONGPOLL_START_PARAM","BrowserPollConnection","connId","applicationId","appCheckToken","authToken","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","document","readyState","called_1","wrappedFn_1","body","addEventListener","attachEvent","executeWhenDOMReady","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","random","uniqueCallbackIdentifier","location","hostname","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","href","Windows","UI","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","MAX_URL_DATA_SIZE","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","domain","iframeContents","doc","write","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","size","theURL","curDataString","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","add","doNewRequest","delete","keepaliveTimeout","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","options","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","userAgent","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","String","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","e_1","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","_b","ALL_TRANSPORTS","_c","next","done","transport","e_1_1","return","call","initialTransport","upgradeTransport","Connection","repoInfo_","applicationId_","appCheckToken_","authToken_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","reason","ServerActions","put","pathString","onComplete","hash","merge","refreshAuthToken","token","refreshAppCheckToken","onDisconnectPut","onDisconnectMerge","onDisconnectCancel","reportStats","stats","EventEmitter","allowedEvents_","listeners_","trigger","eventType","listeners","context","on","validateEventType_","eventData","getInitialEvent","off","splice","find","et","OnlineMonitor","_super","online_","getInstance","currentlyOnline","MAX_PATH_DEPTH","MAX_PATH_LENGTH_BYTES","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","newEmptyPath","pathGetFront","path","pathGetLength","pathPopFront","pathGetBack","pathSlice","begin","slice","pathParent","pieces","pathChild","childPathObj","childPieces","pathIsEmpty","newRelativePath","outerPath","innerPath","outer","inner","pathCompare","left","right","leftKeys","rightKeys","cmp","pathEquals","other","j","pathContains","ValidationPath","errorPrefix_","parts_","byteLength_","max","validationPathCheckValid","validationPath","validationPathToErrorString","__EMPTY_NODE","MAX_NODE$2","VisibilityMonitor","hidden","visibilityChange","visible_","visible","RECONNECT_MIN_DELAY","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","appCheckTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","Map","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","forceTokenRefresh_","invalidAuthTokenCount_","invalidAppCheckTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","onVisible_","onOnline_","action","onResponse","curReqNum","r","initConnection_","deferred","request","p","_path","q","_queryObject","outstandingGet","index","undefined","sendGet_","promise","listen","currentHashFn","tag","queryId","_queryIdentifier","has","_queryParams","isDefault","loadsAllData","listenSpec","hashFn","sendListen_","req","status","warnOnListenWarnings_","removeListen_","warnings","indexSpec","getIndex","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","tryAppCheck","token_1","authMethod","requestData","cred","res","onAuthRevoked_","onAppCheckRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","response","putInternal","sendPut_","queued","result","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","scheduleConnect_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage","onReady","onDisconnect_1","canceled_1","connection_1","closeFn","sendRequestFn","error_1","label","nextConnectionId_","trys","all","sent","interrupt","resume","delta","serverTimeOffset","map","normalizedPathString","statusCode","explanation","e_2","values","_d","queries","_e","_f","e_2_1","clientName","replace","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","val","isDefinedOn","maxPost","makePost","indexValue","KEY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","isEmpty","getNext","pop","hasNext","peek","LLRBNode","color","RED","SortedMap","EMPTY_NODE","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","__childrenNodeConstructor","nodeFromJSON$1","MAX_NODE$1","priorityHashText","priority","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","exportFormat","getValue","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","equals","_defaultIndexMap","PriorityIndex","aPriority","bPriority","indexCmp","PRIORITY_INDEX","LOG_2","Base12Num","num","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","root","base12","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","buildFrom12Array","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","indexName","newIndexSet","newIndexes","addToIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","ChildrenNode","children_","indexMap_","Default","child","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","setMaxNode","USE_HINZE","nodeFromJSON","json","node_1","childData","children_1","childrenHavePriority_1","childSet","sortedChildSet","setNodeFromJSON","lastPushTime","lastRandChars","PathIndex","indexPath_","extractChild","snap","aChild","bChild","valueNode","ValueIndex","VALUE_INDEX","PUSH_CHARS","nextPushId","now","duplicateTime","timeStampChars","charAt","successor","keyAsInt","i_1","source","sourcePlusOne","repeat","changeValue","snapshotNode","changeChildAdded","changeChildRemoved","changeChildChanged","oldSnap","IndexedFilter","index_","newChild","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","matches","filtered","self","hasStart","startName","getIndexStartName","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","indexCompare_1","foundStartPost","childKey","childSnap","changeAccumulator","indexCmp_1","oldEventCache","newChildNamedNode","windowBoundary","inRange","oldChildSnap","nextChild","getChildAfterChild","compareNext","newEventCache","QueryParams","limitSet_","startSet_","startNameSet_","startAfterSet_","endSet_","endNameSet_","endBeforeSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","hasStartAfter","hasEndBefore","hasLimit","hasAnchoredLimit","queryParamsStartAt","queryParams","newParams","queryParamsEndAt","queryParamsOrderBy","queryParamsToRestQueryStringParameters","orderBy","qs","queryParamsGetQueryObject","viewFrom","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","restRequest_","xhr","XMLHttpRequest","responseText","SnapshotHolder","rootNode_","getNode","updateSnapshot","newSnapshotNode","newSparseSnapshotTree","children","sparseSnapshotTreeRemember","sparseSnapshotTree","clear","sparseSnapshotTreeForget","tree","sparseSnapshotTreeForEachTree","prefixPath","func","forEach","sparseSnapshotTreeForEachChild","OperationType","StatsListener","collection_","last_","newStats","stat","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","reportedStats","haveStatsToReport","newOperationSourceServerTaggedQuery","fromUser","fromServer","tagged","emptyChildrenSingleton","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","EventGenerator","query_","eventGeneratorGenerateEventsForType","eventGenerator","events","changes","registrations","eventCache","filteredChanges","filter","change","aWrapped","bWrapped","eventGeneratorCompareChanges","materializedChange","prevName","eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","newViewCache","serverCache","viewCacheUpdateEventSnap","viewCache","eventSnap","complete","viewCacheUpdateServerSnap","serverSnap","viewCacheGetCompleteEventSnap","viewCacheGetCompleteServerSnap","ImmutableTree","fromObject","childPath","findRootMostMatchingPathAndValue","relativePath","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","CompoundWrite","writeTree_","empty","compoundWriteAddWrite","compoundWrite","rootmost","rootMostPath","newWriteTree","compoundWriteAddWrites","updates","newWrite","compoundWriteRemoveWrite","compoundWriteHasCompleteWrite","compoundWriteGetCompleteNode","compoundWriteGetCompleteChildren","compoundWriteChildCompoundWrite","shadowingNode","compoundWriteIsEmpty","compoundWriteApply","applySubtreeWrite","writeTree","priorityWrite_1","writeTreeChildWrites","newWriteTreeRef","writeTreeRemoveWrite","writeId","allWrites","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","writeTreeRecordContainsPath_","visibleWrites","writeTreeLayerTree_","writeTreeDefaultFilter_","lastWriteId","writeTreeResetTree_","writeRecord","writes","treeRoot","writePath","deepNode","writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","subMerge","writeTreeRefCalcCompleteEventCache","writeTreeRef","writeTreeRefCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","merge_1","writeTreeCalcCompleteEventChildren","writeTreeRefCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","writeTreeCalcEventCacheAfterServerOverwrite","writeTreeRefShadowingWrite","writeTreeShadowingWrite","writeTreeRefCalcIndexedSlice","completeServerData","toIterate","nodes","writeTreeCalcIndexedSlice","writeTreeRefCalcCompleteChild","existingServerCache","writeTreeCalcCompleteChild","writeTreeRefChild","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","getCompleteChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","viewProcessorApplyOperation","viewProcessor","oldViewCache","operation","writesCache","completeCache","filterServerNode","accumulator","overwrite","viewProcessorApplyUserOverwrite","viewProcessorApplyServerOverwrite","changedChildren","curViewCache","viewProcessorCacheHasChild","viewProcessorApplyUserMerge","viewProcessorApplyServerMerge","ackUserWrite","serverChildren","viewProcessorRevertUserWrite","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","viewProcessorAckUserWrite","oldServerNode","viewProcessorGenerateEventCacheAfterServerEvent","viewProcessorListenComplete","isLeafOrEmpty","oldCompleteSnap","viewProcessorMaybeAddValueEvent","changePath","oldEventSnap","completeEventChildren","completeNode","oldEventNode","updatedPriority","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","viewProcessorApplyMerge","viewMergeTree","childMergeTree","isUnknownDeepMerge","referenceConstructor$1","View","initialViewCache","eventRegistrations_","indexFilter","processor_","newViewProcessor","initialServerCache","initialEventCache","eventGenerator_","viewGetCompleteServerCache","view","cache","viewIsEmpty","viewRemoveEventRegistration","eventRegistration","cancelError","cancelEvents","path_1","maybeEvent","createCancelEvent","remaining","existing","hasAnyCallback","concat","viewApplyOperation","viewGenerateEventsForChanges_","eventRegistrations","moves","eventGeneratorGenerateEventsForChanges","referenceConstructor","SyncPoint","views","syncPointApplyOperation","syncPoint","optCompleteServerCache","syncPointGetView","serverCacheComplete","eventCacheComplete","syncPointAddEventRegistration","viewAddEventRegistration","initialChanges","viewGetInitialEvents","syncPointRemoveEventRegistration","removed","hadCompleteView","syncPointHasCompleteView","entries","viewQueryId","_repo","syncPointGetQueryViews","e_3","e_3_1","syncPointGetCompleteServerCache","e_4","e_4_1","syncPointViewForQuery","syncPointGetCompleteView","syncPointViewExistsForQuery","e_5","e_5_1","syncTreeNextQueryTag_","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","syncTreeApplyUserOverwrite","syncTree","newData","writeTreeAddOverwrite","syncTreeApplyOperationToSyncPoints_","syncTreeApplyUserMerge","writeTreeAddMerge","changeTree","syncTreeAckUserWrite","record","writeTreeGetWrite","affectedTree_1","syncTreeApplyServerOverwrite","syncTreeRemoveEventRegistration","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","maybeChildSyncPoint","childMap","views_1","_key","childViews","syncTreeCollectDistinctViewsForSubTree_","newQuery","syncTreeCreateListenerForView_","startListening","syncTreeQueryForListening_","syncTreeTagForQuery_","stopListening","queryToRemove","tagToRemove","syncTreeMakeQueryKey_","removedQuery","removedQueryKey","removedQueryTag","syncTreeRemoveTags_","syncTreeAddEventRegistration","foundAncestorDefaultView","pathToSyncPoint","sp","childSyncPoint","viewAlreadyExists","queryKey","queriesToStop","queries_1","childQueries","queryToStop","syncTreeSetupListener_","syncTreeCalcCompleteEventCache","syncTreeGetServerValue","serverCacheNode","viewGetCompleteNode","syncTreeApplyOperationHelper_","syncPointTree","syncTreeApplyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","viewGetServerCache","syncTreeQueryKeyForTag_","syncTreeParseQueryKey_","queryPath","syncTreeApplyTaggedOperation_","syncTreeApplyTaggedListenComplete","syncTreeApplyListenComplete","toUpperCase","errorForServerCode","splitIndex","ExistingValueProvider","DeferredValueProvider","syncTree_","path_","generateWithValues","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","stringify","op","unused","existingNode","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","Tree","parent","childCount","treeSubTree","pathObj","treeGetValue","treeSetValue","treeUpdateParents","treeHasChildren","treeForEachChild","treeForEachDescendant","includeSelf","childrenFirst","treeGetPath","childEmpty","treeIsEmpty","childExists","treeUpdateChild","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidPriority","validateFirebaseDataArg","fnName","validateFirebaseData","errorPrefix","hasDotValue_1","hasActualChild_1","last","validationPathPush","validateFirebaseMergeDataArg","errorPrefix$1","mergePaths","curPath","prevPath","validateFirebaseMergePaths","validatePriority","validateKey","argumentName","validatePathString","validateRootPathString","validateWritablePath","validateUrl","parsedUrl","isValidRootPathString","EventQueue","eventLists_","recursionDepth_","eventQueueQueueEvents","eventQueue","eventDataList","currList","getPath","eventQueueRaiseEventsAtPath","eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","eventQueueRaiseEventsForChangedPath","changedPath","sentAll","eventList","eventListRaise","eventFn","getEventRunner","INTERRUPT_REASON","MAX_TRANSACTION_RETRIES","Repo","forceRestClient_","appCheckProvider_","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","transactionQueueTree_","persistentConnection_","repoStart","repo","appId","authOverride","search","isMerge","repoOnDataUpdate","repoOnConnectStatus","connectStatus","repoUpdateInfo","repoOnServerInfoUpdate","creatorFunction","statsReporter_","infoData_","infoSyncTree_","infoEvents","serverSyncTree_","repoServerTime","offset","repoGenerateServerValues","taggedChildren","raw","syncTreeApplyTaggedQueryMerge","taggedSnap","syncTreeApplyTaggedQueryOverwrite","syncTreeApplyServerMerge","repoRerunTransactions","repoLog","resolvedOnDisconnectTree","resolved","repoAbortTransactions","repoRunOnDisconnectEvents","repoGetNextWriteId","repoSetWithPriority","newVal","newNodeUnresolved","success","clearEvents","repoCallOnCompleteCallback","repoOnDisconnectCancel","repoOnDisconnectSet","repoRemoveEventCallbackForQuery","repoInterrupt","repoGetLatestState","excludeSets","repoSendReadyTransactions","repoPruneCompletedTransactionsBelowNode","queue","repoBuildTransactionQueue","every","transaction","setsToIgnore","txn","currentWriteId","latestState","snapToSend","latestHash","retryCount","currentOutputSnapshotRaw","dataToSend","pathToSend","callbacks","currentOutputSnapshotResolved","unwatcher","abortReason","repoSendTransactionQueue","rootMostTransactionNode","repoGetAncestorTransactionNode","abortTransaction","currentNode","currentInputSnapshot","newDataNode","oldWriteId","newNodeResolved","applyLocally","repoRerunTransactionQueue","transactionNode","transactionQueue","repoAggregateTransactionQueuesForNode","order","nodeQueue","to","treeForEachAncestor","repoAbortTransactionsOnNode","lastSent","parseRepoInfo","dataURL","parseDatabaseURL","scheme","subdomain","port","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","decodePath","queryString","results","segment","kv","decodeQuery","hostWithoutPort","dotInd","DataEvent","snapshot","ref","getEventType","exportVal","CancelEvent","CallbackContext","snapshotCallback","cancelCallback","onValue","expDataSnapshot","previousChildName","onCancel","hasCancelCallback","userCallback","OnDisconnect$1","OnDisconnect","cancel","wrapCallback","setWithPriority","repoOnDisconnectSetWithPriority","childrenToMerge","repoOnDisconnectUpdate","QueryImpl","_orderByCalled","ReferenceImpl","isEqual","sameRepo","samePath","sameQueryIdentifier","toJSON","encodeURIComponent","pathToUrlEncodedString","validateNoPreviousOrderByCall","validateQueryEndpoints","startNode","endNode","tooManyArgsError","wrongArgTypeError","validateLimit","parentPath","DataSnapshot$1","DataSnapshot","_node","_index","childRef","exists","hasChildren","db","_checkNotDeleted","_root","refFromURL","parsedURL","changedKey","changedValue","writeId_1","repoUpdate","cached","err","repoGetValue","ValueEventRegistration","callbackContext","ChildEventRegistration","eventToCheck","cancelCallbackOrListenOptions","onlyOnce","userCallback_1","onceCallback","dataSnapshot","container","repoAddEventCallbackForQuery","onChildAdded","onChildChanged","onChildMoved","onChildRemoved","expCallback","QueryConstraint","QueryEndAtConstraint","_value","_apply","QueryEndBeforeConstraint","QueryStartAtConstraint","QueryStartAfterConstraint","queryParamsStartAfter","QueryLimitToFirstConstraint","_limit","newLimit","QueryLimitToLastConstraint","QueryOrderByChildConstraint","parsedPath","QueryOrderByKeyConstraint","QueryOrderByPriorityConstraint","QueryOrderByValueConstraint","QueryEqualToValueConstraint","queryConstraints","queryImpl","queryConstraints_1","queryConstraints_1_1","syncPointSetReferenceConstructor","syncTreeSetReferenceConstructor","FIREBASE_DATABASE_EMULATOR_HOST_VAR","repos","useRestClient","repoManagerDatabaseFromApp","app","authProvider","dbUrl","databaseURL","projectId","isEmulator","dbEmulatorHost","authTokenProvider","appRepos","repoManagerCreateRepo","Database$1","Database","_repoInternal","_instanceStarted","_rootInternal","_delete","appName","apiName","connectDatabaseEmulator","tokenProvider","mockUserToken","repoManagerApplyEmulatorSettings","goOnline","SERVER_TIMESTAMP","TransactionResult$1","TransactionResult","committed","runTransaction","transactionUpdate","currentState","queueNode","priorityForNode","repoStartTransaction","_delegate","objectToMerge","newObjectToMerge","_database","getRef","Reference","Query","database","cancelCallbackOrContext","ret","getCancelAndContextArgs_","valueCallback","expSnapshot","validateEventType","once","failureCallbackOrContext","limitToFirst","limit","limitToLast","orderByChild","orderByKey","orderByPriority","orderByValue","startAt","startAfter","endAt","endBefore","equalTo","cancelOrContext","getKey","getParent","getRoot","bool","validateBoolean","transactionResult","setPriority","expPromise","thennablePushRef","pushRef","expRef","INTERNAL","useEmulator","goOffline","ServerValue","TIMESTAMP","increment","freeze","__proto__","forceLongPolling","forceWebSockets","setSecurityDebugCallback","showDelta","console","longestName","reduce","previousValue","currentValue","repoStats","statsIncrementCounter","metric","reporter","repoStatsIncrementCounter","interceptServerData","repoInterceptServerData","initStandalone","customAuthImpl","setComponent","instance","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","ConnectionTarget","TEST_ACCESS","hijackHash","newHash","oldPut","queryIdentifier","forceRestClient","repoManagerForceRestClient","registerComponent","instanceIdentifier","getProvider","setServiceProps","setMultipleInstances","registerVersion","module","exports","registerDatabase"],"sourceRoot":""}